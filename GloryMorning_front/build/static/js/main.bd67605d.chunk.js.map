{"version":3,"sources":["components/Board/WriteBoard/WriteBoard.module.css","components/Timer/TimerItem/TimerItem.js","components/Timer/TimerView/TimerView.js","components/Calender/CalenderItem/CalenderItem.js","components/Calender/CalenderList/CalenderList.js","components/Calender/CalenderTable/CalenderTable.js","components/WordItem/WordItem.js","components/GoodWordItemList/GoodWordItemList.js","components/GoodWordInput/GoodWordInput.js","components/EditableElement/EditableElement.js","components/ElementTest.js","components/EditView/EditView.js","components/CarouselSlide.js","components/Chart/WeatherChart/TemperatureChart/TemperatureChart.js","components/CasTest.js","components/Chart/WeatherChart/RainChart/RainChart.js","components/Chart/WeatherChart/HumidityChart/HumidityChart.js","components/Edit/EditComponentList/EditComponentList.js","App.js","lib/authHelpers.js","lib/api/api.js","lib/api/memberApi.js","history.js","components/WithAuth.js","components/Login/Login.js","lib/api/boardApi.js","components/Notice/Notice.js","components/Member/PasswordChange/PasswordChange.js","components/Member/MyPage/MyPage.js","components/Board/DateTimePicker/DateTimePicker.js","components/Board/EditBoard/EditBoard.js","components/Editer/Editer.js","components/Board/WriteBoard/WriteBoard.js","components/Board/Prompt/Prompt.js","components/StyleComponent/StyledLink/StyledLink.js","components/Board/BoardView/BoardView.js","components/Board/BoardItem/BoardItem.js","components/Board/Board/Board.js","components/Board/BoardCardItem/BoardCardItem.js","components/Board/BoardCard/BoardCard.js","components/Preview.js","components/Board/PostsIndexBox/PostsIndexBox.js","components/Board/BoardCardView/BoardCardView.js","components/StyleComponent/CustomizedTooltips/CustomizedTooltips.js","stores/edit.js","components/Board/WriteBoardCard/WriteBoardCard.js","routes/dashboard.js","components/SideBar/SideBar.js","layouts/DashBoard/DashBoard.js","shared/App.js","client/Root.js","stores/word.js","stores/weather.js","stores/timer.js","stores/calender.js","stores/board.js","index.js","stores/index.js","components/Board/EditBoard/EditBoard.module.css","layouts/DashBoard/DashBoard.module.css","components/Member/MyPage/MyPage.module.css","components/Calender/CalenderItem/CalenderItem.module.css","components/Member/PasswordChange/PasswordChange.module.css","components/SideBar/SideBar.module.css","components/EditView/EditView.module.css","components/Board/BoardItem/Board.module.css","configuration/clientConfig.js","components/Chart/WeatherChart/HumidityChart/HumidiyChart.module.css","components/Edit/EditComponentList/EditComponentList.module.css","components/Board/Board/Board.module.css","lib/helpers.js","components/Board/DateTimePicker/DateTimePicker.module.css","components/Notice/Notice.module.css","components/Board/Prompt/Prompt.module.css","components/Board/BoardCardView/BoardCardView.module.css","components/Board/WriteBoardCard/WriteBoardCard.module.css","components/Board/BoardView/BoardView.module.css"],"names":["module","exports","boardSelect","saveButton","cancleButton","editerContainer","jemokContainer","jemokItem","container","buttonContainer","TimerItem","state","checked","setTimer","timerSetting","_this","props","name","number","time","msg","handleChange","_this$props","timer","get","runTimer","timerMessage","switchChange","_this$props2","timerMap","startTimer","stopTimer","timerObj","this","_this2","console","log","_this$props3","index","_","isNil","react_default","a","createElement","className","remainTime","hour","minute","second","react_switch_default","onChange","onClick","test","Component","inject","_ref","setStartStopTimer","observer","TimerView","socket","setSocketConnection","Timer_TimerItem_TimerItem","CalenderItem","select","selectedItem","day","setSelectedArr","selectedArr","setState","_classNames","nowDate","holiday","tdClasses","classNames","Object","defineProperty","style","notpresentMonth","selectedTr","key","calender","month","CalenderList","weekArray","postsNum","notMonth","yearMonth","idx","list","map","item","Calender_CalenderItem_CalenderItem","now","moment","date","format","CalenderTable","boardList","pageCount","offset","viewing","year","parseInt","getDaysArrayByMonthBefore","left","daysInMonth","count","arrDays","current","push","getDaysArrayByMonthAfter","isHoliday","getDaysArrayByMonth","_this$state","str","beforeMonth","subtract","afterMonth","add","startOfMonth","startOf","firstDayNumber","endOf","concatBeforeMonth","reverse","slice","i","length","unshift","concatAfterMonth","arr","dayArr","info","objectSpread","handleDate","e","target","value","changeDate","_this$state2","nowYear","nowMonth","stateYear","stateMonth","_this$state3","monthArray","Calender_CalenderList_CalenderList","placeholder","Table","responsive","author","text","items","word","goodWordItems","itemList","components_WordItem_WordItem","stores","handleAuthorChange","handleTextChange","putWord","el","editPageFlag","searchComponentByName","Tag","helpers","isEmpty","TagName","classnames","dragHandle","id","data","wrapperid","position","right","top","cursor","ElementTest","getWeatherData","weatherData","isFetching","getWeather","setInterval","asyncToGenerator","regenerator_default","mark","_callee","chart","wrap","_context","prev","next","chartUpdate","stop","_x","apply","arguments","_callee2","response","_context2","axios","post","sent","refs","getChart","series","addPoint","x","y","update","t0","nextProps","nextState","allChartResizing","config","backgroundColor","events","title","credits","enabled","subtitle","xAxis","type","tickPixelInterval","yAxis","legend","layout","align","verticalAlign","plotOptions","label","connectorAllowed","color","pointStart","exporting","Date","getTime","Math","random","ReactHighcharts_default","ref","ResponsiveReactGridLayout","_ref3","weather","edit","WidthProvider","ReactGridLayout","EditView","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateDimensions","dataItem","cols","rowHeight","loadPage","window","addEventListener","onLayoutChange","handleResizeChildComponent","rglContainer","dropLayout","width","assign","useCSSTransforms","draggableHandle","resizableHandle","margin","onResize","page_number","onRemoveItem","src","altText","caption","captionHeader","CarouselSlide","activeIndex","bind","assertThisInitialized","previous","goToIndex","onExiting","onExited","animating","nextIndex","newIndex","slides","CarouselItem","alt","CarouselCaption","captionText","Carousel","CarouselIndicators","onClickHandler","CarouselControl","direction","directionText","TemperatureChart","isFetchingTemp","showLoading","hideLoading","temperatureData","tickInterval","labels","formatter","marker","lineWidth","lineColor","fillColor","dashStyle","zones","RainChart","isFetchingRain","rainData","opposite","tooltip","valueSuffix","HumidityChart","isFetchingHumi","humidityData","fontFamily","NotoSansKR","EditComponentList","collapse","toggle","mapToComponent","componentList","compName","EditableList_Component","addSelectedComponent","putComponentList","handlePage","Collapse","isOpen","App","height","Edit_EditComponentList_EditComponentList","components_EditView_EditView","Timer_TimerView_TimerView","Calender_CalenderTable_CalenderTable","process","AuthHelperMethods","domain","login","username","password","fetch","method","body","JSON","stringify","then","res","setToken","token","Promise","resolve","loggedIn","getToken","isTokenExpired","decoded","decode","exp","err","idToken","localStorage","setItem","getItem","logout","removeItem","getConfirm","answer","url","options","headers","Accept","Content-Type","_checkStatus","json","status","error","Error","statusText","getForgetPassword","emailConfig","cilentConfig","endpoint","api","sendMail","updatePassword","mem_email","mem_password_origin","mem_password_new_1","mem_password_new_2","tokenStr","x-access-token","concat","updateMemberSosok","mem_sosok_nm","getMemberInfo","mem_password","setMemberSignUp","mem_username","mem_gb_cd","mem_userid","createBrowserHistory","forceRefresh","withAuth","AuthComponent","Auth","authHelpers","_Component","AuthWrapped","_getPrototypeOf2","_len","args","Array","_key","confirm","loaded","_handleLogout","history","replace","inherits","createClass","blue","_console2","_len2","_key2","Login","phone","email","checkPassword","sosok_nm","inOutGubun","loginEmail","loginPassword","invaild","loginView","forgetPasswordView","forgetEmail","signUpClickHandler","LoginClickHandler","forgetEmailHandler","onInputchange","checkPasswordSame","changeViewHandler","checkValidationPassword","handleSignInFormSubmit","preventDefault","memberApi","abrupt","GB_CD","alert","sendMailToAdmin","emailFlag","admin","adminEmail","from","to","message","code","forgetPasswordClick","clearForm","handleEmailChange","handlePasswordChange","handleLoginFormSubmit","_callee3","cookies","_context3","faildLogin","setTimeout","gubunRadioChange","handleforgetPasswordFormSubmit","_callee4","resData","_context4","success","_this$state4","match","action","onSubmit","required","autocomplete","input","emailInput","passwordInput","float","Radio_default","paddingTop","imageUpload","get_server_time","getNoticeViewing","getBoardList","POSTS_NUM","setViewsUp","writePosts","BOARD_NUM","MEM_IDX","POSTS_JEMOK","POSTS_NAEYONG","THUMBNAIL","NOTICE_START","NOTICE_END","PRIME_YN","editPosts","deletePosts","ifPostsExist","getPostsSequence","getPosts","getPostsList","getNotice","MyButton","styled","Button","background","border","borderRadius","boxShadow","padding","Cookies","Notice","open","noticeContent","boardApi","result","getCookie","setCookie","expiredays","todayDate","setDate","getDate","set","expires","openModal","closeModal","postsNaeYong","reactjs_popup_es","close","modal","header","content","ReactHtmlParser","actions","buttonFooter","checkBox","Checkbox_default","closeBox","PasswordChange","passwordOrigin","passwordNewFirst","passwordNewSecond","showPasswordOrigin","showPasswordNewFirst","showPasswordNewSecond","tooltipOpenOrigin","tooltipOpenNewFirst","tooltipOpenNewSecond","targetInput","handleClickShowPassword","showPassword","toast","_assertThisInitialize","toolTipView","resInfo","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","clearInput","passwordChangeSetting","handleClickShowPasswordOrigin","handleClickShowPasswordNewFirst","handleClickShowPasswordNewSecond","_this$setState2","_this$setState3","classes","passwdChangeContainer","noValidate","autoComplete","Tooltip","innerClassName","arrowClassName","tooltip_success","placement","autohide","TextField_default","textField","InputProps","endAdornment","InputAdornment_default","IconButton_default","aria-label","VisibilityOff_default","Visibility_default","es_Button","outline","WithAuth","withStyles","theme","display","flexWrap","marginLeft","spacing","unit","marginRight","dense","marginTop","menu","fontawesome","library","faUserCircle","MyPage","passwordChangeSet","gubun","sosok","memberInfo","GB_CD_NM","MEM_EMAIL","MEM_SOSOK_NM","MEM_USERNAME","myPageContainer","outer","inner","centered","react_toastify","newestOnTop","rtl","pauseOnVisibilityChange","react_fontawesome_index_es","icon","size","Member_PasswordChange_PasswordChange","react","variant","readOnly","react_router_dom","DateTimePicker","fromTime","toTime","undefined","defalut_from","defalut_to","buttonClickName","componentNameList","toggleAll","handleFromValueChange","handleToValueChange","serverTime","thisTime","propsTo","propsFrom","_d","pickUpFromTo","SearchButtonClick","buttonName","beforeDate","afterDate","_beforeDate","_afterDate","_beforeDate2","_afterDate2","createURL","buttonClickDay","handleFromChange","handleToChange","showFromMonth","diff","getDayPicker","showMonth","modifiers","start","end","SearchClick","searchbar_name","DayPickerInput_default","inputProps","formatDate","parseDate","dayPickerProps","selectedDays","disabledDays","before","after","toMonth","numberOfMonths","locale","localeUtils","MomentLocaleUtils","onDayClick","getInput","focus","onDayChange","fromMonth","searchButtonClickContainer","searchButtonClick","searchButton","rc_tooltip_es","overlay","arrowContent","helpQuestion_container","cqmsCdrPurchaseManual","prevState","EditBoard","makeSelectOption","selectedOption","BOARD_NAME","filter","boardNum","selectHandleChange","handlePostsJemokChange","postsJemok","postsNaeyong","handleCancle","editNumber","ifExistRes","params","IFEXIST","setPosts","postsContent","postsPrimeYN","noticeStart","noticeEnd","isSearchable","isClearable","DateTimePicker_DateTimePicker_DateTimePicker","react_select_esm","Form","Input","react_quill_lib_default","hljs","configure","languages","CustomHeart","CustomToolbar","onClickRaw","defaultValue","persist","selected","Editer_CustomHeart","Size","Quill","import","whitelist","register","Font","Editor","editorHtml","rawHtml","showRaw","lineHeight","range","selectLocalImage","document","setAttribute","click","onchange","formData","files","FormData","append","imageHandler","image","callback","split","ext","quillRef","getEditor","getSelection","insertEmbed","modules","syntax","highlight","highlightAuto","toolbar","handlers","formats","testref","rawQuillRef","change","handleChangeRaw","handleClickShowRaw","Editer_CustomToolbar","scrollHeight","aria-hidden","React","_ref5","board","naeyong","jemok","handlePostsNameChange","sequence","isNull","SEQUENCE","mem_idx","Editer","MyButton2","Prompt","confirmDelete","onClose","Prompt_MyButton","StyledLink","Link","_templateObject","StyledLink_StyledLink","faEye","faPencilAlt","faCalendarAlt","primeYN","regDate","views","postsNumber","handleDeleteBoard","handleEditBoard","num","postContent","REG_DATE","VIEWS","memUsername","panel","panelHeading","Badge","fontSize","panelBody","headPostsName","contentText","boardButtonCompo","exact","Prompt_Prompt","faCheckCircle","faCheck","BoardItem","primeYn","NoticePosts","scope","tableItem","faEdit","PERPAGE","meta","posts","ceil","total_count","limit","handleWritePosts","handlePageClick","scroll","scrollTo","BoardItem_BoardItem","Notice_Notice","editButton","dist_default","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","BoardCardItem","gettext","viewText","editDate","thumbnail","BoardCard","handleScroll","isLast","isLoading","innerHeight","renderCount","documentElement","scrollTop","getOffset","setOffset","getPostsListForInf","offsetnow","getOrderRandom","floor","removeEventListener","setInitForInfScroll","frontList","allBoardList","sliceBoardList","sizeList","EDIT_DATE","Col","sm","order","BoardCardItem_BoardCardItem_BoardCardItem","renderList","Row","Container","Preview","updateCodeSyntaxHighlighting","querySelectorAll","forEach","block","highlightBlock","dangerouslySetInnerHTML","__html","parsedText","PostsIndexBox","headerListId","scrollToElement","ListGroupItem","BoardCardView","findHeadingTag","boardViewContent","cardviewWraapper","Preview_Preview","Board_PostsIndexBox_PostsIndexBox","arrowGenerator","&[x-placement*=\"bottom\"] $arrow","&::before","borderWidth","borderColor","&[x-placement*=\"top\"] $arrow","bottom","marginBottom","&[x-placement*=\"right\"] $arrow","&[x-placement*=\"left\"] $arrow","LayoutTemporaryStorage","CustomizedTooltips","arrowRef","handleArrowRef","node","Tooltip_default","lightTooltip","Button_default","button","Fragment","arrow","popper","arrowPopper","PopperProps","popperOptions","Boolean","element","bootstrapTooltip","bootstrapPopper","tooltipPlacementLeft","bootstrapPlacementLeft","tooltipPlacementRight","bootstrapPlacementRight","tooltipPlacementTop","bootstrapPlacementTop","tooltipPlacementBottom","bootstrapPlacementBottom","htmlPopper","htmlTooltip","Typography_default","palette","common","white","shadows","grey","borderStyle","black","maxWidth","typography","pxToRem","& b","fontWeight","fontWeightMedium","WriteBoardCard","init","selectThumbnail","thumbnailDisplayUrl","thumbnailContainer","postJemok","thumbnailImg","dashboardRoutes","sideView","path","sidebarName","navbarName","component","Dashboard","myPage","WriteBoard","Board","SideBar","openNav","getElementById","closeNav","routes","openSideBar","activeStyle","link","prop","sidenav","href","closebtn","main","zIndex","switchRoutes","react_router","redirect","DashBoard","wrapper","components_SideBar_SideBar","mainPanel","components_CarouselSlide","script","async","appendChild","Root","shared_App","WordStore","root","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","selectedItems","reduce","price","observable","lengthGoodWord","_this3","_this4","counter","exists","find","itemToTake","_this5","remove","computed","EditStore","handleResizable","flag","childs","getElementsByClassName","toConsumableArray","allChild","rect","getBoundingClientRect","targetDiv","saveToLocal","handleSavePage","clientConfig","user_id","component_list","toString","w","h","Highcharts","charts","some","userOptions","setSize","thisComponentName","tag","selectedId","timeStamp","Infinity","ListViewName","_ref2","initlayout","parse","_this6","_this7","reject","_this8","WeatherStore","makeTemperature","wantApi","timeList","temperatureList","chartData","humidityList","proPrecipitationList","precipitationList","proTemp","preTemp","parseFloat","loc","nowLocation","huminityData","TimerStore","clockObj","Map","io","chatSocket","on","emit","chatMessage","room","timerIdentifier","countdown","getTimeCovert","timerNumber","n","CalenderStore","BoardStore","imageUplaod","topPos","headerMap","headerList","headerListConcatId","offsetTop","childNodes","textContent","html","isEditingRaw","syncViews","fromRaw","_this9","_this10","_this11","URL","createObjectURL","_this12","_this13","_this14","_this15","_this16","_this17","_callee5","_context5","_this18","_callee6","_ref6","_context6","_this19","RootStore","ReactDOM","render","index_module","client_Root","contentContainer","componentContainer","react_diable_resizing","web","EditableList_Container","arrowIcon","keys","checkDateSame","thisDate","endDate","errorCode","empty","failure","socketFailure","getHash","require","createHash","digest","getRandomInt","min","max","isImageFormat","filename","checkFileFormat","checkLogin","userId","checkAuth","checkAdminUrl","checkMobile","navigator","userAgent","checkEmail","checkReqUserBrowser","req","includes","putInsideComma","len","point","SmallPoint","String","indexOf","substring","cutSmallPoint","pow","cutSmallPointUseString","splitList","floatCalculator","number1","number2","sum","E","Number","getMonthAgoFirst","formatDay","monthAgo","getDayAgo","dayAgo","getDayAfter","dayAfter","getSundayList","sundayList","beforeDateYear","afterDateYear","endOfMonth","weekday","findAndRemove","originalStr","wantRemoveStr","originStr","center","buttonComponent"],"mappings":"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","file":"static/js/main.bd67605d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"boardSelect\":\"WriteBoard_boardSelect__1vzns\",\"saveButton\":\"WriteBoard_saveButton__2XTvb\",\"cancleButton\":\"WriteBoard_cancleButton__CfKKE\",\"editerContainer\":\"WriteBoard_editerContainer__1GObW\",\"jemokContainer\":\"WriteBoard_jemokContainer__1RYAs\",\"jemokItem\":\"WriteBoard_jemokItem__5qTUP\",\"container\":\"WriteBoard_container__2gyVF\",\"buttonContainer\":\"WriteBoard_buttonContainer__1oWk0\"};","import React, { Component } from 'react'\r\nimport Switch from \"react-switch\";\r\nimport { observer, inject, } from 'mobx-react'\r\nimport './TimerItem.scss'\r\nimport _ from 'lodash'\r\nclass TimerItem extends Component {\r\n\r\n    state = { checked: false, };\r\n\r\n  componentDidMount(){\r\n    this.setTimer();\r\n  } \r\n  setTimer = () =>{\r\n    const { timerSetting } = this.props;\r\n    let timerObj = {\r\n      name  : 'number',\r\n      number : 1,\r\n      time : 1000,\r\n      msg : 'setting',\r\n      checked : false,\r\n    }\r\n    timerSetting(timerObj);\r\n  }\r\n\r\n  handleChange = (checked) => {\r\n    const {timer ,name, number} = this.props;\r\n    //name , number를  name= number , number = 1인걸로 \r\n    timer.get()\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  runTimer = () => {\r\n    let name = 'number';\r\n    let idx = 1;\r\n    let time = 1000;\r\n    const { timerMessage } = this.props;\r\n    timerMessage(name, idx, time);\r\n  }\r\n\r\n  switchChange = (checked) =>{\r\n    const { timerMap, \r\n            startTimer,\r\n            stopTimer } = this.props; \r\n    \r\n    timerMap.get(\"number_1\").checked = !checked\r\n    let timerObj =  timerMap.get(\"number_1\");\r\n    if(!checked){ //true면 실행 \r\n      startTimer(timerObj)\r\n    }else{ //false 면 stop\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    console.log('render')\r\n    const { index,timerMap } = this.props;\r\n    /* 초기 렌더링 오류 막기  */\r\n    if ( _.isNil(timerMap.get(\"number_1\"))){\r\n      return null;\r\n    }\r\n    let checked = timerMap.get(\"number_1\").checked;\r\n\r\n    return (\r\n      <div className = \"timer-wrapper\">\r\n        <div className = \"remain\">\r\n          {timerMap.get(\"number_1\").remainTime.hour}\r\n          {timerMap.get(\"number_1\").remainTime.minute}\r\n          {timerMap.get(\"number_1\").remainTime.second}\r\n          남은 시간: 00.00.00\r\n          </div>\r\n          <div>\r\n          <Switch\r\n              onChange={() => this.switchChange(checked)}\r\n              checked={_.isNil(checked) ? false : checked}\r\n              className=\"react-switch\"\r\n            />\r\n          </div>\r\n          <button onClick = {this.test}> 버튼 </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default inject(({ timer }) => ({\r\n  timerSetting : timer.timerSetting,\r\n  startTimer : timer.startTimer,\r\n  stopTimer : timer.stopTimer,\r\n  setStartStopTimer : timer.setStartStopTimer,\r\n  timerMap : timer.timerMap\r\n}))(observer(TimerItem));\r\n","import React, { Component } from 'react'\r\nimport TimerItem from '../TimerItem'\r\nimport io from 'socket.io-client';\r\nimport { observer, inject, } from 'mobx-react'\r\nclass TimerView extends Component {\r\n    state = {\r\n        socket : ''\r\n    }\r\n    componentDidMount(){\r\n        const {setSocketConnection} = this.props;\r\n        setSocketConnection();\r\n    }\r\n\r\n\r\n   render() {\r\n       const {stopTimer} = this.props;\r\n        return (\r\n            <div>\r\n                <TimerItem/>\r\n                <button onClick = { () => stopTimer('name',1)}> 버튼 클릭 </button>       \r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default inject(({ timer }) => ({\r\n    setSocketConnection : timer.setSocketConnection,\r\n    stopTimer : timer.stopTimer,\r\n  }))(observer(TimerView));","import React, { Component } from 'react'\r\nimport moment from 'moment'\r\nimport classNames from 'classnames'\r\nimport style from './CalenderItem.module.css'\r\nimport { observer, inject, } from 'mobx-react'\r\nclass CalenderItem extends Component {\r\n    state = {\r\n      select : false\r\n    }\r\n    selectedItem = (day) =>{\r\n      const {setSelectedArr, selectedArr} = this.props; \r\n      \r\n     // setSelectedArr(selectedArr[day]);\r\n      this.setState({\r\n        select : !this.state.select\r\n      })\r\n    }\r\n    render(){\r\n\r\n        const { day, nowDate,index, holiday } = this.props;\r\n        console.log(nowDate, holiday)\r\n\r\n        /* classNames 모듈 사용  */\r\n        let tdClasses = classNames({\r\n            [style.holiday] : holiday,\r\n            [style.notpresentMonth] : !nowDate, \r\n            [style.selectedTr]: this.state.select }\r\n          );\r\n\r\n        return(\r\n            <td onClick ={() =>this.selectedItem(day)}\r\n                key = {day} \r\n                name = {day}\r\n                className = { tdClasses }>\r\n                {day}   \r\n            </td>\r\n        ) \r\n    }\r\n}\r\n\r\nexport default inject(({ calender }) => ({\r\n    month : calender.month,\r\n    selectedArr : calender.selectedArr,\r\n    setSelectedArr : calender.setSelectedArr,\r\n  }))(observer( CalenderItem));","import React, { Component } from 'react'\r\nimport moment from 'moment'\r\nimport classNames from 'classnames'\r\n\r\nimport CalenderItem from '../CalenderItem'\r\nimport { observer, inject, } from 'mobx-react'\r\n// class Items extends Component {\r\n//     state = {\r\n//       select : false\r\n//     }\r\n//     selectedItem = (day) =>{\r\n//       const {selectedArr} = this.props; \r\n\r\n//       this.setState({\r\n//         select : !this.state.select\r\n//       })\r\n//     }\r\n//     render(){\r\n\r\n//         const { day, nowDate,index, holiday } = this.props;\r\n//         console.log(nowDate, holiday)\r\n\r\n//         /* classNames 모듈 사용  */\r\n//         let tdClasses = classNames({\r\n//             [style.holiday] : holiday,\r\n//             [style.notpresentMonth] : !nowDate, \r\n//             [style.selectedTr]: this.state.select }\r\n//           );\r\n\r\n//         return(\r\n//             <td onClick ={() =>this.selectedItem(day)}\r\n//                 key = {day} \r\n//                 name = {day}\r\n//                 className = { tdClasses }>\r\n//                 {day}   \r\n//             </td>\r\n//         ) \r\n//     }\r\n// }\r\n\r\nclass CalenderList extends Component {\r\n  render() {\r\n\r\n   const {  postsNum,\r\n            index,\r\n            notMonth,\r\n            yearMonth,\r\n            weekArray,\r\n            idx\r\n        } = this.props;\r\n      //console.log(weekArray)\r\n      let list = weekArray.map((item, index) =>{\r\n        //console.log(item.now)\r\n        return ( <CalenderItem nowDate = {item.now}\r\n                        holiday = {item.holiday}\r\n                        day = {moment(item.date).format('MM-DD')}\r\n                        index = {index}/> )\r\n      })\r\n      //7개가 들어가 있어야함 \r\n     return (\r\n          <tr key = {idx}>\r\n            {list}    \r\n          </tr>\r\n    )\r\n  }\r\n}\r\n\r\nexport default inject(({ calender }) => ({\r\n  month : calender.month,\r\n  selectedArr : calender.selectedArr,\r\n  setSelectedArr : calender.setSelectedArr,\r\n}))(observer( CalenderList));\r\n\r\n","import React, { Component } from 'react'\r\nimport { Table, Input } from 'reactstrap';\r\nimport CalenderList from '../CalenderList';\r\nimport moment from 'moment'\r\nimport { observer, inject, } from 'mobx-react'\r\n\r\n\r\nclass CalenderTable extends Component {\r\n    state = {\r\n        boardList : [],\r\n        pageCount : 0,\r\n        offset : 0,\r\n        viewing : false,\r\n        year : parseInt( moment().format('YYYY') ), // 현재 년도 \r\n        month : parseInt( moment().format('M') ),\r\n        day : ''\r\n    }\r\n    componentDidMount(){\r\n     \r\n    }\r\n    //일단 두개로 분리 \r\n    //이전\r\n    getDaysArrayByMonthBefore = (month, left) => {\r\n        let daysInMonth = moment(month, 'YYYY-MM').daysInMonth();\r\n        let count = daysInMonth - left\r\n        let arrDays = [];\r\n        while(daysInMonth !== count ) {\r\n          let current = moment(month).date(daysInMonth);\r\n          arrDays.push(current);\r\n          daysInMonth--;\r\n        }\r\n        return arrDays;\r\n    }\r\n    //이후 \r\n    getDaysArrayByMonthAfter = (month, left) => {\r\n        let arrDays = [];\r\n        let idx = 1;\r\n        while(idx !== left  ) {\r\n          let current = moment(month).date(idx);\r\n          arrDays.push(current);\r\n          idx++;\r\n        }\r\n        console.log(\"AFTER arrDAYS\" ,arrDays)\r\n        return arrDays;\r\n    }\r\n\r\n    //holiday 판별 \r\n    isHoliday = (date) =>{\r\n\r\n        //토요일, 일요일인 경우\r\n        //console.log(date)\r\n        let day = moment(date).format('dddd');\r\n        console.log(day)\r\n        if ( day === \"Sunday\" || day === \"Saturday\" ){\r\n            console.log('isHoliday')\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n         \r\n    }\r\n\r\n    getDaysArrayByMonth = () => {\r\n        const {year , month} = this.state; \r\n        let str = year + \"-\" + month\r\n        \r\n        let beforeMonth = moment(str).subtract(1, 'month').format('YYYY-MM');\r\n        let afterMonth = moment(str).add(1, 'month').format('YYYY-MM');\r\n        // console.log(beforeMonth)\r\n        // console.log(afterMonth)\r\n\r\n        //시작, 끝날짜 알기 \r\n        const startOfMonth = moment(str).startOf('month').format('dddd');\r\n        const endOfMonth   = moment(str).endOf('month').format('dddd');\r\n        \r\n        //첫째날 날짜 숫자로 환산\r\n        let firstDayNumber = moment(str).startOf('month').day();\r\n        // console.log(firstDayNumber)\r\n        // console.log(\"startOfMonth\",startOfMonth )\r\n        // console.log(\"beforeMonth\", endOfMonth)\r\n\r\n\r\n        let concatBeforeMonth = []\r\n        //시작 날짜가 일요일이 아닌경우 \r\n        // 월요일이 1이므로 //일요일이면 아무것도 추가할 필요없음 \r\n        if( startOfMonth !== \"Sunday\"){\r\n            console.log( firstDayNumber )\r\n            concatBeforeMonth= this.getDaysArrayByMonthBefore(beforeMonth,firstDayNumber);\r\n            console.log(\"concatBeforeMonth\", concatBeforeMonth)\r\n        }\r\n        //현재 날짜 \r\n        let daysInMonth = moment(str, 'YYYY-MM').daysInMonth();\r\n        let arrDays = [];\r\n\r\n        while(daysInMonth) {\r\n          let current = moment(str).date(daysInMonth);\r\n          arrDays.push({date : current , now : true });\r\n          daysInMonth--;\r\n        }\r\n\r\n        arrDays = arrDays.reverse();\r\n        console.log('arrDays!' , arrDays.slice())\r\n        for(let i = 0 ; i < concatBeforeMonth.length; i++){\r\n            arrDays.unshift({ date: concatBeforeMonth[i], now: false});\r\n        }\r\n\r\n\r\n\r\n        //6 * 7 = 42개\r\n        //앞에 더하고 42 - (더한값 ) = 를 다음달걸 붙히면 됌 \r\n        let left = 42 - ( arrDays.length - 1 );\r\n       // console.log(left);\r\n        let concatAfterMonth;\r\n        concatAfterMonth = this.getDaysArrayByMonthAfter(afterMonth, left);\r\n        for(let i = 0 ; i < concatAfterMonth.length; i++){\r\n            arrDays.push({ date : concatAfterMonth[i] , now: false});\r\n        }\r\n\r\n        let arr = []\r\n        let dayArr = []\r\n        let idx = 0;\r\n        //7단위로 나누기 \r\n        for(let i = 0; i < arrDays.length ; i++){\r\n            if( i % 7  === 0  && i !== 0){\r\n                dayArr.push(arr);\r\n                idx +=1;\r\n                arr = [];\r\n            }else if (i === arrDays.length-1){\r\n                dayArr.push(arr);\r\n            }\r\n            //console.log( this.isHoliday(arrDays[i].date) ? arrDays[i].concat({holiday : true}) : arrDays[i].concat({holiday : false}) ) \r\n            arr.push(arrDays[i]);\r\n        }\r\n       \r\n\r\n        dayArr = dayArr.map((arr) => {\r\n            console.log(arr)\r\n            return (\r\n             arr = arr.map((info) => this.isHoliday(info.date)\r\n                ? { ...info, holiday : true } // 새 객체를 만들어서 기존의 값과 전달받은 data 을 덮어씀\r\n                : { ...info, holiday : false } // 기존\r\n                )\r\n            )\r\n        });\r\n        console.log('fsdfdsfsdfdsf', dayArr)\r\n        console.log(dayArr)\r\n        return dayArr;\r\n    }\r\n\r\n\r\n\r\n    handleDate = (e) =>{\r\n        this.setState({\r\n            day : e.target.value\r\n        })\r\n    }\r\n    \r\n    changeDate = (e) =>{\r\n        const {year, month} = this.state;\r\n        console.log(year , \" \" , month)\r\n        let stateYear = year;\r\n        let stateMonth = month;\r\n        let nowYear;\r\n        let nowMonth;\r\n        console.log(e.target.name)\r\n        if ( e.target.name === 'before'){\r\n            if ( month - 1 === 0){\r\n                 nowYear = stateYear - 1; \r\n                 nowMonth = 12;\r\n            }else{\r\n                 nowYear = stateYear\r\n                 nowMonth = stateMonth - 1;\r\n            }\r\n        }else if ( e.target.name === 'after'){\r\n            if( month + 1 === 13 ){\r\n                 nowYear = stateYear + 1;\r\n                 nowMonth = 1\r\n            }else{\r\n                 nowYear = stateYear;\r\n                 nowMonth = stateMonth + 1 ;\r\n            }\r\n        }\r\n        console.log(nowYear, nowMonth)\r\n        this.setState({\r\n            year : nowYear,\r\n            month :nowMonth\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log('this.state.viewing ', this.state.viewing)\r\n        const { boardList, viewing } = this.state;\r\n        const { selectedArr } = this.props;\r\n        const monthArray = this.getDaysArrayByMonth();\r\n        console.log(monthArray)\r\n        const month = monthArray.map((item, idx) => { \r\n            console.log(\"item \", item)\r\n            return (<CalenderList weekArray ={item}\r\n                                  idx = {idx} \r\n                                />)\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <span>  </span>\r\n                <input placeholder ='YYYY-MM' \r\n                        onChange = {this.handleDate} \r\n                        value ={this.state.value}/>\r\n                <Table responsive >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>일</th>\r\n                            <th>월</th>\r\n                            <th>화</th>\r\n                            <th>수</th>\r\n                            <th>목</th>\r\n                            <th>금</th>\r\n                            <th>토</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                       {month}\r\n                    </tbody>\r\n                </Table>\r\n                <button onClick = {this.changeDate} name ='before' >좌측</button>\r\n                <button onClick = {this.changeDate} name= 'after' >우측</button>\r\n            </div>\r\n     )\r\n  }\r\n}\r\n\r\nexport default inject(({ calender }) => ({\r\n    month : calender.month,\r\n    selectedArr : calender.selectedArr,\r\n    setSelectedArr : calender.setSelectedArr,\r\n  }))(observer( CalenderTable));\r\n  ","import React from 'react'\r\nimport { observer } from 'mobx-react';\r\n\r\n\r\n\r\nconst WordItem = ({author, text}) =>{\r\n\r\n    return (\r\n        <div className =\"ShopItem\" >\r\n            <h4>{author}</h4>\r\n            <div>{text}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default observer(WordItem);","import React from 'react'\r\nimport WordItem from '../WordItem'\r\nimport { inject, observer } from 'mobx-react'; // 불러오기\r\n\r\nconst items = [\r\n    // {\r\n    //     author: '작가',\r\n    //     text : '1번',\r\n    // },\r\n    // {\r\n    //     author: '신라면',\r\n    //     text : '2번',\r\n    // },\r\n    // {\r\n    //     author: '포카칩',\r\n    //     text : '3번',\r\n    // },\r\n    // {\r\n    //     author: '새우깡',\r\n    //     text : '4번',\r\n    // }\r\n]\r\n\r\n\r\n// **** onPut 함수 추가됨\r\nconst GoodWordItemList = () => {\r\n    console.log('!!!!!!!oodWordItemList ', items)\r\n    const itemList = items.map(item => (\r\n      <WordItem item = {item}  key={item.name} />\r\n    ));\r\n    return <div>{itemList}</div>;\r\n  };\r\n  \r\n// **** inject, observer 적용 \r\n//코드 최하단에서 사용된 observer 가 observable 값이 변할 때 \r\n//컴포넌트의 forceUpdate 를 호출하게 함으로써 \r\n//자동으로 변화가 화면에 반영됩니다.\r\n\r\nexport default inject(({ word }) => ({\r\n    items: word.goodWordItems,\r\n  }))(observer(GoodWordItemList));\r\n\r\n","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\n//컴포넌트에서 스토어에 접근할수 있게해준다.\r\n// 정확히는 스토어에 있는 값을 컴포넌트의 props로 주입을 해준다.\r\n//@inject('counter')\r\n//컴포넌트를 해당 스토어를 props로 전달 받아서 사용 할 수 있게 됩니다. \r\n\r\n//***함수 형태로 파라미터를 전달해주면 특정 값만 받아올 수 있음  */\r\n//@inject('word')\r\n\r\n@inject(stores => ({\r\n    author : stores.word.author,\r\n    text : stores.word.text,\r\n    handleAuthorChange : stores.word.handleAuthorChange,\r\n    handleTextChange : stores.word.handleTextChange,\r\n    putWord : stores.word.putWord\r\n  }))\r\n\r\nclass GoodWordInput extends Component {\r\n  render() {\r\n      const { handleAuthorChange,\r\n              handleTextChange,\r\n              putWord,\r\n              author,\r\n                text} = this.props; \r\n     return (\r\n      <div>\r\n        <h3> Author </h3>\r\n        <input onChange = {handleAuthorChange}/>\r\n        <h3> Text </h3>\r\n        <input onChange = {handleTextChange} />\r\n        <button onClick = {() => putWord(author,text)} >등록</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoodWordInput;","import React, { Component } from 'react'\r\nimport classnames from 'classnames';\r\nimport { observer, inject } from 'mobx-react';\r\nimport helpers from '../../lib/helpers'\r\n@observer\r\nclass EditableElement extends Component {\r\n    \r\n  render() {\r\n    const { \r\n        el,\r\n        index,\r\n        editPageFlag, \r\n        searchComponentByName,\r\n         } = this.props;\r\n/*\r\n  createElement\r\n    state 값으로 유지중인 layout을 화면 상에 나타내기 위해 div 형태로 반환하는 함수이다.\r\n  */\r\n\r\n    const removeStyle = {\r\n        position: \"absolute\",\r\n        right: \"2px\",\r\n        top: 0,\r\n        cursor: \"pointer\"\r\n      };\r\n\r\n      console.log(editPageFlag)\r\n\r\n      console.log('el ', el.i)\r\n      let Tag = helpers.isEmpty(el.TagName) ? 'div' : searchComponentByName(this.state, el.TagName);\r\n      //let Tag = 'div'\r\n        return (     \r\n        <div className = {classnames({dragHandle: editPageFlag})}\r\n             key       = {el.i}>\r\n            <div className  = {'componentContainer'}\r\n                id         = {el.i}>\r\n            <Tag data = {el.i}\r\n                wrapperid = {el.i}\r\n                editPageFlag  = { editPageFlag }\r\n                />\r\n            </div>\r\n            {\r\n            editPageFlag  === true ?\r\n            (\r\n                <span\r\n                className = \"remove\"\r\n                style     = {removeStyle}\r\n                //onClick   = {onRemoveItem(this, el.i)}\r\n                >\r\n                x\r\n                </span>\r\n                ) :\r\n                (\r\n                <span></span>\r\n                )\r\n            }\r\n        </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default EditableElement;\r\n","import React, { Component } from 'react'\r\nimport {observer, inject} from 'mobx-react'\r\nimport ReactHighcharts from  'react-highcharts'\r\nimport RedrawOnPrint from 'react-highcharts/dist/RedrawOnPrint';\r\nimport axios from 'axios'\r\nlet a = 1;\r\n@observer\r\nclass ElementTest extends Component {  \r\n    componentDidMount(){\r\n       this.getWeatherData()\r\n    }\r\n   \r\n    getWeatherData = () => { \r\n        const {\r\n            isFetching , \r\n            getWeather,\r\n            weatherData\r\n         } = this.props;\r\n\r\n            //getWeather();\r\n\r\n            setInterval(async(chart) =>{\r\n                this.chartUpdate()\r\n            },1000);\r\n            console.log('weatherdata ', weatherData);\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        /* 현재 scatter data 랑 nextState.data랑 같으면 렌더링 X  */\r\n        if( a !==0 ){\r\n            console.log('dsadsad')\r\n            return true;\r\n        }else{\r\n            console.log('ddsd')\r\n            return false;\r\n\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        const {allChartResizing, weatherData} = this.props \r\n        console.log(\"componentDidUpdate\")\r\n        //allChartResizing()\r\n        \r\n\r\n    }\r\n    //차트업데이트는 컴포넌트 디두 업뎃을 안함 \r\n    chartUpdate = async() =>{\r\n            a=0;\r\n            //console.log(a.push(1))\r\n            try{\r\n            //const response = await axios.post('http://localhost:3031/api/weather/PYTHONTEST')\r\n            const response = await axios.post('http://localhost:3031/api/bus/get_data')\r\n            console.log(response)\r\n            let weatherData = response.data\r\n            //this.setWeatherData(response.data)\r\n\r\n    \r\n            let chart = this.refs.chart.getChart();\r\n           // var x = (new Date()).getTime(), // current time\r\n            //y = Math.random()+10;\r\n            chart.series[0].addPoint({x: weatherData[0], y: weatherData[1]});\r\n            console.log(chart.series[0].data.slice(0,19))\r\n            chart.series[0].update({\r\n                     data: chart.series[0].data.slice(chart.series[0].data.length-19,\r\n                        chart.series[0].data.length)\r\n             });\r\n            }\r\n            catch(e){\r\n              console.log(e)\r\n            }\r\n \r\n    //     console.log(weatherData)\r\n    //     let chart = this.refs.chart.getChart();\r\n    //    // var x = (new Date()).getTime(), // current time\r\n    //     //y = Math.random()+10;\r\n    //     chart.series[0].addPoint({x: weatherData[0], y: weatherData[1]});\r\n    //     // chart.series[0].update({\r\n        //     data: weatherData\r\n        // });\r\n    }\r\n\r\n  render() {\r\n      console.log('dddd')\r\n    const { wrapperid  } = this.props;\r\n\r\n   // console.log('weatherData ' )\r\n    const config = {\r\n      chart : {\r\n        //height: 100,\r\n        backgroundColor: 'none',\r\n        events: {\r\n           \r\n        }\r\n      },\r\n    title: {\r\n        text: 'Solar Employment Growth by Sector, 2010-2016'\r\n    },\r\n    id : wrapperid +'_c',\r\n    \r\n    credits: {\r\n        enabled: false\r\n    },\r\n    subtitle: {\r\n        text: 'Source: thesolarfoundation.com'\r\n    },\r\n    xAxis: {\r\n        type: 'datetime',\r\n        tickPixelInterval: 150\r\n    },\r\n    yAxis: {\r\n        title: {\r\n            text: 'Number of Employees'\r\n        }\r\n    },\r\n    legend: {\r\n        layout: 'vertical',\r\n        align: 'right',\r\n        verticalAlign: 'middle'\r\n    },\r\n\r\n    plotOptions: {\r\n        series: {\r\n            label: {\r\n                connectorAllowed: false\r\n            },\r\n            color: '#FF0000',\r\n            pointStart: 2010\r\n        }\r\n    },\r\n    exporting: {\r\n        enabled: false\r\n    },\r\n    series: [{\r\n        name: 'Installation',\r\n        data: (function () {\r\n            // generate an array of random data\r\n            var data = [],\r\n                time = (new Date()).getTime(),\r\n                i;\r\n\r\n            for (i = -19; i <= 0; i += 1) {\r\n                data.push({\r\n                    x: time + i * 1000,\r\n                    y: Math.random()\r\n                });\r\n            }\r\n            return data;\r\n        }())\r\n    }],\r\n\r\n    }\r\n    \r\n    return (\r\n\r\n        <div>\r\n        {/*<button onClick = {this.props.getWeather}>버튼 클릭 </button>*/}\r\n             <ReactHighcharts config = {config} ref= \"chart\" ></ReactHighcharts>\r\n        </div>\r\n    )\r\n  }\r\n}\r\nexport default inject(({ weather, edit }) => ({\r\n    isFetching : weather.isFetching,\r\n    getWeather : weather.getWeather,\r\n    weatherData : weather.weatherData,\r\n    allChartResizing : edit.allChartResizing\r\n    \r\n  }))(observer(ElementTest));\r\n\r\n","import React, { Component } from 'react'\r\nimport _ from \"lodash\";\r\nimport ReactGridLayout,{ WidthProvider} from \"react-grid-layout\";\r\nimport 'react-grid-layout/css/styles.css';\r\nimport 'react-resizable/css/styles.css';\r\nimport style from './EditView.module.css';\r\nimport { observer, inject, } from 'mobx-react'\r\nimport {  action } from 'mobx';\r\nimport EditableElement from '../EditableElement';\r\nimport ElementTest from '../ElementTest'\r\nimport classnames from 'classnames';\r\nconst ResponsiveReactGridLayout = WidthProvider(ReactGridLayout);\r\n\r\n\r\nclass EditView extends Component {\r\n    static get defaultProps(){\r\n        /* 여기서 layout에 대한 디폴트 크기를 조절함  */\r\n        return {\r\n          className: \"layout\",\r\n          cols: 36,\r\n          rowHeight: 1,\r\n\r\n        }\r\n      };\r\n    \r\n      constructor(props) {\r\n        super(props);\r\n        this.dataItem = []\r\n      }\r\n\r\n      componentDidMount(){\r\n        let { loadPage,\r\n        } = this.props;\r\n        loadPage();\r\n        window.addEventListener(\"resize\", this.updateDimensions);\r\n        //window.onresize = this.handleResizeEnd;\r\n      }\r\n      updateDimensions= () =>{\r\n        const {allChartResizing} = this.props;\r\n        console.log('im listening')\r\n        allChartResizing()\r\n      }\r\n      componentDidUpdate(){\r\n        let {allChartResizing} = this.props;\r\n        console.log(\"componentDidUpdate \")\r\n//        allChartResizing();\r\n        console.log('componentDidUpdate')\r\n        // if ( typeof window.CustomEvent === \"function\" ) return false;\r\n        // function CustomEvent ( event, params ) {\r\n        //        params = params || { bubbles: false, cancelable: false, detail: undefined };\r\n        //        var evt = document.createEvent( 'CustomEvent' );\r\n        //        evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );\r\n        //        return evt;\r\n        //      }\r\n        //      CustomEvent.prototype = window.Event.prototype;\r\n        //      window.CustomEvent = CustomEvent;\r\n       \r\n        //    let event = new CustomEvent(\"resize\");\r\n        //    // await setTimeout(() => {\r\n        //    //   window.dispatchEvent(event);\r\n        //    //   //window.removeEventListener('onresize',this.handleResizeEnd);\r\n        //    // },300)\r\n        //    window.dispatchEvent(event);\r\n         \r\n      }\r\n      render() {\r\n        console.log('editview render')\r\n        let { layout,\r\n              onLayoutChange,\r\n              editPageFlag,\r\n              createElement,\r\n              handleResizeChildComponent,\r\n               } = this.props;\r\n        // let layout = [\r\n        //         {i: 'a', x: 0, y: 0, w: 1, h: 2, static: true},\r\n        //         {i: 'b', x: 1, y: 0, w: 3, h: 2, minW: 2, maxW: 4},\r\n        //         {i: 'c', x: 4, y: 0, w: 1, h: 2}\r\n        //       ];\r\n        //       console.log('layout ' , layout)\r\n        return (\r\n          <div className = {style.rglContainer}>\r\n            <div className= {style.dropLayout} style ={{width: '100%'}}>\r\n              <ResponsiveReactGridLayout\r\n                id     = {'rgl'}\r\n                layout = { layout }\r\n                onLayoutChange     = {onLayoutChange}\r\n                useCSSTransforms   = {true}\r\n                draggableHandle=\".dragHandle\"\r\n                resizableHandle=\".resizeHandle\"\r\n                margin ={[25,25]}\r\n                onResize = {handleResizeChildComponent}\r\n                {...this.props}\r\n              >\r\n              { \r\n                layout.map(( el, index ) =>  createElement(el, index))\r\n              }\r\n         \r\n      \r\n              \r\n              </ResponsiveReactGridLayout>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n\r\n\r\n}\r\n\r\nexport default inject(({ edit }) => ({\r\n    index : edit.index,\r\n    layout: edit.layout,\r\n    page_number: edit.page_number,\r\n    editPageFlag : edit.editPageFlag,\r\n    loadPage : edit.loadPage,\r\n    onLayoutChange: edit.onLayoutChange,\r\n    createElement : edit.createElement,\r\n    onRemoveItem : edit.onRemoveItem,\r\n    allChartResizing : edit.allChartResizing,\r\n    handleResizeChildComponent : edit.handleResizeChildComponent,\r\n}))(observer(EditView));\r\n","import React, { Component } from 'react'\r\n\r\nimport {\r\n    Carousel,\r\n    CarouselItem,\r\n    CarouselControl,\r\n    CarouselIndicators,\r\n    CarouselCaption\r\n  } from 'reactstrap';\r\n  \r\n  const items = [\r\n    {\r\n      src: '/images/nightload.jpeg',\r\n      altText: '언젠간',\r\n      caption: '언젠가 닿을 수 있다',\r\n      captionHeader : '언젠가'\r\n    },\r\n    {\r\n      src: '/images/9b6c403aca6a07526762f16d2c1e0453.png',\r\n      altText: 'Slide 2',\r\n      caption: '한방울의 먹물보다 못하다',\r\n      captionHeader : '어떤 강렬한 기억도'\r\n    },\r\n    {\r\n      src: '/images/milkey.jpeg',\r\n       altText: 'Slide 3',\r\n      caption: '',\r\n      captionHeader : '조그만 노력이 태산이 된다'\r\n    }\r\n  ];\r\n  \r\n  class CarouselSlide extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { activeIndex: 0 };\r\n      this.next = this.next.bind(this);\r\n      this.previous = this.previous.bind(this);\r\n      this.goToIndex = this.goToIndex.bind(this);\r\n      this.onExiting = this.onExiting.bind(this);\r\n      this.onExited = this.onExited.bind(this);\r\n    }\r\n  \r\n    onExiting() {\r\n      this.animating = true;\r\n    }\r\n  \r\n    onExited() {\r\n      this.animating = false;\r\n    }\r\n  \r\n    next() {\r\n      if (this.animating) return;\r\n      const nextIndex = this.state.activeIndex === items.length - 1 ? 0 : this.state.activeIndex + 1;\r\n      this.setState({ activeIndex: nextIndex });\r\n    }\r\n  \r\n    previous() {\r\n      if (this.animating) return;\r\n      const nextIndex = this.state.activeIndex === 0 ? items.length - 1 : this.state.activeIndex - 1;\r\n      this.setState({ activeIndex: nextIndex });\r\n    }\r\n  \r\n    goToIndex(newIndex) {\r\n      if (this.animating) return;\r\n      this.setState({ activeIndex: newIndex });\r\n    }\r\n  \r\n    render() {\r\n      const { activeIndex } = this.state;\r\n  \r\n      const slides = items.map((item,index) => {\r\n        return (\r\n          <CarouselItem\r\n            onExiting={this.onExiting}\r\n            onExited={this.onExited}\r\n            key={item.src}\r\n          >\r\n          <img src={item.src} alt={item.altText} />\r\n            <CarouselCaption captionText={item.caption} captionHeader={item.captionHeader} />\r\n          </CarouselItem>\r\n        );\r\n      });\r\n  \r\n      return (\r\n        <div>\r\n          <Carousel\r\n            activeIndex={activeIndex}\r\n            next={this.next}\r\n            previous={this.previous}\r\n          >\r\n            <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={this.goToIndex} />\r\n            {slides}\r\n            <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={this.previous} />\r\n            <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={this.next} />\r\n          </Carousel>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  \r\n  export default CarouselSlide;","import React, { Component } from 'react'\r\nimport {observer, inject} from 'mobx-react'\r\nimport ReactHighcharts from  'react-highcharts'\r\n\r\nclass TemperatureChart extends Component {  \r\n    componentDidMount(){\r\n        console.log('chartCompon')\r\n       this.getWeatherData()\r\n    }\r\n\r\n    getWeatherData = () => { \r\n        const {\r\n            getWeather,\r\n         } = this.props;\r\n\r\n            getWeather(\"TEMPERATURE\");\r\n            //this.setUpdating();\r\n            //this.chartUpdate()\r\n            //console.log('weatherdata ', weatherData);\r\n    }\r\n    componentDidUpdate(){\r\n        const { isFetchingTemp } = this.props;\r\n        let chart = this.refs.chart.getChart();\r\n        if(isFetchingTemp){\r\n             chart.showLoading('Loading...');\r\n        }else{\r\n            chart.hideLoading('Loading...');\r\n        }\r\n        console.log('componentDidUpdate')\r\n        console.log('isFetching' , isFetchingTemp)\r\n        const {allChartResizing} = this.props; \r\n        allChartResizing();\r\n        //this.chartUpdate()\r\n    }\r\n\r\n  render() {\r\n    console.log('render')\r\n    const { wrapperid, temperatureData } = this.props;\r\n    console.log('temperatureData ' , temperatureData)\r\n\r\n\r\n    const config = {\r\n      chart : {\r\n        //height: 100,\r\n        backgroundColor: 'none',\r\n        events: {\r\n           \r\n        }\r\n      },\r\n     \r\n    title: {\r\n        text: '온도'\r\n    },\r\n    id : wrapperid +'_c',\r\n    \r\n    credits: {\r\n        enabled: false\r\n    },\r\n    subtitle: {\r\n        //text: 'Source: thesolarfoundation.com'\r\n    },\r\n    xAxis: {\r\n        tickInterval: 1,\r\n        labels: {\r\n            enabled: true,\r\n            formatter: function() { return temperatureData[this.value][0];},\r\n        }\r\n        //type: 'datetime',\r\n        //tickPixelInterval: 150\r\n    },\r\n    yAxis: {\r\n        title: {\r\n            text: '시간'\r\n        }\r\n    },\r\n    legend: {\r\n        layout: 'vertical',\r\n        align: 'right',\r\n        verticalAlign: 'middle'\r\n    },\r\n\r\n    plotOptions: {\r\n        series: {\r\n            label: {\r\n                connectorAllowed: false\r\n            },\r\n            color: 'blue',\r\n            //pointStart: 2010\r\n        }\r\n    },\r\n    exporting: {\r\n        enabled: false\r\n    },\r\n    series: [{\r\n        type: 'spline',\r\n        marker: {\r\n            lineWidth: 2,                                                                                       \r\n            lineColor: '#adb5bd',\r\n            fillColor: 'white'\r\n        },\r\n        color: '#adb5bd',       \r\n        dashStyle : 'shortdot',\r\n\r\n        name: '온도',\r\n        data: temperatureData,\r\n        zones: [{\r\n            value: 0,\r\n            color: '#1864ab'\r\n        }, {\r\n            value: 15,\r\n            color: '#f59f00'\r\n        }, {\r\n            value: 20,\r\n            color: '#d9480f'\r\n        },{\r\n            value: 30,\r\n            color: '#f03e3e'\r\n        }\r\n    ]\r\n    }],\r\n\r\n    }\r\n    \r\n    return (\r\n\r\n        <div>\r\n        {/*<button onClick = {this.setDisable}>버튼 클릭 </button>*/}\r\n             <ReactHighcharts config = {config} ref= \"chart\" ></ReactHighcharts>\r\n        </div>\r\n    )\r\n  }\r\n}\r\nexport default inject(({ weather, edit }) => ({\r\n    isFetchingTemp : weather.isFetchingTemp,\r\n    getWeather : weather.getWeather,\r\n    temperatureData : weather.temperatureData,\r\n    allChartResizing : edit.allChartResizing\r\n    \r\n  }))(observer(TemperatureChart));","import React, { Component } from 'react'\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\nexport default class CasTest extends Component {\r\n  render() {\r\n    return (\r\n        <Carousel>\r\n        <div>\r\n        <img src=\"assets/1.jpeg\" />\r\n            <p className=\"legend\">Legend 1</p>\r\n        </div>\r\n        <div>\r\n        <img src=\"assets/1.jpeg\" />\r\n            <p className=\"legend\">Legend 2</p>\r\n        </div>\r\n        <div>\r\n        <img src=\"assets/1.jpeg\" />\r\n            <p className=\"legend\">Legend 3</p>\r\n        </div>\r\n    </Carousel>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {observer, inject} from 'mobx-react'\r\nimport ReactHighcharts from  'react-highcharts'\r\nimport _  from 'lodash'\r\n\r\n/* 레인 차트는 강수확률이랑 강우량 두개를 가져가도록 함  */\r\nclass RainChart extends Component {  \r\n    componentDidMount(){\r\n        console.log('chartCompon')\r\n       this.getWeatherData()\r\n    }\r\n\r\n    getWeatherData = () => { \r\n        const {\r\n            isFetching , \r\n            getWeather,\r\n            weatherData\r\n         } = this.props;\r\n\r\n            getWeather(\"RAIN\");\r\n    }\r\n    componentDidUpdate(){\r\n        const { isFetchingRain } = this.props;\r\n        let chart = this.refs.chart.getChart();\r\n        if(isFetchingRain){\r\n             chart.showLoading('Loading...');\r\n        }else{\r\n            chart.hideLoading('Loading...');\r\n        }\r\n        console.log('componentDidUpdate')\r\n        console.log('isFetching' , isFetchingRain)\r\n        const {allChartResizing} = this.props; \r\n        allChartResizing();\r\n        //this.chartUpdate()\r\n    }\r\n\r\n  render() {\r\n    console.log('render')\r\n    const { wrapperid, rainData } = this.props;\r\n    console.log('weatherData ' , rainData)\r\n\r\n\r\n    const config = {\r\n      chart : {\r\n        //height: 100,\r\n        backgroundColor: 'none',\r\n        events: {\r\n           \r\n        }\r\n      },\r\n     \r\n    title: {\r\n        text: '강수확률'\r\n    },\r\n    id : wrapperid +'_c',\r\n    \r\n    credits: {\r\n        enabled: false\r\n    },\r\n    subtitle: {\r\n        //text: 'Source: thesolarfoundation.com'\r\n    },\r\n    xAxis: {\r\n        tickInterval: 1,\r\n        labels: {\r\n            enabled: true,\r\n            //formatter: function() { return rainData[this.value][0][0];},\r\n        }\r\n        //type: 'datetime',\r\n        //tickPixelInterval: 150\r\n    },\r\n    yAxis: [{\r\n        title: {\r\n            text: '시간'\r\n        }\r\n    },\r\n     { // Secondary yAxis\r\n        title: {\r\n            text: 'Rainfall',\r\n        },\r\n        labels: {\r\n            format: '{value} mm',\r\n          \r\n        },\r\n        opposite: true\r\n    }],\r\n    legend: {\r\n        layout: 'vertical',\r\n        align: 'right',\r\n        verticalAlign: 'middle'\r\n    },\r\n\r\n    plotOptions: {\r\n        series: {\r\n            label: {\r\n                connectorAllowed: false\r\n            },\r\n            color: 'blue',\r\n            //pointStart: 2010\r\n        }\r\n    },\r\n    exporting: {\r\n        enabled: false\r\n    },\r\n    series: [{\r\n        type: 'spline',\r\n        name: '강수확률',\r\n        data: rainData[0],\r\n        zones: [{\r\n            value: 0,\r\n            color: '#1864ab'\r\n        }, {\r\n            value: 15,\r\n            color: '#f59f00'\r\n        }, {\r\n            value: 20,\r\n            color: '#d9480f'\r\n        },{\r\n            value: 30,\r\n            color: '#f03e3e'\r\n        }]\r\n    },\r\n    {\r\n        name: 'Rainfall',\r\n        type: 'column',\r\n        yAxis: 1,\r\n        data:  rainData[1],\r\n        tooltip: {\r\n            valueSuffix: ' mm'\r\n        }\r\n    }],\r\n\r\n    }\r\n    \r\n    return (\r\n\r\n        <div>\r\n        {/*<button onClick = {this.setDisable}>버튼 클릭 </button>*/}\r\n             <ReactHighcharts config = {config} ref= \"chart\" ></ReactHighcharts>\r\n        </div>\r\n    )\r\n  }\r\n}\r\nexport default inject(({ weather, edit }) => ({\r\n    isFetchingRain : weather.isFetchingRain,\r\n    getWeather : weather.getWeather,\r\n    rainData : weather.rainData,\r\n    allChartResizing : edit.allChartResizing\r\n    \r\n  }))(observer(RainChart));","import React, { Component } from 'react'\r\nimport {observer, inject} from 'mobx-react'\r\nimport style from './HumidiyChart.module.css'\r\nimport ReactHighcharts from  'react-highcharts'\r\n\r\nclass HumidityChart extends Component {  \r\n    componentDidMount(){\r\n        console.log('chartCompon')\r\n       this.getWeatherData()\r\n    }\r\n\r\n    getWeatherData = () => { \r\n        const {\r\n            isFetching , \r\n            getWeather,\r\n            weatherData\r\n         } = this.props;\r\n\r\n            getWeather(\"HUMIDITY\");\r\n    }\r\n    componentDidUpdate(){\r\n        const { isFetchingHumi } = this.props;\r\n        let chart = this.refs.chart.getChart();\r\n        if(isFetchingHumi){\r\n             chart.showLoading('Loading...');\r\n        }else{\r\n            chart.hideLoading('Loading...');\r\n        }\r\n        console.log('componentDidUpdate')\r\n        console.log('isFetching' , isFetchingHumi)\r\n        const {allChartResizing} = this.props; \r\n        allChartResizing();\r\n        //this.chartUpdate()\r\n    }\r\n\r\n  render() {\r\n    console.log('render')\r\n    const { wrapperid, humidityData } = this.props;\r\n    console.log('weatherData ' , humidityData)\r\n\r\n\r\n    const config = {\r\n      chart : {\r\n        //height: 100,\r\n        backgroundColor: 'none',\r\n        events: {\r\n           \r\n        }\r\n      },\r\n     \r\n    title: {\r\n        text: '습도',\r\n        style: {\r\n            fontFamily: style.NotoSansKR\r\n        }\r\n    \r\n    },\r\n    id : wrapperid +'_c',\r\n    \r\n    credits: {\r\n        enabled: false\r\n    },\r\n    subtitle: {\r\n        //text: 'Source: thesolarfoundation.com'\r\n    },\r\n    xAxis: {\r\n        tickInterval: 1,\r\n        labels: {\r\n            enabled: true,\r\n            formatter: function() { return humidityData[this.value][0];},\r\n        }\r\n        //type: 'datetime',\r\n        //tickPixelInterval: 150\r\n    },\r\n    yAxis: {\r\n        title: {\r\n            text: '시간'\r\n        }\r\n    },\r\n    legend: {\r\n        layout: 'vertical',\r\n        align: 'right',\r\n        verticalAlign: 'middle'\r\n    },\r\n\r\n    plotOptions: {\r\n        series: {\r\n            label: {\r\n                connectorAllowed: false\r\n            },\r\n            color: 'blue',\r\n            //pointStart: 2010\r\n        }\r\n    },\r\n    exporting: {\r\n        enabled: false\r\n    },\r\n    series: [{\r\n        type: 'spline',\r\n        name: '습도',\r\n        data: humidityData,\r\n        zones: [{\r\n            value: 0,\r\n            color: '#1864ab'\r\n        }, {\r\n            value: 15,\r\n            color: '#f59f00'\r\n        }, {\r\n            value: 20,\r\n            color: '#d9480f'\r\n        },{\r\n            value: 30,\r\n            color: '#f03e3e'\r\n        }\r\n    ]\r\n    }],\r\n\r\n    }\r\n    \r\n    return (\r\n\r\n        <div>\r\n               <ReactHighcharts config = {config} ref= \"chart\" ></ReactHighcharts>\r\n        </div>\r\n    )\r\n  }\r\n}\r\nexport default inject(({ weather, edit }) => ({\r\n    isFetchingHumi : weather.isFetchingHumi,\r\n    getWeather : weather.getWeather,\r\n    humidityData : weather.humidityData,\r\n    allChartResizing : edit.allChartResizing\r\n    \r\n  }))(observer(HumidityChart));","import React, { Component } from 'react'\r\nimport {observer, inject} from 'mobx-react'\r\nimport { Collapse, Button, CardBody, Card } from 'reactstrap';\r\nimport CarouselSlide from '../../CarouselSlide'\r\nimport CasTest from '../../CasTest'\r\nimport TemperatureChart from '../../Chart/WeatherChart/TemperatureChart'\r\nimport RainChart from '../../Chart/WeatherChart/RainChart'\r\nimport HumidityChart from '../../Chart/WeatherChart/HumidityChart'\r\nimport style from './EditComponentList.module.css';\r\n\r\nclass EditComponentList extends Component {\r\n\r\n    componentDidMount(){\r\n      const { putComponentList } = this.props;\r\n      putComponentList('온도' , TemperatureChart)\r\n      putComponentList('강수확률' , RainChart);\r\n      putComponentList('습도' , HumidityChart);\r\n\r\n    }\r\n    state = {\r\n        collapse : false,\r\n    \r\n    }\r\n    toggle =()=> {\r\n        this.setState({ collapse: !this.state.collapse });\r\n    }\r\n\r\n  /*\r\n\tmapToComponent\r\n\t1. pureComponents의 키 값(컴포넌트의 이름)만을 추출해 div로 만드는 함수이다.\r\n\t\t onClick 이벤트에 props로 전달받은 handleSelect 함수를 연결하여\r\n\t\t div를 클릭하면 layout에 해당 컴포넌트가 추가될 수 있도록 해준다.\r\n\t*/\r\n\tmapToComponent = () => {\r\n    const { componentList } = this.props;\r\n\t\treturn componentList.map((item, i) => {\r\n\t\t\tlet name;\r\n\t\t\tfor(let compName in item){\r\n\t\t\t\tname = compName;\r\n\t\t\t}\r\n\t\t\treturn (\r\n            <div className  = {style.EditableList_Component}\r\n                  onClick    = {this.props.addSelectedComponent}\r\n                  key  \t\t= {i}\r\n                  id\t\t\t= {name}>\r\n                  {name}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>);\r\n\t\t});\r\n\t};\r\n\r\n    \r\n  render() {\r\n    const {componentList, handlePage}  = this.props;\r\n    const {mapToComponent} = this; \r\n    return (\r\n      <div>\r\n    \r\n        <button onClick={this.toggle}> 클릭</button>\r\n        <button onClick={handlePage}> 클릭</button>\r\n        <Collapse isOpen={this.state.collapse}>\r\n            {this.mapToComponent()}\r\n        </Collapse>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default inject(({ edit }) => ({\r\n  putComponentList : edit.putComponentList,\r\n  addSelectedComponent : edit.addSelectedComponent,\r\n  componentList : edit.componentList,\r\n  handlePage : edit.handlePage\r\n}))(observer(EditComponentList));","import React, { Component } from 'react';\nimport TimerView from './components/Timer/TimerView'\nimport CalenderTable from './components/Calender/CalenderTable'\nimport GoodWord from './components/GoodWord'\nimport GoodWordInput from './components/GoodWordInput'\nimport EditView from './components/EditView'\nimport EditComponentList from './components/Edit/EditComponentList'\nimport DevTools from 'mobx-react-devtools';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div style ={{height : '100%'}}>\n        <EditComponentList/>\n        <EditView/>\n        <TimerView/>\n        <CalenderTable/>\n        {process.env.NODE_ENV === 'development' && <DevTools />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import decode from \"jwt-decode\";\r\n\r\nexport default class AuthHelperMethods {\r\n  // Initializing important variables\r\n  constructor(domain) {\r\n    //THIS LINE IS ONLY USED WHEN YOU'RE IN PRODUCTION MODE!\r\n    this.domain = domain || \"http://localhost:3031\"; // API server domain\r\n  }\r\n  login = (username, password) => {\r\n    // Get a token from api server using the fetch api\r\n    return this.fetch(`/log-in`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        username,\r\n        password\r\n      })\r\n    }).then(res => {\r\n      this.setToken(res.token); // Setting the token in localStorage\r\n      return Promise.resolve(res);\r\n    });\r\n  };\r\n\r\n  loggedIn = () => {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken(); // Getting token from localstorage\r\n    console.log('token = ', token );\r\n    return !!token && !this.isTokenExpired(token); // handwaiving here\r\n  };\r\n\r\n  isTokenExpired = token => {\r\n    try {\r\n      const decoded = decode(token);\r\n      console.log(decoded)\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        // Checking if token is expired.\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      console.log(\"expired check failed! Line 42: AuthService.js\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  setToken = idToken => {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem(\"access_token\", idToken);\r\n  };\r\n\r\n  getToken = () => {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem(\"access_token\");\r\n  };\r\n\r\n  logout = () => {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem(\"access_token\");\r\n  };\r\n\r\n  getConfirm = () => {\r\n    // Using jwt-decode npm package to decode the token\r\n    let answer = decode(this.getToken());\r\n    console.log(\"Recieved answer!\");\r\n    return answer;\r\n  };\r\n\r\n  fetch = (url, options) => {\r\n    // performs api calls sending the required authentication headers\r\n    const headers = {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    };\r\n    // Setting Authorization header\r\n    // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\r\n    if (this.loggedIn()) {\r\n      headers[\"Authorization\"] = \"Bearer \" + this.getToken();\r\n    }\r\n\r\n    return fetch(url, {\r\n      headers,\r\n      ...options\r\n    })\r\n      .then(this._checkStatus)\r\n      .then(response => response.json());\r\n  };\r\n\r\n  _checkStatus = response => {\r\n    // raises an error in case response status is not a success\r\n    if (response.status >= 200 && response.status < 300) {\r\n      // Success status lies between 200 to 300\r\n      return response;\r\n    } else {\r\n      var error = new Error(response.statusText);\r\n      error.response = response;\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n","import axios from 'axios';\r\nimport cilentConfig from '../../configuration/clientConfig'\r\n\r\n\r\n/* 대시보드 고화질화  현황 */\r\nexport const get_dashboard_qty_rate = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_dashboard_qty_rate\" ))\r\n}\r\n/* 대시보드 고품질화 현황  */\r\nexport const get_dashboard_pertitle_rate = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_dashboard_pertitle_rate\" ))\r\n}\r\n/* 대시보드 파이 그래프  */\r\nexport const get_pertitle_count_for_dashboard_piechart = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_pertitle_count_for_dashboard_piechart\" ))\r\n\r\n}\r\n\r\n/* 대시보드 고화질화 히트 그래프  */\r\nexport const get_qmi_qty_hit_data_for_dashboard_graph = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_qmi_qty_hit_data_for_dashboard_graph\" ))\r\n\r\n}\r\n/* 대시보드 고품질화 히트 그래프  */\r\nexport const get_pertitle_hit_for_dashboard_graph = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_pertitle_hit_for_dashboard_graph\" ))\r\n\r\n}\r\n/**************************대시보드 레거시 *******************************/\r\n/*대시보드 음량 균일화 */\r\nexport const get_dashboard_alc_rate = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_dashboard_alc_rate\" ))\r\n}\r\n\r\n\r\n/*대시보드 갭 그래프  */\r\nexport const get_pertitle_data_for_jipyo_graph = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_pertitle_data_for_jipyo_graph\" ))\r\n}\r\n\r\n/*대시보드 측정 그래프  */\r\nexport const get_quality_indicator_for_cheukjeong_avg = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_quality_indicator_for_cheukjeong_avg\" ))\r\n}\r\n\r\n/*대시보드 퍼타이틀 진행률 그래프  */\r\nexport const get_accumulate_pertitle_for_dashboard = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_accumulate_pertitle_for_dashboard\" ))\r\n}\r\n\r\n/*대시보드 수급 그래프  */\r\nexport const get_count_for_sugeup_dashboard = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_count_for_sugeup_dashboard\" ))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/* 분석  */\r\nexport const get_pertitle_data_for_large_tree_bunseok_daily = () => {\r\n    //console.log('get_pertitle_data_for_large_tree',cilentConfig.endpoint.api)\r\n    return (axios.post(cilentConfig.endpoint.api +'/bus/get_pertitle_data_for_large_tree_bunseok_daily'))\r\n}\r\n\r\n//금일 기준\r\nexport const get_pertitle_data_for_large_tree = () => {\r\n    //console.log('get_pertitle_data_for_large_tree',cilentConfig.endpoint.api)\r\n    return (axios.post(cilentConfig.endpoint.api +'/bus/get_pertitle_data_for_large_tree'))\r\n}\r\n\r\nexport const get_summary_data_for_bunseok_daily = () => {\r\n    return (axios.post(cilentConfig.endpoint.api +'/bus/get_summary_data_for_bunseok_daily'))\r\n}\r\n\r\nexport const get_summary_data_for_bunseok_all = () => {\r\n    return (axios.post(cilentConfig.endpoint.api +'/bus/get_summary_data_for_bunseok_all'))\r\n}\r\n\r\n\r\nexport const get_system_date_and_min_date = () => {\r\n    return (axios.post(cilentConfig.endpoint.api +'/bus/get_system_date_and_min_date'))\r\n}\r\n\r\n\r\nexport const get_raw_data_for_everywhere = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + '/bus/get_raw_data_for_everywhere'))\r\n}\r\n\r\n\r\n//  박스플롯 첫 렌더링시 호출되는 axios\r\n// ex\r\n// {\r\n//     \"WISKLO\": 90.1453,\r\n//     \"WISKHI\": 100,\r\n//     \"Q1\": 94.8117,\r\n//     \"Q2\": 96.8078,\r\n//     \"Q3\": 97.9231,\r\n//     \"CID\": \"{0F75F704-9D3C-481E-9783-B6A51B1A0960}\",\r\n//     \"QUALITY_INDICATOR_MEAN\": 90.1522,\r\n//     \"TITLE\": \"고양이를 부탁해\",\r\n//     \"BITRATE_CD\": \"P8\",\r\n//     \"BITRATE_VALUE\": \"13MB\",\r\n//     \"NM_H264FILE_COMP_SIZE\": 2.41,\r\n//     \"RETENSION_RATE_MEAN\": 0.936,\r\n//     \"BASELINE_MEAN\": 91.8224\r\n// },\r\nexport const get_boxplot_data_today = () =>{\r\n    return (axios.post(cilentConfig.endpoint.api + '/bus/get_boxplot_data_today'))\r\n}\r\n\r\n\r\n\r\n/* 분석 */\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* 수급  */\r\nexport const get_sugeup_table = () => {\r\n    return (axios.post(cilentConfig.endpoint.api +'/bus/get_sugeup_table'))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* 측정 */\r\nexport const get_quality_indicator_for_cheukjeong_tree_daily = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_quality_indicator_for_cheukjeong_tree_daily\" ))\r\n}\r\n\r\nexport const get_quality_indicator_for_cheukjeong_tree_all = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_quality_indicator_for_cheukjeong_tree_all\" ))\r\n}\r\n\r\nexport const get_quality_indicator_for_cheukjeong_all = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_quality_indicator_for_cheukjeong_all\" ))\r\n}\r\n\r\nexport const get_quality_indicator_for_cheukjeong_daily = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_quality_indicator_for_cheukjeong_daily\" ))\r\n}\r\n\r\n\r\n    //* 이거는 박스플롯을 그리기 위함 */\r\nexport const get_whisper_high_low_15_by_idarray = (id_array) => {\r\n    const data = {\r\n        id_array   : id_array\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_whisper_high_low_15_by_idarray\",data ))\r\n}\r\n\r\nexport const get_whisper_high_low_15_today = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_whisper_high_low_15_today\" ))\r\n}\r\n\r\nexport const get_pertitle_statistics_01_by_idarray = ( id_array ) => {\r\n   // console.log( \"id_array \" , id_array);\r\n    const data = {\r\n        id_array   : id_array\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_pertitle_statistics_01_by_idarray\", data ))\r\n}\r\n\r\n\r\nexport const get_pertitle_statistics_01_today = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_pertitle_statistics_01_today\" ))\r\n}\r\n\r\n// *\r\nexport const get_pertitle_statistics_01_by_day = ( before_date, after_date  ) => {\r\n    const data = {\r\n        before_date   : before_date,\r\n        after_date : after_date\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_pertitle_statistics_01_by_day\",data ))\r\n}\r\nexport const get_whisper_high_low_15_by_day = ( before_date, after_date  ) => {\r\n    const data = {\r\n        before_date   : before_date,\r\n        after_date : after_date\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_whisper_high_low_15_by_day\" ,data))\r\n}\r\n\r\n\r\n/* 박스플롯  */\r\nexport const get_boxplot_data_by_idarray = ( id_array ) => {\r\n    //console.log( \"id_array \" , id_array);\r\n    const data = {\r\n        id_array   : id_array\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_boxplot_data_by_idarray\", data ))\r\n}\r\n\r\n\r\n\r\n\r\n/* 고품질화 */\r\n\r\nexport const get_pertitle_count_for_graph = () =>{\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_pertitle_count_for_graph\"))\r\n}\r\n\r\nexport const get_pertitle_hit_for_graph = () =>{\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_pertitle_hit_for_graph\"))\r\n}\r\n\r\n/*****************************   셀렉트 박스 ********************************************** */\r\nexport const get_summary_all_contents = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_summary_all_contents\"))\r\n}\r\n\r\n\r\n\r\nexport const get_pertitle_data_for_table = () =>{\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_pertitle_data_for_table\"))\r\n}\r\n\r\nexport const get_table_sum_value_first_depth = (array) =>{\r\n    const data = {\r\n        fgbit_array  : array,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_table_sum_value_first_depth\",data))\r\n}\r\n\r\nexport const get_table_sum_value_second_depth = (fgbit_array, cate_array) =>{\r\n    const data = {\r\n        fgbit_array  : fgbit_array,\r\n        cate_array  : cate_array\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_table_sum_value_second_depth\",data))\r\n}\r\n\r\n\r\nexport const get_table_sum_value_third_depth = (fgbit_array, cate_array, at_cont_array ) =>{\r\n    const data = {\r\n        fgbit_array  : fgbit_array,\r\n        cate_array  : cate_array,\r\n        at_cont_array : at_cont_array,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_table_sum_value_third_depth\",data))\r\n}\r\n\r\n\r\nexport const get_table_sum_value_fourth_depth = (fgbit_array, cate_array, at_cont_array, at_contents_array  ) =>{\r\n    const data = {\r\n        fgbit_array  : fgbit_array,\r\n        cate_array  : cate_array,\r\n        at_cont_array : at_cont_array,\r\n        at_contents_array  : at_contents_array\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_table_sum_value_fourth_depth\",data))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* 고화질화  HighQuality */\r\nexport const get_qmi_qty = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_qmi_qty\" ))\r\n}\r\n\r\n// HighQuailtyProgressPlotGraph_Reload\r\nexport const get_qty_count_for_graph = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_qty_count_for_graph\" ))\r\n}\r\n\r\nexport const get_qty_hit_for_graph = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_qty_hit_for_graph\" ))\r\n}\r\n\r\n/*****************************   셀렉트 박스 ********************************************** */\r\nexport const get_qmi_qty_for_table  = () =>{\r\n    return ( axios.post(cilentConfig.endpoint.api + \"/bus/get_qmi_qty_for_table \"))\r\n}\r\n\r\nexport const get_qty_table_sum_value_first_depth = (array) =>{\r\n    const data = {\r\n        fgbit_array  : array,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_qty_table_sum_value_first_depth\",data))\r\n}\r\n\r\nexport const get_qty_table_sum_value_second_depth = (fgbit_array, cate_array) =>{\r\n    const data = {\r\n        fgbit_array  : fgbit_array,\r\n        cate_array  : cate_array\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_qty_table_sum_value_second_depth\",data))\r\n}\r\n\r\nexport const get_qty_table_sum_value_third_depth = (fgbit_array, cate_array, at_cont_array ) =>{\r\n    const data = {\r\n        fgbit_array  : fgbit_array,\r\n        cate_array  : cate_array,\r\n        at_cont_array : at_cont_array,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_qty_table_sum_value_third_depth\",data))\r\n}\r\n\r\n\r\nexport const get_qty_table_sum_value_fourth_depth = (fgbit_array, cate_array, at_cont_array, at_contents_array  ) =>{\r\n    const data = {\r\n        fgbit_array  : fgbit_array,\r\n        cate_array  : cate_array,\r\n        at_cont_array : at_cont_array,\r\n        at_contents_array  : at_contents_array\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_qty_table_sum_value_fourth_depth\",data))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* 음량균일화  */\r\nexport const get_qmi_alc = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_qmi_alc\" ))\r\n}\r\n\r\n\r\n/*음량 균일화 토글 플롯 그래프  */\r\nexport const get_alc_count_for_graph = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_alc_count_for_graph\" ))\r\n}\r\nexport const get_alc_hit_for_graph = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_alc_hit_for_graph\" ))\r\n}\r\n/*****************************   셀렉트 박스 ********************************************** */\r\nexport const get_qmi_alc_for_table  = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_qmi_alc_for_table\" ))\r\n}\r\n\r\nexport const get_alc_table_sum_value_first_depth = (array) =>{\r\n    const data = {\r\n        fgbit_array  : array,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_alc_table_sum_value_first_depth\",data))\r\n}\r\n\r\nexport const get_alc_table_sum_value_second_depth = (fgbit_array, cate_array) =>{\r\n    const data = {\r\n        fgbit_array  : fgbit_array,\r\n        cate_array  : cate_array\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_alc_table_sum_value_second_depth\",data))\r\n}\r\n\r\nexport const get_alc_table_sum_value_third_depth = (fgbit_array, cate_array, at_cont_array ) =>{\r\n    const data = {\r\n        fgbit_array  : fgbit_array,\r\n        cate_array  : cate_array,\r\n        at_cont_array : at_cont_array,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_alc_table_sum_value_third_depth\",data))\r\n}\r\n\r\n\r\nexport const get_alc_table_sum_value_fourth_depth = (fgbit_array, cate_array, at_cont_array, at_contents_array  ) =>{\r\n    const data = {\r\n        fgbit_array  : fgbit_array,\r\n        cate_array  : cate_array,\r\n        at_cont_array : at_cont_array,\r\n        at_contents_array  : at_contents_array\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_alc_table_sum_value_fourth_depth\",data))\r\n}\r\n\r\n\r\n\r\n/* 주간 보고  */\r\nexport const get_weekly_report = (array) =>{\r\n    const data = {\r\n        weekly_date   : array,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_weekly_report\", data))\r\n}\r\n\r\nexport const get_sd_hit_data = ( array ) => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_sd_hit_data\"))\r\n}\r\n\r\n\r\n\r\n/* 주간 보고  */\r\nexport const get_weekly_qty_count_for_graph = () =>{\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_weekly_qty_count_for_graph\"))\r\n}\r\n\r\nexport const get_weekly_qty_hit_for_graph = ( array ) => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_weekly_qty_hit_for_graph\"))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* row data 용  */\r\n\r\nexport const get_service_raw_data_in_redis = (spool_data, type_of_data ) => {\r\n    const data = {\r\n        spool_date  : spool_data,\r\n        type_of_data  : type_of_data,\r\n    }\r\n\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_service_raw_data_in_redis\",data))\r\n}\r\n\r\n\r\n\r\n/* 고화질화, 음량균일화 default 100개  */\r\nexport const get_service_raw_data_in_redis_scan = (spool_data, type_of_data ) => {\r\n    const data = {\r\n        spool_date  : spool_data,\r\n        type_of_data  : type_of_data,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_service_raw_data_in_redis_scan\",data))\r\n}\r\n\r\n\r\n\r\nexport const get_service_raw_data_in_redis_hundred_all = () => {\r\n    return (axios.post((cilentConfig.endpoint.api + \"/bus/get_service_raw_data_in_redis_hundred_all\")))\r\n}\r\n\r\nexport const get_service_raw_data_in_redis_hundred = () => {\r\n    return (axios.post((cilentConfig.endpoint.api + \"/bus/get_service_raw_data_in_redis_hundred\")))\r\n}\r\n\r\nexport const get_service_raw_data_in_redis_hundred_mil = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_service_raw_data_in_redis_hundred_mil\"))\r\n}\r\n\r\nexport const get_pertitle_raw_data_for_search = () =>{\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_pertitle_raw_data_for_search\"));\r\n}\r\n\r\n\r\nexport const get_service_raw_data_in_redis_filter = (spool_data, type_of_data, params) =>{\r\n    const data = {\r\n        spool_date  : spool_data,\r\n        type_of_data  : type_of_data,\r\n        params : params\r\n    }\r\n\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_service_raw_data_in_redis_filter\",data));\r\n}\r\n\r\n\r\n\r\nexport const get_service_raw_data_filter_all = (before_date, after_date, params) =>{\r\n    const data = {\r\n        before_date  : before_date,\r\n        after_date : after_date,\r\n        params : params\r\n    }\r\n\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_service_raw_data_filter_all\",data));\r\n}\r\n\r\n\r\n\r\n// let config = {\r\n//     onDownloadProgress: progressEvent => {\r\n//       console.log(progressEvent)\r\n//       console.log(progressEvent.srcElement)\r\n//       let percentCompleted = Math.floor((progressEvent.loaded * 100) / progressEvent.total);\r\n//       console.log(percentCompleted)\r\n//       // do whatever you like with the percentage complete\r\n//       // maybe dispatch an action that will update a progress bar or something\r\n//     }\r\n//   }\r\nexport const get_service_raw_data_filter_4mhd = (before_date, after_date, params) =>{\r\n    const data = {\r\n        before_date  : before_date,\r\n        after_date : after_date,\r\n        params : params\r\n    }\r\n\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_service_raw_data_filter_4mhd\", data));\r\n}\r\n\r\nexport const get_4mhd_service_raw_data_in_redis = (before_date, after_date, params) =>{\r\n    const data = {\r\n        before_date  : before_date,\r\n        after_date : after_date,\r\n        params : params\r\n    }\r\n\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_4mhd_service_raw_data_in_redis\", data));\r\n}\r\n\r\n\r\nexport const get_weekly_report_summary = (before_date, after_date) =>{\r\n    const data = {\r\n        before_date  : before_date,\r\n        after_date : after_date,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_weekly_report_summary\", data));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* EXCEL 다운로드용  */\r\n\r\nexport const get_qty_summary_grid_excel = () =>{\r\n    return ( axios.post(cilentConfig.endpoint.api + \"/bus/get_qty_summary_grid_excel\"))\r\n}\r\n\r\nexport const get_pertitle_summary_grid_excel  = () => {\r\n    return ( axios.post(cilentConfig.endpoint.api + \"/bus/get_pertitle_summary_grid_excel\"))\r\n}\r\n\r\nexport const get_alc_summary_grid_excel = () => {\r\n    return ( axios.post(cilentConfig.endpoint.api + '/bus/get_alc_summary_grid_excel'))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* 아마 legacy */\r\n\r\nexport const get_pertitle_data_for_large_tree_sugeup = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_pertitle_data_for_large_tree_sugeup\" ))\r\n}\r\n\r\nexport const get_pertitle_bitrate_data = ( ) => {\r\n    return (axios.post(cilentConfig.endpoint.api +'/bus/get_pertitle_bitrate_data'))\r\n}\r\n\r\nexport const get_pertitle_data_by_parameter = (flag, bitrate, cp, category, genre_org ) => {\r\n    if( bitrate === null) { bitrate = \"-1\"}\r\n    if( cp === null) { cp = \"-1\"}\r\n    if( category === null) { category = \"-1\"}\r\n    if( genre_org === null) { genre_org = \"-1\"}\r\n\r\n   // console.log(bitrate , cp , category, genre_org)\r\n    let data = { }\r\n\r\n    if(flag == 1 ){\r\n     data = {\r\n        bitrate : bitrate\r\n     }\r\n    }\r\n\r\n   // console.log(data)\r\n\r\n    return (axios.post(cilentConfig.endpoint.api +'/bus/get_pertitle_data_by_parameter',data ))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*----- NEW BUNSEOK -----*/\r\n/* 5번  */\r\n\r\n/*스캐터 그래프 datarate 1700이상 오버 데이터 가져오기  */\r\nexport const get_higher_contents_data = () =>{\r\n    return (axios.post(cilentConfig.endpoint.api  +\"/bus/get_higher_contents_data\"));\r\n}\r\n/* 6번  */\r\n/* 로우데이터 가져오기  LEGACY*/\r\nexport const get_pertitle_data_by_data = (before_date, after_date) =>{\r\n    const data = {\r\n        before_date : before_date,\r\n        after_date : after_date,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_pertitle_data_by_date\", data));\r\n}\r\n\r\n\r\n/* 로우데이터 가져오기   */\r\nexport const get_raw_data_for_cheukjeong = (before_date, after_date) =>{\r\n    const data = {\r\n        before_date : before_date,\r\n        after_date : after_date,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_raw_data_for_cheukjeong\", data));\r\n}\r\n\r\n\r\n/* 로그인 */\r\n// export const get_login_data = (mem_userid, mem_password) => {\r\n//   const data = {\r\n//     mem_userid: mem_userid,\r\n//     mem_password: mem_password\r\n//   }\r\n//   return (axios.post(cilentConfig.endpoint.api + \"/login\", data));\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* 회원가입  */\r\n\r\n export const test = (mem_username, mem_email, mem_password, mem_sosok_nm, mem_gb_cd) =>{\r\n     const data = {\r\n        mem_username: mem_username,\r\n        mem_userid : mem_email,\r\n        mem_email : mem_email,\r\n        mem_password: mem_password,\r\n        mem_sosok_nm: mem_sosok_nm,\r\n        mem_gb_cd : mem_gb_cd\r\n      }\r\n      return (axios.post(cilentConfig.endpoint.api + \"/member/setMemberSignUp\",data));\r\n      //return (axios.post(\"http://localhost:3031/api/member/test\",data));\r\n}\r\n\r\n\r\n\r\n/* 로그인 */\r\nexport const get_login_data = (mem_email, user_password) => {\r\n    const data = {\r\n      mem_userid : mem_email,\r\n      mem_password: user_password,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api +\"/login\",data));\r\n   // return (axios.post(\"http://localhost:3031/api/login\",data));\r\n  }\r\n  \r\n  export const setMemberSignUp = (mem_username, mem_email, mem_password, mem_sosok_nm, mem_gb_cd) => {\r\n    const data = {\r\n      mem_username: mem_username,\r\n      mem_userid : mem_email,\r\n      mem_email : mem_email,\r\n      mem_password: mem_password,\r\n      mem_sosok_nm: mem_sosok_nm,\r\n      mem_gb_cd : mem_gb_cd\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/member/setMemberSignUp\",data));\r\n    //return (axios.post(\"http://localhost:3031/api/member/setMemberSignUp\",data));\r\n  }\r\n  \r\n\r\nexport const getEmailIsAlreadyExist = (mem_userid) =>{\r\n    console.log(mem_userid)\r\n    const data = {\r\n        mem_userid : mem_userid\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/member/getEmailIsAlreadyExist\",data));\r\n    //return (axios.post(\"http://localhost:3031/api/member/getEmailIsAlreadyExist\",data));\r\n}\r\n\r\nexport const getForgetPassword = (emailConfig) =>{\r\n    const data ={\r\n        emailConfig : emailConfig\r\n    }\r\n    //return (axios.post(\"http://localhost:3031/api/member/getForgetPassword\",emailConfig));\r\n    return (axios.post(cilentConfig.endpoint.api + \"/member/getForgetPassword\",data));\r\n}\r\n\r\n  \r\n\r\n/* UserManageTable */\r\nexport const getMemberManagementList = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/member/getMemberManagementList\"));\r\n}\r\n\r\nexport const getUpdateByMemberAuth = (mem_gb_cd, mem_userid) => {\r\n    const data ={\r\n        mem_gb_cd : mem_gb_cd,\r\n        mem_userid: mem_userid\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/member/getUpdateByMemberAuth\",data));\r\n    //return (axios.post(\"http://localhost:3031/api/member/getUpdateByMemberAuth\",data));\r\n}\r\n\r\n\r\n\r\n/* UserManageTable */\r\n/* GB_CD 별 GB_CD_NM */\r\nexport const getGubunCDMapping = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/member/getGubunCDMapping\"));\r\n   // return (axios.post(\"http://localhost:3031/api/member/getGubunCDMapping\"));\r\n}\r\n\r\n\r\n\r\n\r\n/*구분별 DEFAULT TABLE을 위함   */\r\nexport const getGubunPageList = (mem_gb_cd, mem_userid) => {\r\n    const data ={\r\n        mem_gb_cd : mem_gb_cd,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/member/getGubunPageList\",data));\r\n    //return (axios.post(\"http://localhost:3031/api/member/getGubunPageList\",data));\r\n}\r\n\r\n/*구분별 페이지 세팅 , 초기 셀렉트 드롭박스 옵션을 위함  */\r\nexport const getpageCDMapping = () => {\r\n\r\n    return (axios.post(cilentConfig.endpoint.api + \"/member/getpageCDMapping\"));\r\n    //return (axios.post(\"http://localhost:3031/api/member/getpageCDMapping\"));\r\n}\r\n\r\n/* 구분별 선택한 권한을 세팅  */\r\nexport const setSelectedPages = (mem_gb_cd, id_array) => {\r\n   \r\n    const data ={\r\n        mem_gb_cd : mem_gb_cd,\r\n        id_array :  id_array,\r\n    }\r\n  \r\n    return (axios.post(cilentConfig.endpoint.api + \"/member/setSelectedPages\",data));\r\n    //return (axios.post(\"http://localhost:3031/api/member/setSelectedPages\",data));\r\n}\r\n\r\n\r\n\r\n\r\n//대기 인원 가져오기 \r\nexport const getStandbyMemberList = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/member/getStandbyMemberList\"));\r\n    //return (axios.post(\"http://localhost:3031/api/member/getStandbyMemberList\"));\r\n}\r\n\r\n\r\nexport const setMemberStatus = (mem_status, mem_userid) => {\r\n    const data ={\r\n        mem_status : mem_status,\r\n        mem_userid :  mem_userid,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/member/setMemberStatus\",data));\r\n    //return (axios.post(\"http://localhost:3031/api/member/setMemberStatus\",data));\r\n}\r\n\r\n\r\n\r\n\r\nexport const deleteMember = (mem_userid) => {\r\n    const data ={\r\n        mem_userid :  mem_userid,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/member/deleteMember\",data));\r\n    //return (axios.post(\"http://localhost:3031/api/member/deleteMember\",data));\r\n}\r\n\r\n\r\n/*승인 거절시 이메일 전송용  */\r\nexport const sendMail = (emailConfig) =>{\r\n    const data ={\r\n        emailConfig : emailConfig\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/member/sendMail\",data));\r\n    //return (axios.post(\"http://localhost:3031/api/member/sendMail\",data));\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const get_VMAF = (CID)  => {\r\n    const data = {\r\n        CID : CID\r\n    }\r\n    return (axios.post(\"http://localhost:3001/api/get_vmaf\",data));\r\n}\r\nexport const get_Content_Name = (CID)  => {\r\n    const data = {\r\n        CID : CID\r\n    }\r\n    return (axios.post(\"http://localhost:3001/api/get_Content_Name\",data));\r\n}\r\n\r\nexport const get_VMAF_redis = ()  => {\r\n    const data ={\r\n        cid: \"{164170F6-5E3D-498A-8780-7BF1015B1006}\",\r\n        value_type:\"vmaf\"\r\n    }\r\n    return (axios.post(\"https://alphacomu.tk:3030/api/bus/get_value_data\",\r\n        data\r\n    ));\r\n}\r\n\r\n//vmaf , ssnr , psnr 가져오기\r\nexport const get_ContentData = (cid)  => {\r\n    const data = {\r\n        cid : cid\r\n    }\r\n    return (axios.post(\"http://localhost:3001/api/get_ContentData\",data));\r\n}\r\n\r\n\r\nexport const get_thumb = (cid, frame)  => {\r\n   // console.log(\"get_thumb\",cid, frame);\r\n    const data ={\r\n        cid : cid,\r\n        frame:frame\r\n    }\r\n    return (axios.post(\"http://localhost:3001/api/images/Frame/get_thumb\",\r\n        data\r\n    ));\r\n}\r\n//vmaf , ssnr , psnr 가져오기\r\nexport const get_pertitleData = ()  => {\r\n\r\n    return (axios.post(\"http://localhost:3001/api/get_pertitleData\"));\r\n}\r\n\r\n//CID, BASELINE,RETENSION_RATE,VMAF_AVG, COMPLEXITY_LV, DATARATE\r\nexport const get_pertitleData_STG1 = ()  => {\r\n    return (axios.post(\"http://localhost:3001/api/get_pertitleData_STG1\"));\r\n}\r\n\r\n/*최빈값  */\r\n//CID, BASELINE,RETENSION_RATE,VMAF_AVG, COMPLEXITY_LV, DATARATE\r\nexport const get_MAX_FREQUENCY = ()  => {\r\n    return (axios.post(\"http://localhost:3001/api/get_MAX_FREQUENCY\"));\r\n}\r\n\r\n/* 원본 데이터 가져오기  */\r\nexport const get_Origin_VmafAvg = ()  => {\r\n    return (axios.post(\"http://localhost:3001/api/get_Origin_VmafAvg\"));\r\n}\r\n/*100점 뺴기 */\r\nexport const get_CAL_100 = ()  => {\r\n    return (axios.post(\"http://localhost:3001/api/get_CAL_100\"));\r\n}\r\n/* 최빈값을 기준으로 백분률 datarate */\r\nexport const get_fre_Retension = () => {\r\n    return (axios.post(\"http://localhost:3001/api/get_fre_Retension\"));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from 'axios';\r\nimport cilentConfig from '../../configuration/clientConfig'\r\n\r\n\r\nexport const updatePassword = ( mem_email, \r\n                                mem_password_origin,\r\n                                mem_password_new_1,\r\n                                mem_password_new_2 ) => {\r\n  console.log('updatePassword')\r\n  const tokenStr = localStorage.getItem('access_token');\r\n  const data ={\r\n    mem_email : mem_email,\r\n    mem_password_origin : mem_password_origin,\r\n    mem_password_new_1 : mem_password_new_1,\r\n    mem_password_new_2 : mem_password_new_2\r\n\r\n  }\r\n  \r\n  return(axios.post(\"http://localhost:3031/api/user/updatePassword\",  data, { headers: { \"x-access-token\" : `${tokenStr}`} } )) \r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const updateMemberSosok = (mem_sosok_nm, mem_email) => {\r\n\r\n  const tokenStr = localStorage.getItem('access_token');\r\n  console.log(tokenStr)\r\n  const data ={\r\n    mem_sosok_nm : mem_sosok_nm,\r\n    mem_email : mem_email\r\n  }\r\n  \r\n  return(axios.post(\"http://localhost:3031/api/user/updateMemberSosok\",  data, { headers: { \"x-access-token\" : `${tokenStr}`} } )) \r\n}\r\n\r\n\r\n\r\nexport const getMemberInfo = (mem_email) => {\r\n\r\n  const tokenStr = localStorage.getItem('access_token');\r\n  console.log(tokenStr)\r\n  const data ={\r\n    mem_email : mem_email\r\n  }\r\n  \r\n  return(axios.post(\"http://localhost:3031/api/user/getMemberInfo\",  data, { headers: { \"x-access-token\" : `${tokenStr}`} } )) \r\n}\r\n\r\n\r\n/* 로그인 */\r\nexport const login = (mem_email, mem_password) => {\r\n    const data = {\r\n      mem_email : mem_email,\r\n      mem_password: mem_password,\r\n    }\r\n    return (axios.post(\"http://localhost:3031/api/auth/login\",data));\r\n   // return (axios.post(\"http://localhost:3031/api/login\",data));\r\n  }\r\n\r\n  export const setMemberSignUp = (mem_username, mem_email, mem_password, mem_sosok_nm, mem_gb_cd) => {\r\n    const data = {\r\n      mem_username: mem_username,\r\n      mem_userid : mem_email,\r\n      mem_email : mem_email,\r\n      mem_password: mem_password,\r\n      mem_sosok_nm: mem_sosok_nm,\r\n      mem_gb_cd : mem_gb_cd\r\n    }\r\n    return (axios.post(\"http://localhost:3031/api/auth/setMemberSignUp\",data));\r\n    //return (axios.post(\"http://localhost:3031/api/member/setMemberSignUp\",data));\r\n  }","import createBrowserHistory from 'history/createBrowserHistory';\n\n// Navigation manager, e.g. history.push('/home')\n// https://github.com/mjackson/history\nexport default createBrowserHistory({ forceRefresh: true });\n","import React, { Component } from \"react\";\r\nimport authHelpers from \"../lib/authHelpers\";\r\nimport history from '../history'\r\n/* high order 컴포넌트  */\r\n/* A higher order component is frequently written as a function that returns a class. */\r\nexport default function withAuth(AuthComponent) {\r\n  const Auth = new authHelpers();\r\n\r\n  return class AuthWrapped extends Component {\r\n    state = {\r\n      confirm: null,\r\n      loaded: false\r\n    };\r\n\r\n    /* In the componentDid<ount, we would want to do a couple of important tasks in order to verify the current users authentication status\r\n    prior to granting them enterance into the app. */\r\n    componentDidMount() {\r\n        console.log('hello')\r\n      if (!Auth.loggedIn()) {\r\n\r\n        console.log('not lOGGED')\r\n        this.props.history.replace(\"/login\");\r\n  \r\n      } else {\r\n        console.log('is LoggedIn')\r\n        /* Try to get confirmation message from the Auth helper. */\r\n        try {\r\n          const confirm = Auth.getConfirm();\r\n          console.log(\"confirmation is:\", confirm);\r\n          this.setState({\r\n            confirm: confirm,\r\n            loaded: true\r\n          });\r\n        } catch (err) {\r\n          /* Oh snap! Looks like there's an error so we'll print it out and log the user out for security reasons. */\r\n          console.log(err);\r\n          Auth.logout();\r\n          this.props.history.replace(\"/login\");\r\n        }\r\n      }\r\n    }\r\n\r\n    _handleLogout = () => {\r\n      this.Auth.logout()\r\n      this.props.history.replace('/login');\r\n    }\r\n\r\n\r\n    render() {\r\n      if (this.state.loaded == true) {\r\n        if (this.state.confirm) {\r\n          console.log(\"confirmed!\");\r\n          return (\r\n            /* component that is currently being wrapper(App.js) */\r\n            <AuthComponent\r\n              history={this.props.history}\r\n              confirm={this.state.confirm}\r\n              {...this.props}\r\n            />\r\n          );\r\n        } else {\r\n          console.log(\"not confirmed!\");\r\n          return null;\r\n        }\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n}\r\n","import React, { Component } from 'react'\r\nimport authHelpers from '../../lib/authHelpers'\r\nimport './Login.scss'\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport * as api from '../../lib/api/api'\r\nimport * as memberApi from '../../lib/api/memberApi'\r\n\r\n\r\nimport history from '../../history';\r\nimport { withAlert } from \"react-alert\";\r\nimport cilentConfig from '../../configuration/clientConfig'\r\nimport { withCookies, Cookies } from 'react-cookie';\r\nimport WithAuth from '../WithAuth';\r\n\r\n\r\nconst DEBUG = true;\r\nconst LOG_DEBUG = true;\r\n\r\nconst log = DEBUG && LOG_DEBUG ? (msg, ...args) => {\r\n  console.log('[Login] ' + msg, ...args);\r\n} : () => { };\r\n\r\nconst blue = DEBUG ? (msg, ...args) => {\r\n  console.log('%c[Login] ' + msg, 'color: white; background: blue', ...args);\r\n} : () => { };\r\n\r\nconst red = DEBUG && LOG_DEBUG ? (msg, ...args) => {\r\n  console.log('%c[Login] ' + msg, 'color: white; background: red', ...args);\r\n} : () => { };\r\n\r\n\r\nclass Login extends Component {\r\n\r\n  state = {\r\n    name: '',\r\n    phone: '',\r\n    email: '',\r\n    password: '',\r\n    checkPassword: '',\r\n    sosok_nm: '',\r\n\r\n    inOutGubun: '',\r\n\r\n\r\n    loginEmail: '',\r\n    loginPassword: '',\r\n    invaild: '',\r\n\r\n    loginView: true,\r\n    forgetPasswordView : false,\r\n\r\n    forgetEmail :'',\r\n  }\r\n  \r\n\r\n  signUpClickHandler = (e) =>{\r\n    this.setState({\r\n      loginView : false,\r\n      forgetPasswordView : false,\r\n    }) \r\n  }\r\n  LoginClickHandler = (e) =>{\r\n    this.setState({\r\n      loginView : true,\r\n      forgetPasswordView : false,\r\n    }) \r\n  }\r\n\r\n  forgetEmailHandler = (e) =>{\r\n    this.setState({\r\n      forgetEmail: e.target.value\r\n    });\r\n  } \r\n\r\n\r\n  onInputchange = (e) => {\r\n    if (e.target.name === 'password' ||\r\n      e.target.name === 'checkPassword') {\r\n      this.checkPasswordSame();\r\n    }\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  changeViewHandler = () => {\r\n\r\n    this.setState({\r\n      loginView: !this.state.loginView,\r\n      forgetPasswordView : false\r\n    })\r\n  }\r\n\r\n\r\n  checkPasswordSame = () => {\r\n    const { password, checkPassword } = this.state;\r\n    if (password === checkPassword) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  // 영문, 숫자 혼합하여 6~20자리 이내\r\n  checkValidationPassword = (password) =>{\r\n      let reg_pwd = /^.*(?=.{8,20})(?=.*[0-9])(?=.*[a-zA-Z]).*$/;\r\n      if(!reg_pwd.test(password)){\r\n       return false;\r\n      }\r\n      return true;\r\n  }\r\n     \r\n  /* 회원가입  */\r\n  handleSignInFormSubmit = async e => {\r\n    const { name,\r\n      email,\r\n      password,\r\n      checkPassword,\r\n      sosok_nm,\r\n      inOutGubun } = this.state;\r\n\r\n    e.preventDefault();\r\n\r\n    /* 중복 체크 */\r\n    // const alreadyExist = await api.getEmailIsAlreadyExist(email)\r\n    // //console.log(alreadyExist)\r\n    // if (alreadyExist.data[0].EXISTFLAG === 'EXIST') {\r\n    //   this.props.alert.error('중복된 이메일입니다. 다시 한번 확인 해주세요!')\r\n    //   this.emailInput.focus();\r\n    //   return\r\n    // }\r\n    /*\r\n    if(!this.checkValidationPassword(password) ){\r\n      this.props.alert.error('패스워드는 영문, 숫자 혼합해서 8~20 입니다.')\r\n      this.passwordInput.focus();\r\n      return\r\n    }\r\n    if(!this.checkValidationPassword(checkPassword) ){\r\n      this.props.alert.error('영문, 숫자 혼합해서 6~20 입니다.')\r\n      return\r\n    }\r\n    if (!this.checkPasswordSame()) {\r\n      this.props.alert.error('패스워드가 다릅니다!')\r\n      this.passwordInput.focus();\r\n      return\r\n    }\r\n    if (inOutGubun === '') {\r\n      this.props.alert.error('구분을 선택해주세요!')\r\n      return\r\n    }\r\n    */\r\n\r\n\r\n    /* 회원 가입  */\r\n    const id = email;\r\n    let mem_gb_cd = 2 //default\r\n    if (inOutGubun) {\r\n      mem_gb_cd = 2\r\n    } else {\r\n      mem_gb_cd = 3\r\n    }\r\n\r\n    //console.log('heelo ', name, email, password, sosok_nm, 'ddd',mem_gb_cd)\r\n     const response = await memberApi.setMemberSignUp(name, email, password, sosok_nm, mem_gb_cd);\r\n     //const response = await api.test(name, email, password, sosok_nm, mem_gb_cd);\r\n    \r\n    //console.log('handleSignInFormSubmit response ' ,response)\r\n    if (response.data.error) {\r\n      //this.props.alert.error('가입신청이 실패했습니다. 다시 시도해주세요')\r\n      return\r\n    }\r\n\r\n    if (response.status === 200) {\r\n      //this.sendMailToAdmin('가입요청', email)\r\n      //this.props.alert.success('성공적으로 신청되었습니다. 가입 승인을 기다려 주세요.')\r\n      this.changeViewHandler();\r\n      this.setState({\r\n        name: '',\r\n        phone: '',\r\n        email: '',\r\n        password: '',\r\n        checkPassword: '',\r\n        GB_CD: '',\r\n        sosok_nm: '',\r\n        inOutGubun: '',\r\n      })\r\n    }\r\n    else {\r\n      this.props.alert.error('오류가 발생했습니다. 다시 시도해주세요.')\r\n    }\r\n  };\r\n\r\n  /* 가입신청시 Admin에게 가입 요청  */\r\n  sendMailToAdmin = async(emailFlag, mem_userid) =>{\r\n    let admin = cilentConfig.adminEmail\r\n    let emailConfig = {\r\n      emailFlag : emailFlag,\r\n      from : 'cqms.op@digicaps.com',\r\n      to : [ admin,'cqms.digicaps.com' ],\r\n      message: 'toAdmin',\r\n      mem_userid: mem_userid,\r\n    }\r\n    try{\r\n      const response = await api.sendMail(emailConfig);\r\n      //console.log(response)\r\n      if(response.data.code === 100){\r\n        //this.props.alert.success(\"성공적으로 관리자에게 전송 처리하였습니다.\");\r\n      }\r\n      if(response.data.code === 200){\r\n        this.props.alert.error(\"오류가 발생했습니다. 다시 시도해주세요.\");\r\n      }\r\n    }catch(e){\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /* forgetPassword 클릭시 */\r\n  forgetPasswordClick = () => {\r\n    this.setState({\r\n      forgetPasswordView : true,\r\n      loginView : ''\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  /*로그인 관련함수 */\r\n  clearForm = () => {\r\n    this.setState({\r\n      loginEmail: '',\r\n      loginPassword: '',\r\n    })\r\n  };\r\n\r\n  handleEmailChange = (e) => {\r\n    //console.log(e.target.value);\r\n    this.setState({\r\n      loginEmail: e.target.value\r\n    });\r\n  }\r\n  handlePasswordChange = (e) => {\r\n    this.setState({ loginPassword: e.target.value });\r\n  }\r\n\r\n  \r\n\r\n  /* login  */\r\n  handleLoginFormSubmit = async e => {\r\n    const { loginEmail, loginPassword } = this.state;\r\n    const { cookies } = this.props;\r\n    //console.log(email , password)\r\n\r\n    console.log('cookie ', cookies)    \r\n\r\n    e.preventDefault();\r\n\r\n    // const id = this.email.value;\r\n    // const password = this.password.value;\r\n    const id = loginEmail;\r\n    \r\n    console.log(id, loginPassword)\r\n    const response = await memberApi.login(id, loginPassword);\r\n    console.log(\"로그인 리스폰스 \" , response);\r\n\r\n    blue(\"로그인 리스폰스 \",response.data.code);\r\n    if ( response.data.code !== 200 ){\r\n      //실패시\r\n      alert('실패');\r\n    }else{\r\n      //성공 \r\n      console.log(response.data.token)\r\n      //cookies.set('x-access-token', response.data.token ); \r\n      localStorage.setItem(\"access_token\", response.data.token);\r\n      history.push('/board')\r\n   \r\n    }\r\n    // if(){\r\n\r\n    // }\r\n    //response.data.token = \r\n    // if (response.data.code === 100) {\r\n    //   cookies.set('access_token', response.data.token);\r\n    //   cookies.set('user_gb', response.data.gb);\r\n    //   history.push('/main');\r\n    // }\r\n    // else {\r\n    //   if (response.data.code === 200) {\r\n    //     this.props.alert.error('아이디나 비밀번호를 다시 한번 확인해주세요.')\r\n    //     this.clearForm();\r\n    //     //history.push('/home');\r\n    //     this.faildLogin();\r\n    //   }\r\n    //   if (response.data.code === 300) {\r\n    //     this.props.alert.error('존재하지 않는 ID 입니다. 다시 한번 확인해주세요.')\r\n    //     this.clearForm();\r\n    //     //history.push('/home');\r\n    //     this.faildLogin();\r\n    //   }\r\n    //   if (response.data.code === 400) {\r\n    //     this.props.alert.error('가입 승인 대기중입니다.')\r\n    //     this.clearForm();\r\n    //     //history.push('/home');\r\n    //     this.faildLogin();\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  faildLogin = () => {\r\n    const { invaild } = this.state;\r\n    this.setState({\r\n      invaild: true\r\n    }, () => {\r\n      setTimeout(() => {\r\n        this.setState({\r\n          invaild: false\r\n        })\r\n      }, 3000)\r\n    })\r\n  }\r\n\r\n  gubunRadioChange = (e) => {\r\n    if (e.target.value === '내부사용자') {\r\n      this.setState({\r\n        inOutGubun: true\r\n      })\r\n    } else if (e.target.value === '외부사용자') {\r\n      this.setState({\r\n        inOutGubun: false\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  /* 패스워드 전송  */\r\n  handleforgetPasswordFormSubmit = async(e) =>{\r\n    const { forgetEmail } = this.state;\r\n    //console.log(email , password)\r\n\r\n    e.preventDefault();\r\n    // const id = this.email.value;\r\n    // const password = this.password.value;\r\n    const id = forgetEmail;\r\n\r\n    let emailConfig = {\r\n      emailFlag : '비밀번호요청',\r\n      from : 'cqms.op@digicaps.com',\r\n      to : [forgetEmail],\r\n      message: '비밀번호 요청.',\r\n      mem_userid : forgetEmail\r\n    }\r\n\r\n    const response = await api.getForgetPassword(emailConfig);\r\n    \r\n    const resData =response.data;\r\n    console.log(response.data)\r\n    if(resData.code === 300 ) {\r\n      this.props.alert.error('해당 이메일에 대한 정보가 없습니다.')\r\n    }\r\n    else if(resData.code === 100 ){\r\n      this.props.alert.success('메일로 비밀번호를 전송하였습니다.')\r\n      this.setState({\r\n        loginView: !this.state.loginView,\r\n        forgetPasswordView : false,\r\n        forgetEmail : ''\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    const { loginView, forgetPasswordView } = this.state;\r\n    const { match, confirm } = this.props;\r\n    console.log('@@@@@@@@@@match ' , match, confirm) \r\n    let radioStyle = {\r\n      float: 'left'\r\n    }\r\n    return (\r\n      <div className='loginWrappingContainer'>\r\n        <div className='form'>\r\n          <div className=\"userform\">\r\n            <ul className=\"tab-group\">\r\n              <li className={loginView === true ? \"tab\" : loginView === false ? \"tab tabActive\" : \"tab\" }><a onClick={this.signUpClickHandler}> Sign Up </a></li>\r\n              <li className={loginView === true ? \"tab tabActive\" :  loginView === false ? \"tab\" :  \"tab\" }><a onClick={this.LoginClickHandler}>Log In</a></li>\r\n            </ul>\r\n\r\n            <div className=\"tab-content\">\r\n              { loginView === false ?\r\n                <div id=\"signup\">\r\n                  <div className='bannerText'>\r\n                    <h1>회원가입</h1>\r\n                  </div>\r\n                  <form action=\"#\"\r\n                    method=\"post\"\r\n                    onSubmit={this.handleSignInFormSubmit}>\r\n                    <div className=\"top-row\">\r\n                      <div className=\"field-wrap\">\r\n                        <label className={this.state.name === '' ? 'loginLabel' : 'loginLabel active highlight'} >\r\n                          이름<span className=\"req\">*</span>\r\n                        </label>\r\n                        <input\r\n                          className=\"loginInput\"\r\n                          type=\"text\"\r\n                          required autocomplete=\"off\"\r\n                          name='name'\r\n                          onChange={this.onInputchange}\r\n                          value={this.state.name} />\r\n                      </div>\r\n\r\n                      <div className=\"field-wrap\">\r\n                        <label className={this.state.sosok_nm === '' ? 'loginLabel' : 'loginLabel active highlight'} >\r\n                          소속<span className=\"req\">*</span>\r\n                        </label>\r\n                        <input\r\n                          className=\"loginInput\"\r\n                          type=\"text\"\r\n                          required autocomplete=\"off\"\r\n                          name='sosok_nm'\r\n                          onChange={this.onInputchange}\r\n                          value={this.state.sosok_nm} />\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"field-wrap\">\r\n                      <label className={this.state.email === '' ? 'loginLabel' : 'loginLabel active highlight'}>\r\n                        이메일<span className=\"req\">*</span>\r\n                      </label>\r\n                      <input\r\n                        className=\"loginInput\"\r\n                        type=\"email\"\r\n                        required autocomplete=\"off\"\r\n                        onChange={this.onInputchange}\r\n                        value={this.state.email}\r\n                        name='email'\r\n                        ref={(input) => { this.emailInput = input; }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"field-wrap\">\r\n\r\n                      <label className={this.state.password === '' ? 'loginLabel' : 'loginLabel active highlight'}>\r\n                        패스워드<span className=\"req\">*</span>\r\n                      </label>\r\n\r\n                      <input\r\n                        className=\"loginInput\"\r\n                        type=\"password\"\r\n                        required autocomplete=\"off\"\r\n                        onChange={this.onInputchange}\r\n                        value={this.state.password}\r\n                        name='password'\r\n                        ref={(input) => { this.passwordInput = input; }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"field-wrap\">\r\n\r\n                      <label className={this.state.checkPassword === '' ? 'loginLabel' : 'loginLabel active highlight'}>\r\n                        패스워드 재입력<span className=\"req\">*</span>\r\n                      </label>\r\n\r\n                      <input\r\n                        className=\"loginInput\"\r\n                        type=\"password\"\r\n                        required autocomplete=\"off\"\r\n                        onChange={this.onInputchange}\r\n                        value={this.state.checkPassword}\r\n                        name='checkPassword'\r\n                      />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"field-wrap\">\r\n                      <div className='radioContainer'>\r\n                        <div style={radioStyle}>\r\n                          <Radio\r\n                            checked={this.state.inOutGubun === true}\r\n                            onChange={this.gubunRadioChange}\r\n\r\n                            value=\"내부사용자\"\r\n                            name=\"radio-button-demo\"\r\n                            label=\"외부사용자\"\r\n                          //aria-label=\"A\"\r\n                          /> 내부사용자\r\n                    </div>\r\n                        <div>\r\n                          <Radio\r\n                            checked={this.state.inOutGubun === false}\r\n                            onChange={this.gubunRadioChange}\r\n\r\n                            value=\"외부사용자\"\r\n                            name=\"radio-button-demo\"\r\n                            label=\"외부사용자\"\r\n                          //aria-label=\"A\"\r\n                          />\r\n                          외부사용자\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"loginButton button-block\" >가입 하기</button>\r\n\r\n                  </form>\r\n\r\n                </div>\r\n\r\n                : loginView === true && forgetPasswordView === false ?\r\n                ( \r\n                <div id=\"login\">\r\n                  <div className='bannerText'>\r\n                    <h2>서프론트에 오신것을 환영합니다</h2>\r\n                  </div>\r\n                  <form action=\"#\"\r\n                    method=\"post\"\r\n                    onSubmit={this.handleLoginFormSubmit}>\r\n                    <div className=\"field-wrap\">\r\n                      <label className={this.state.loginEmail === '' ? 'loginLabel' : 'loginLabel active highlight'}>\r\n                        이메일<span className=\"req\">*</span>\r\n                      </label>\r\n                      <input className=\"loginInput\"\r\n                        type=\"email\"\r\n                        required autocomplete=\"off\"\r\n                        onChange={this.onInputchange}\r\n                        value={this.state.loginEmail}\r\n                        name='loginEmail'\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"field-wrap\">\r\n                      <label className={this.state.loginPassword === '' ? 'loginLabel' : 'loginLabel active highlight'}>\r\n                        패스워드<span className=\"req\">*</span>\r\n                      </label>\r\n                      <input\r\n                        className=\"loginInput\"\r\n                        type=\"password\"\r\n                        required autocomplete=\"off\"\r\n                        onChange={this.onInputchange}\r\n                        value={this.state.loginPassword}\r\n                        name='loginPassword'\r\n                      />\r\n                    </div>\r\n                    {<p className=\"forgot\" ><a onClick = {this.forgetPasswordClick}>Forgot Password?</a></p>}\r\n                    <button className=\"loginButton button-block\" > 로그인 </button>\r\n                  </form>\r\n                </div>\r\n                )\r\n      \r\n                :\r\n                (\r\n                  <div>\r\n                    <div id=\"login\">\r\n                      <div className='bannerText'>\r\n                          <h2>비밀번호를 잊으셨나요?</h2>\r\n                      </div>\r\n                      <div className='bannerText'>\r\n                          <h4>이메일을 입력해주세요</h4>\r\n                      </div>\r\n                      <div className='bannerText'>\r\n                          <h6 style ={{paddingTop: '10px'}}>해당 이메일로  비밀번호를 보내드립니다.</h6>\r\n                      </div>\r\n                      <div className=\"field-wrap\">\r\n                      </div>\r\n                      <form action=\"#\"\r\n                          method=\"post\"\r\n                          onSubmit={this.handleforgetPasswordFormSubmit}>\r\n                          <div className=\"field-wrap\">\r\n                              <label className={this.state.forgetEmail === '' ? 'loginLabel' : 'loginLabel active highlight'}>\r\n                                  이메일<span className=\"req\">*</span>\r\n                              </label>\r\n                              <input className=\"loginInput\"\r\n                                  type=\"email\"\r\n                                  required autocomplete=\"off\"\r\n                                  onChange={this.onInputchange}\r\n                                  value={this.state.forgetEmail}\r\n                                  name='forgetEmail'\r\n                              />\r\n                          </div>\r\n                          <button className=\"loginButton button-block\" > 보내기 </button>\r\n                      </form>\r\n                  </div>\r\n                </div>\r\n                )\r\n                \r\n                \r\n              \r\n              } \r\n                                                                                                                                                       \r\n\r\n            </div>\r\n\r\n  \r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default (Login);","import axios from 'axios';\r\nimport cilentConfig from '../../configuration/clientConfig'\r\n\r\n//image 업로드 \r\nexport const imageUpload = (data) =>{\r\n   return (axios.post(\"http://localhost:3031/api/file/upload\",data)) \r\n}\r\n\r\n\r\nexport const get_server_time = () =>{\r\n    return (axios.post(\"http://localhost:3031/api/bus/get_server_time\"));\r\n}\r\n\r\n/* 현재 공지사항이 view가 되는지 안되는지  */\r\nexport const getNoticeViewing = () => {\r\n    return (axios.post(\"http://localhost:3031/api/board/getNoticeViewing\"))\r\n}\r\n\r\n\r\n\r\n/* 게시판 가져오기 */\r\nexport const getBoardList = (POSTS_NUM) => {\r\n    return (axios.post(\"http://localhost:3031/api/board/getBoardList\"));\r\n}\r\n\r\n/*조회수 */\r\nexport const setViewsUp = (POSTS_NUM) => {\r\n    const data ={\r\n        POSTS_NUM : POSTS_NUM\r\n    }\r\n    return (axios.post(\"http://localhost:3031/api/board/setViewsUp\",data));\r\n}\r\n\r\nexport const cqmsCdrPurchaseManual = () => {\r\n    return (\r\n        axios({    \r\n            url: \"http://localhost:3031/api/bus/cqmsCdrPurchaseManual\",\r\n            method: 'GET',\r\n            responseType: 'blob'\r\n        })\r\n    )\r\n}\r\n\r\nexport const writePosts = (BOARD_NUM , POSTS_NUM, MEM_IDX, POSTS_JEMOK, POSTS_NAEYONG, THUMBNAIL,NOTICE_START, NOTICE_END, PRIME_YN) => {\r\n    console.log(\"boardApi , THUMBNAIL\", THUMBNAIL)\r\n    \r\n    const data = {\r\n        BOARD_NUM  : BOARD_NUM,\r\n        POSTS_NUM : POSTS_NUM,\r\n        MEM_IDX  : MEM_IDX,\r\n        POSTS_JEMOK : POSTS_JEMOK,\r\n        POSTS_NAEYONG : POSTS_NAEYONG,\r\n        THUMBNAIL : THUMBNAIL,\r\n        NOTICE_START : NOTICE_START,\r\n        NOTICE_END : NOTICE_END,\r\n        PRIME_YN :PRIME_YN \r\n    }\r\n    console.log(\"THUMBNAIL\", data.THUMBNAIL);\r\n    //return (axios.post(cilentConfig.endpoint.api + \"/bus/board/writePosts\",data))\r\n    return (axios.post(\"http://localhost:3031/api/board/writePosts\",data))\r\n}\r\n\r\nexport const editPosts = (BOARD_NUM , POSTS_NUM, POSTS_JEMOK, POSTS_NAEYONG, PRIME_YN, NOTICE_START, NOTICE_END) => {\r\n    console.log(NOTICE_START, NOTICE_END)\r\n    const data = {\r\n        BOARD_NUM : BOARD_NUM,\r\n        POSTS_NUM : POSTS_NUM,\r\n        POSTS_JEMOK : POSTS_JEMOK,\r\n        POSTS_NAEYONG : POSTS_NAEYONG,\r\n        PRIME_YN : PRIME_YN,\r\n        NOTICE_START : NOTICE_START,\r\n        NOTICE_END : NOTICE_END \r\n    }\r\n    console.log(data);\r\n    //return (axios.post(cilentConfig.endpoint.api + \"/bus/board/writePosts\",data))\r\n    return (axios.post(\"http://localhost:3031/api/board/editPosts\",data))\r\n}\r\n\r\nexport const deletePosts = (BOARD_NUM, POSTS_NUM ) => {\r\n    const data = {\r\n        BOARD_NUM  : BOARD_NUM,\r\n        POSTS_NUM : POSTS_NUM,\r\n    }\r\n    return (axios.post(\"http://localhost:3031/api/board/deletePosts\",data))\r\n}\r\n\r\nexport const ifPostsExist = (POSTS_NUM) => {\r\n    const data = {\r\n        POSTS_NUM : POSTS_NUM\r\n    }\r\n    return (axios.post(\"http://localhost:3031/api/board/ifPostsExist\",data))\r\n}\r\n\r\nexport const getPostsSequence = () => {\r\n    //return (axios.post(cilentConfig.endpoint.api + \"/bus/board/getPostsSequence\",data))\r\n    return (axios.post(\"http://localhost:3031/api/board/getPostsSequence\"))\r\n}\r\n\r\nexport const getPosts = (POSTS_NUM) => {\r\n    const data = { \r\n        POSTS_NUM : POSTS_NUM\r\n    }\r\n    return (axios.post(\"http://localhost:3031/api/board/getPosts\",data))\r\n}\r\n\r\n/* 게시글 불러오기  */\r\nexport const getPostsList = (offset) => {\r\n    const data = {\r\n        offset : offset\r\n    }\r\n    //return (axios.post(cilentConfig.endpoint.api + \"/bus/board/getPostsSequence\",data))\r\n    return (axios.post(\"http://localhost:3031/api/board/getPostsList\", data))\r\n}\r\n\r\n/*NOTICE 불러오기  */\r\nexport const getNotice = () => {\r\n    return (axios.post(\"http://localhost:3031/api/board/getNotice\"))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* 대시보드 고화질화  현황 */\r\nexport const get_dashboard_qty_rate = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_dashboard_qty_rate\" ))\r\n}\r\n/* 대시보드 고품질화 현황  */\r\nexport const get_dashboard_pertitle_rate = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_dashboard_pertitle_rate\" ))\r\n}\r\n/* 대시보드 파이 그래프  */\r\nexport const get_pertitle_count_for_dashboard_piechart = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_pertitle_count_for_dashboard_piechart\" ))\r\n\r\n}\r\n\r\n/* 대시보드 고화질화 히트 그래프  */\r\nexport const get_qmi_qty_hit_data_for_dashboard_graph = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_qmi_qty_hit_data_for_dashboard_graph\" ))\r\n\r\n}\r\n/* 대시보드 고품질화 히트 그래프  */\r\nexport const get_pertitle_hit_for_dashboard_graph = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_pertitle_hit_for_dashboard_graph\" ))\r\n\r\n}\r\n/**************************대시보드 레거시 *******************************/\r\n/*대시보드 음량 균일화 */\r\nexport const get_dashboard_alc_rate = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_dashboard_alc_rate\" ))\r\n}\r\n\r\n\r\n/*대시보드 갭 그래프  */\r\nexport const get_pertitle_data_for_jipyo_graph = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_pertitle_data_for_jipyo_graph\" ))\r\n}\r\n\r\n/*대시보드 측정 그래프  */\r\nexport const get_quality_indicator_for_cheukjeong_avg = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_quality_indicator_for_cheukjeong_avg\" ))\r\n}\r\n\r\n/*대시보드 퍼타이틀 진행률 그래프  */\r\nexport const get_accumulate_pertitle_for_dashboard = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_accumulate_pertitle_for_dashboard\" ))\r\n}\r\n\r\n/*대시보드 수급 그래프  */\r\nexport const get_count_for_sugeup_dashboard = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_count_for_sugeup_dashboard\" ))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/* 분석  */\r\nexport const get_pertitle_data_for_large_tree_bunseok_daily = () => {\r\n    //console.log('get_pertitle_data_for_large_tree',cilentConfig.endpoint.api)\r\n    return (axios.post(cilentConfig.endpoint.api +'/bus/get_pertitle_data_for_large_tree_bunseok_daily'))\r\n}\r\n\r\n//금일 기준\r\nexport const get_pertitle_data_for_large_tree = () => {\r\n    //console.log('get_pertitle_data_for_large_tree',cilentConfig.endpoint.api)\r\n    return (axios.post(cilentConfig.endpoint.api +'/bus/get_pertitle_data_for_large_tree'))\r\n}\r\n\r\nexport const get_summary_data_for_bunseok_daily = () => {\r\n    return (axios.post(cilentConfig.endpoint.api +'/bus/get_summary_data_for_bunseok_daily'))\r\n}\r\n\r\nexport const get_summary_data_for_bunseok_all = () => {\r\n    return (axios.post(cilentConfig.endpoint.api +'/bus/get_summary_data_for_bunseok_all'))\r\n}\r\n\r\n\r\nexport const get_system_date_and_min_date = () => {\r\n    return (axios.post(cilentConfig.endpoint.api +'/bus/get_system_date_and_min_date'))\r\n}\r\n\r\n\r\nexport const get_raw_data_for_everywhere = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + '/bus/get_raw_data_for_everywhere'))\r\n}\r\n\r\n\r\n//  박스플롯 첫 렌더링시 호출되는 axios\r\n// ex\r\n// {\r\n//     \"WISKLO\": 90.1453,\r\n//     \"WISKHI\": 100,\r\n//     \"Q1\": 94.8117,\r\n//     \"Q2\": 96.8078,\r\n//     \"Q3\": 97.9231,\r\n//     \"CID\": \"{0F75F704-9D3C-481E-9783-B6A51B1A0960}\",\r\n//     \"QUALITY_INDICATOR_MEAN\": 90.1522,\r\n//     \"TITLE\": \"고양이를 부탁해\",\r\n//     \"BITRATE_CD\": \"P8\",\r\n//     \"BITRATE_VALUE\": \"13MB\",\r\n//     \"NM_H264FILE_COMP_SIZE\": 2.41,\r\n//     \"RETENSION_RATE_MEAN\": 0.936,\r\n//     \"BASELINE_MEAN\": 91.8224\r\n// },\r\nexport const get_boxplot_data_today = () =>{\r\n    return (axios.post(cilentConfig.endpoint.api + '/bus/get_boxplot_data_today'))\r\n}\r\n\r\n\r\n\r\n/* 분석 */\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* 수급  */\r\nexport const get_sugeup_table = () => {\r\n    return (axios.post(cilentConfig.endpoint.api +'/bus/get_sugeup_table'))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* 측정 */\r\nexport const get_quality_indicator_for_cheukjeong_tree_daily = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_quality_indicator_for_cheukjeong_tree_daily\" ))\r\n}\r\n\r\nexport const get_quality_indicator_for_cheukjeong_tree_all = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_quality_indicator_for_cheukjeong_tree_all\" ))\r\n}\r\n\r\nexport const get_quality_indicator_for_cheukjeong_all = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_quality_indicator_for_cheukjeong_all\" ))\r\n}\r\n\r\nexport const get_quality_indicator_for_cheukjeong_daily = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_quality_indicator_for_cheukjeong_daily\" ))\r\n}\r\n\r\n\r\n    //* 이거는 박스플롯을 그리기 위함 */\r\nexport const get_whisper_high_low_15_by_idarray = (id_array) => {\r\n    const data = {\r\n        id_array   : id_array\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_whisper_high_low_15_by_idarray\",data ))\r\n}\r\n\r\nexport const get_whisper_high_low_15_today = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_whisper_high_low_15_today\" ))\r\n}\r\n\r\nexport const get_pertitle_statistics_01_by_idarray = ( id_array ) => {\r\n   // console.log( \"id_array \" , id_array);\r\n    const data = {\r\n        id_array   : id_array\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_pertitle_statistics_01_by_idarray\", data ))\r\n}\r\n\r\n\r\nexport const get_pertitle_statistics_01_today = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_pertitle_statistics_01_today\" ))\r\n}\r\n\r\n// *\r\nexport const get_pertitle_statistics_01_by_day = ( before_date, after_date  ) => {\r\n    const data = {\r\n        before_date   : before_date,\r\n        after_date : after_date\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_pertitle_statistics_01_by_day\",data ))\r\n}\r\nexport const get_whisper_high_low_15_by_day = ( before_date, after_date  ) => {\r\n    const data = {\r\n        before_date   : before_date,\r\n        after_date : after_date\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_whisper_high_low_15_by_day\" ,data))\r\n}\r\n\r\n\r\n/* 박스플롯  */\r\nexport const get_boxplot_data_by_idarray = ( id_array ) => {\r\n    //console.log( \"id_array \" , id_array);\r\n    const data = {\r\n        id_array   : id_array\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_boxplot_data_by_idarray\", data ))\r\n}\r\n\r\n\r\n\r\n\r\n/* 고품질화 */\r\n\r\nexport const get_pertitle_count_for_graph = () =>{\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_pertitle_count_for_graph\"))\r\n}\r\n\r\nexport const get_pertitle_hit_for_graph = () =>{\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_pertitle_hit_for_graph\"))\r\n}\r\n\r\n/*****************************   셀렉트 박스 ********************************************** */\r\nexport const get_summary_all_contents = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_summary_all_contents\"))\r\n}\r\n\r\n\r\n\r\nexport const get_pertitle_data_for_table = () =>{\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_pertitle_data_for_table\"))\r\n}\r\n\r\nexport const get_table_sum_value_first_depth = (array) =>{\r\n    const data = {\r\n        fgbit_array  : array,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_table_sum_value_first_depth\",data))\r\n}\r\n\r\nexport const get_table_sum_value_second_depth = (fgbit_array, cate_array) =>{\r\n    const data = {\r\n        fgbit_array  : fgbit_array,\r\n        cate_array  : cate_array\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_table_sum_value_second_depth\",data))\r\n}\r\n\r\n\r\nexport const get_table_sum_value_third_depth = (fgbit_array, cate_array, at_cont_array ) =>{\r\n    const data = {\r\n        fgbit_array  : fgbit_array,\r\n        cate_array  : cate_array,\r\n        at_cont_array : at_cont_array,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_table_sum_value_third_depth\",data))\r\n}\r\n\r\n\r\nexport const get_table_sum_value_fourth_depth = (fgbit_array, cate_array, at_cont_array, at_contents_array  ) =>{\r\n    const data = {\r\n        fgbit_array  : fgbit_array,\r\n        cate_array  : cate_array,\r\n        at_cont_array : at_cont_array,\r\n        at_contents_array  : at_contents_array\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_table_sum_value_fourth_depth\",data))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* 고화질화  HighQuality */\r\nexport const get_qmi_qty = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_qmi_qty\" ))\r\n}\r\n\r\n// HighQuailtyProgressPlotGraph_Reload\r\nexport const get_qty_count_for_graph = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_qty_count_for_graph\" ))\r\n}\r\n\r\nexport const get_qty_hit_for_graph = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_qty_hit_for_graph\" ))\r\n}\r\n\r\n/*****************************   셀렉트 박스 ********************************************** */\r\nexport const get_qmi_qty_for_table  = () =>{\r\n    return ( axios.post(cilentConfig.endpoint.api + \"/bus/get_qmi_qty_for_table \"))\r\n}\r\n\r\nexport const get_qty_table_sum_value_first_depth = (array) =>{\r\n    const data = {\r\n        fgbit_array  : array,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_qty_table_sum_value_first_depth\",data))\r\n}\r\n\r\nexport const get_qty_table_sum_value_second_depth = (fgbit_array, cate_array) =>{\r\n    const data = {\r\n        fgbit_array  : fgbit_array,\r\n        cate_array  : cate_array\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_qty_table_sum_value_second_depth\",data))\r\n}\r\n\r\nexport const get_qty_table_sum_value_third_depth = (fgbit_array, cate_array, at_cont_array ) =>{\r\n    const data = {\r\n        fgbit_array  : fgbit_array,\r\n        cate_array  : cate_array,\r\n        at_cont_array : at_cont_array,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_qty_table_sum_value_third_depth\",data))\r\n}\r\n\r\n\r\nexport const get_qty_table_sum_value_fourth_depth = (fgbit_array, cate_array, at_cont_array, at_contents_array  ) =>{\r\n    const data = {\r\n        fgbit_array  : fgbit_array,\r\n        cate_array  : cate_array,\r\n        at_cont_array : at_cont_array,\r\n        at_contents_array  : at_contents_array\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_qty_table_sum_value_fourth_depth\",data))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* 음량균일화  */\r\nexport const get_qmi_alc = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_qmi_alc\" ))\r\n}\r\n\r\n\r\n/*음량 균일화 토글 플롯 그래프  */\r\nexport const get_alc_count_for_graph = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_alc_count_for_graph\" ))\r\n}\r\nexport const get_alc_hit_for_graph = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_alc_hit_for_graph\" ))\r\n}\r\n/*****************************   셀렉트 박스 ********************************************** */\r\nexport const get_qmi_alc_for_table  = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_qmi_alc_for_table\" ))\r\n}\r\n\r\nexport const get_alc_table_sum_value_first_depth = (array) =>{\r\n    const data = {\r\n        fgbit_array  : array,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_alc_table_sum_value_first_depth\",data))\r\n}\r\n\r\nexport const get_alc_table_sum_value_second_depth = (fgbit_array, cate_array) =>{\r\n    const data = {\r\n        fgbit_array  : fgbit_array,\r\n        cate_array  : cate_array\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_alc_table_sum_value_second_depth\",data))\r\n}\r\n\r\nexport const get_alc_table_sum_value_third_depth = (fgbit_array, cate_array, at_cont_array ) =>{\r\n    const data = {\r\n        fgbit_array  : fgbit_array,\r\n        cate_array  : cate_array,\r\n        at_cont_array : at_cont_array,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_alc_table_sum_value_third_depth\",data))\r\n}\r\n\r\n\r\nexport const get_alc_table_sum_value_fourth_depth = (fgbit_array, cate_array, at_cont_array, at_contents_array  ) =>{\r\n    const data = {\r\n        fgbit_array  : fgbit_array,\r\n        cate_array  : cate_array,\r\n        at_cont_array : at_cont_array,\r\n        at_contents_array  : at_contents_array\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_alc_table_sum_value_fourth_depth\",data))\r\n}\r\n\r\n\r\n\r\n/* 주간 보고  */\r\nexport const get_weekly_report = (array) =>{\r\n    const data = {\r\n        weekly_date   : array,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_weekly_report\", data))\r\n}\r\n\r\nexport const get_sd_hit_data = ( array ) => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_sd_hit_data\"))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* row data 용  */\r\n\r\nexport const get_service_raw_data_in_redis = (spool_data, type_of_data ) => {\r\n    const data = {\r\n        spool_date  : spool_data,\r\n        type_of_data  : type_of_data,\r\n    }\r\n\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_service_raw_data_in_redis\",data))\r\n}\r\n\r\n\r\n\r\n/* 고화질화, 음량균일화 default 100개  */\r\nexport const get_service_raw_data_in_redis_scan = (spool_data, type_of_data ) => {\r\n    const data = {\r\n        spool_date  : spool_data,\r\n        type_of_data  : type_of_data,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_service_raw_data_in_redis_scan\",data))\r\n}\r\n\r\n\r\n\r\nexport const get_service_raw_data_in_redis_hundred_all = () => {\r\n    return (axios.post((cilentConfig.endpoint.api + \"/bus/get_service_raw_data_in_redis_hundred_all\")))\r\n}\r\n\r\nexport const get_service_raw_data_in_redis_hundred = () => {\r\n    return (axios.post((cilentConfig.endpoint.api + \"/bus/get_service_raw_data_in_redis_hundred\")))\r\n}\r\n\r\nexport const get_service_raw_data_in_redis_hundred_mil = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_service_raw_data_in_redis_hundred_mil\"))\r\n}\r\n\r\nexport const get_pertitle_raw_data_for_search = () =>{\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_pertitle_raw_data_for_search\"));\r\n}\r\n\r\n\r\nexport const get_service_raw_data_in_redis_filter = (spool_data, type_of_data, params) =>{\r\n    const data = {\r\n        spool_date  : spool_data,\r\n        type_of_data  : type_of_data,\r\n        params : params\r\n    }\r\n\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_service_raw_data_in_redis_filter\",data));\r\n}\r\n\r\n\r\n\r\nexport const get_service_raw_data_filter_all = (before_date, after_date, params) =>{\r\n    const data = {\r\n        before_date  : before_date,\r\n        after_date : after_date,\r\n        params : params\r\n    }\r\n\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_service_raw_data_filter_all\",data));\r\n}\r\n\r\n\r\n\r\n// let config = {\r\n//     onDownloadProgress: progressEvent => {\r\n//       console.log(progressEvent)\r\n//       console.log(progressEvent.srcElement)\r\n//       let percentCompleted = Math.floor((progressEvent.loaded * 100) / progressEvent.total);\r\n//       console.log(percentCompleted)\r\n//       // do whatever you like with the percentage complete\r\n//       // maybe dispatch an action that will update a progress bar or something\r\n//     }\r\n//   }\r\nexport const get_service_raw_data_filter_4mhd = (before_date, after_date, params) =>{\r\n    const data = {\r\n        before_date  : before_date,\r\n        after_date : after_date,\r\n        params : params\r\n    }\r\n\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_service_raw_data_filter_4mhd\", data));\r\n}\r\n\r\n\r\n\r\nexport const get_weekly_report_summary = (before_date, after_date) =>{\r\n    const data = {\r\n        before_date  : before_date,\r\n        after_date : after_date,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_weekly_report_summary\", data));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* EXCEL 다운로드용  */\r\n\r\nexport const get_qty_summary_grid_excel = () =>{\r\n    return ( axios.post(cilentConfig.endpoint.api + \"/bus/get_qty_summary_grid_excel\"))\r\n}\r\n\r\nexport const get_pertitle_summary_grid_excel  = () => {\r\n    return ( axios.post(cilentConfig.endpoint.api + \"/bus/get_pertitle_summary_grid_excel\"))\r\n}\r\n\r\nexport const get_alc_summary_grid_excel = () => {\r\n    return ( axios.post(cilentConfig.endpoint.api + '/bus/get_alc_summary_grid_excel'))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* 아마 legacy */\r\n\r\nexport const get_pertitle_data_for_large_tree_sugeup = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_pertitle_data_for_large_tree_sugeup\" ))\r\n}\r\n\r\nexport const get_pertitle_bitrate_data = ( ) => {\r\n    return (axios.post(cilentConfig.endpoint.api +'/bus/get_pertitle_bitrate_data'))\r\n}\r\n\r\nexport const get_pertitle_data_by_parameter = (flag, bitrate, cp, category, genre_org ) => {\r\n    if( bitrate === null) { bitrate = \"-1\"}\r\n    if( cp === null) { cp = \"-1\"}\r\n    if( category === null) { category = \"-1\"}\r\n    if( genre_org === null) { genre_org = \"-1\"}\r\n\r\n   // console.log(bitrate , cp , category, genre_org)\r\n    let data = { }\r\n\r\n    if(flag == 1 ){\r\n     data = {\r\n        bitrate : bitrate\r\n     }\r\n    }\r\n\r\n   // console.log(data)\r\n\r\n    return (axios.post(cilentConfig.endpoint.api +'/bus/get_pertitle_data_by_parameter',data ))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*----- NEW BUNSEOK -----*/\r\n/* 5번  */\r\n\r\n/*스캐터 그래프 datarate 1700이상 오버 데이터 가져오기  */\r\nexport const get_higher_contents_data = () =>{\r\n    return (axios.post(cilentConfig.endpoint.api  +\"/bus/get_higher_contents_data\"));\r\n}\r\n/* 6번  */\r\n/* 로우데이터 가져오기  LEGACY*/\r\nexport const get_pertitle_data_by_data = (before_date, after_date) =>{\r\n    const data = {\r\n        before_date : before_date,\r\n        after_date : after_date,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_pertitle_data_by_date\", data));\r\n}\r\n\r\n\r\n/* 로우데이터 가져오기   */\r\nexport const get_raw_data_for_cheukjeong = (before_date, after_date) =>{\r\n    const data = {\r\n        before_date : before_date,\r\n        after_date : after_date,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/bus/get_raw_data_for_cheukjeong\", data));\r\n}\r\n\r\n\r\n/* 로그인 */\r\n// export const get_login_data = (mem_userid, mem_password) => {\r\n//   const data = {\r\n//     mem_userid: mem_userid,\r\n//     mem_password: mem_password\r\n//   }\r\n//   return (axios.post(cilentConfig.endpoint.api + \"/login\", data));\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* 회원가입  */\r\n\r\n export const test = (mem_username, mem_email, mem_password, mem_sosok_nm, mem_gb_cd) =>{\r\n     const data = {\r\n        mem_username: mem_username,\r\n        mem_userid : mem_email,\r\n        mem_email : mem_email,\r\n        mem_password: mem_password,\r\n        mem_sosok_nm: mem_sosok_nm,\r\n        mem_gb_cd : mem_gb_cd\r\n      }\r\n      return (axios.post(cilentConfig.endpoint.api + \"/member/setMemberSignUp\",data));\r\n      //return (axios.post(\"http://localhost:3031/api/member/test\",data));\r\n}\r\n\r\n\r\n\r\n/* 로그인 */\r\nexport const get_login_data = (mem_email, user_password) => {\r\n    const data = {\r\n      mem_email : mem_email,\r\n      mem_password: user_password,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api +\"/login\",data));\r\n   // return (axios.post(\"http://localhost:3031/api/login\",data));\r\n  }\r\n  \r\n  export const setMemberSignUp = (mem_username, mem_email, mem_password, mem_sosok_nm, mem_gb_cd) => {\r\n    const data = {\r\n      mem_username: mem_username,\r\n      mem_userid : mem_email,\r\n      mem_email : mem_email,\r\n      mem_password: mem_password,\r\n      mem_sosok_nm: mem_sosok_nm,\r\n      mem_gb_cd : mem_gb_cd\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/member/setMemberSignUp\",data));\r\n    //return (axios.post(\"http://localhost:3031/api/member/setMemberSignUp\",data));\r\n  }\r\n  \r\n\r\nexport const getEmailIsAlreadyExist = (mem_userid) =>{\r\n    console.log(mem_userid)\r\n    const data = {\r\n        mem_userid : mem_userid\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/member/getEmailIsAlreadyExist\",data));\r\n    //return (axios.post(\"http://localhost:3031/api/member/getEmailIsAlreadyExist\",data));\r\n}\r\n\r\nexport const getForgetPassword = (emailConfig) =>{\r\n    const data ={\r\n        emailConfig : emailConfig\r\n    }\r\n    //return (axios.post(\"http://localhost:3031/api/member/getForgetPassword\",emailConfig));\r\n    return (axios.post(cilentConfig.endpoint.api + \"/member/getForgetPassword\",data));\r\n}\r\n\r\n  \r\n\r\n/* UserManageTable */\r\nexport const getMemberManagementList = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/member/getMemberManagementList\"));\r\n}\r\n\r\nexport const getUpdateByMemberAuth = (mem_gb_cd, mem_userid) => {\r\n    const data ={\r\n        mem_gb_cd : mem_gb_cd,\r\n        mem_userid: mem_userid\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/member/getUpdateByMemberAuth\",data));\r\n    //return (axios.post(\"http://localhost:3031/api/member/getUpdateByMemberAuth\",data));\r\n}\r\n\r\n\r\n\r\n/* UserManageTable */\r\n/* GB_CD 별 GB_CD_NM */\r\nexport const getGubunCDMapping = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/member/getGubunCDMapping\"));\r\n   // return (axios.post(\"http://localhost:3031/api/member/getGubunCDMapping\"));\r\n}\r\n\r\n\r\n\r\n\r\n/*구분별 DEFAULT TABLE을 위함   */\r\nexport const getGubunPageList = (mem_gb_cd, mem_userid) => {\r\n    const data ={\r\n        mem_gb_cd : mem_gb_cd,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/member/getGubunPageList\",data));\r\n    //return (axios.post(\"http://localhost:3031/api/member/getGubunPageList\",data));\r\n}\r\n\r\n/*구분별 페이지 세팅 , 초기 셀렉트 드롭박스 옵션을 위함  */\r\nexport const getpageCDMapping = () => {\r\n\r\n    return (axios.post(cilentConfig.endpoint.api + \"/member/getpageCDMapping\"));\r\n    //return (axios.post(\"http://localhost:3031/api/member/getpageCDMapping\"));\r\n}\r\n\r\n/* 구분별 선택한 권한을 세팅  */\r\nexport const setSelectedPages = (mem_gb_cd, id_array) => {\r\n   \r\n    const data ={\r\n        mem_gb_cd : mem_gb_cd,\r\n        id_array :  id_array,\r\n    }\r\n  \r\n    return (axios.post(cilentConfig.endpoint.api + \"/member/setSelectedPages\",data));\r\n    //return (axios.post(\"http://localhost:3031/api/member/setSelectedPages\",data));\r\n}\r\n\r\n\r\n\r\n\r\n//대기 인원 가져오기 \r\nexport const getStandbyMemberList = () => {\r\n    return (axios.post(cilentConfig.endpoint.api + \"/member/getStandbyMemberList\"));\r\n    //return (axios.post(\"http://localhost:3031/api/member/getStandbyMemberList\"));\r\n}\r\n\r\n\r\nexport const setMemberStatus = (mem_status, mem_userid) => {\r\n    const data ={\r\n        mem_status : mem_status,\r\n        mem_userid :  mem_userid,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/member/setMemberStatus\",data));\r\n    //return (axios.post(\"http://localhost:3031/api/member/setMemberStatus\",data));\r\n}\r\n\r\n\r\n\r\n\r\nexport const deleteMember = (mem_userid) => {\r\n    const data ={\r\n        mem_userid :  mem_userid,\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/member/deleteMember\",data));\r\n    //return (axios.post(\"http://localhost:3031/api/member/deleteMember\",data));\r\n}\r\n\r\n\r\n/*승인 거절시 이메일 전송용  */\r\nexport const sendMail = (emailConfig) =>{\r\n    const data ={\r\n        emailConfig : emailConfig\r\n    }\r\n    return (axios.post(cilentConfig.endpoint.api + \"/member/sendMail\",data));\r\n    //return (axios.post(\"http://localhost:3031/api/member/sendMail\",data));\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const get_VMAF = (CID)  => {\r\n    const data = {\r\n        CID : CID\r\n    }\r\n    return (axios.post(\"http://localhost:3001/api/get_vmaf\",data));\r\n}\r\nexport const get_Content_Name = (CID)  => {\r\n    const data = {\r\n        CID : CID\r\n    }\r\n    return (axios.post(\"http://localhost:3001/api/get_Content_Name\",data));\r\n}\r\n\r\nexport const get_VMAF_redis = ()  => {\r\n    const data ={\r\n        cid: \"{164170F6-5E3D-498A-8780-7BF1015B1006}\",\r\n        value_type:\"vmaf\"\r\n    }\r\n    return (axios.post(\"https://alphacomu.tk:3030/api/bus/get_value_data\",\r\n        data\r\n    ));\r\n}\r\n\r\n//vmaf , ssnr , psnr 가져오기\r\nexport const get_ContentData = (cid)  => {\r\n    const data = {\r\n        cid : cid\r\n    }\r\n    return (axios.post(\"http://localhost:3001/api/get_ContentData\",data));\r\n}\r\n\r\n\r\nexport const get_thumb = (cid, frame)  => {\r\n   // console.log(\"get_thumb\",cid, frame);\r\n    const data ={\r\n        cid : cid,\r\n        frame:frame\r\n    }\r\n    return (axios.post(\"http://localhost:3001/api/images/Frame/get_thumb\",\r\n        data\r\n    ));\r\n}\r\n//vmaf , ssnr , psnr 가져오기\r\nexport const get_pertitleData = ()  => {\r\n\r\n    return (axios.post(\"http://localhost:3001/api/get_pertitleData\"));\r\n}\r\n\r\n//CID, BASELINE,RETENSION_RATE,VMAF_AVG, COMPLEXITY_LV, DATARATE\r\nexport const get_pertitleData_STG1 = ()  => {\r\n    return (axios.post(\"http://localhost:3001/api/get_pertitleData_STG1\"));\r\n}\r\n\r\n/*최빈값  */\r\n//CID, BASELINE,RETENSION_RATE,VMAF_AVG, COMPLEXITY_LV, DATARATE\r\nexport const get_MAX_FREQUENCY = ()  => {\r\n    return (axios.post(\"http://localhost:3001/api/get_MAX_FREQUENCY\"));\r\n}\r\n\r\n/* 원본 데이터 가져오기  */\r\nexport const get_Origin_VmafAvg = ()  => {\r\n    return (axios.post(\"http://localhost:3001/api/get_Origin_VmafAvg\"));\r\n}\r\n/*100점 뺴기 */\r\nexport const get_CAL_100 = ()  => {\r\n    return (axios.post(\"http://localhost:3001/api/get_CAL_100\"));\r\n}\r\n/* 최빈값을 기준으로 백분률 datarate */\r\nexport const get_fre_Retension = () => {\r\n    return (axios.post(\"http://localhost:3001/api/get_fre_Retension\"));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport style from './Notice.module.css'\r\nimport Popup from \"reactjs-popup\";\r\nimport Cookies from 'universal-cookie';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport { styled } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport * as boardApi from '../../lib/api/boardApi'\r\n\r\nconst MyButton = styled(Button)({\r\n  //background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n  background: 'linear-gradient(45deg, #fab005 30%, #f59f00 90%)',\r\n  border: 0,\r\n  borderRadius: 3,\r\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  //boxShadow: '0 3px 5px 2px #ff',\r\n  color: 'white',\r\n  height: 30,\r\n  padding: '0 10px',\r\n});\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport default class Notice extends Component { \r\n    state = {\r\n        open: true ,\r\n        checked :false,\r\n        noticeContent : '',\r\n        from : '',\r\n        to : '',\r\n    }\r\n    componentDidMount(){\r\n        this.getNotice();\r\n    }\r\n\r\n    getNotice = async() => {\r\n       try{\r\n            const response = await boardApi.getNotice();\r\n            console.log(response)\r\n            let noticeContent = response.data.result[0];\r\n            console.log('noticeContent ',noticeContent)\r\n\r\n            //현재 날짜와 to 날짜를 비교해서 만약에 t\r\n            // 현재날짜 > to 날짜이면 not visual\r\n\r\n\r\n            this.setState({\r\n                noticeContent : noticeContent.POSTS_NAEYONG,\r\n                from : noticeContent.NOTICE_START,\r\n                to : noticeContent.NOTICE_END\r\n            })\r\n          \r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    getCookie = () => {\r\n        let result = cookies.get('modalNotice')\r\n        if (result === 'end') {\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n     setCookie = (  expiredays )=>{\r\n        //console.log('setCookie ')\r\n        let todayDate = new Date();\r\n        todayDate.setDate( todayDate.getDate() + expiredays );\r\n        //console.log('todayDate ', todayDate)\r\n        cookies.set('modalNotice', 'end', { expires: todayDate } );\r\n    }\r\n\r\n    openModal = () =>{\r\n        this.setState({ \r\n            open: true \r\n        })\r\n    }\r\n    closeModal = () =>{\r\n        const { checked } = this.state;\r\n        // this.setState({ \r\n        //     open: false \r\n        // })\r\n        if(checked){\r\n            this.setCookie(1);\r\n        }\r\n\r\n    }\r\n    componentDidUpdate(){\r\n        //console.log(this.state.checked)\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({ \r\n            checked: !e.target.value\r\n        });\r\n      };\r\n    \r\n\r\n    render() {\r\n        const { postsNaeYong } = this.props;\r\n        const {noticeContent } = this.state;\r\n    return (\r\n      <div>\r\n        <Popup\r\n            open={this.state.open}\r\n        >\r\n        {close => (\r\n          <div className={style.modal}>\r\n            <a className={style.close} onClick={close}>\r\n              &times;\r\n            </a>\r\n    \r\n            <div className= {style.header}> \r\n                공지사항 \r\n            </div>\r\n\r\n            <div className= {style.content}>\r\n                { ReactHtmlParser(noticeContent) }\r\n         \r\n            </div>\r\n        \r\n            <div className={style.actions}>\r\n                {/*\r\n              <Popup\r\n                trigger={\r\n                    <input type=\"checkbox\" name=\"close\" value=\"OK\" onclick={() =>{\r\n                        this.setState({\r\n                            checked: !this.state.checked\r\n                        })  \r\n                    }}/>            \r\n                }\r\n                position=\"top center\"\r\n                closeOnDocumentClick>\r\n                <span>\r\n                  Lorem ipsum dolor sit amet, consectetur adipisicing elit. Beatae\r\n                  magni omnis delectus nemo, maxime molestiae dolorem numquam\r\n                  mollitia, voluptate ea, accusamus excepturi deleniti ratione\r\n                  sapiente! Laudantium, aperiam doloribus. Odit, aut.\r\n                </span>\r\n              </Popup>\r\n\r\n                */}\r\n        \r\n            <div className = {style.buttonFooter} >\r\n                <div className = {style.checkBox} >\r\n                    <Checkbox checked={this.state.checked} \r\n                              onChange={ () =>{\r\n                                                this.setState({\r\n                                                    checked: !this.state.checked\r\n                                                })  \r\n                                }} \r\n                                value=\"checked\" />\r\n                        오늘 하루동안 이 창을 열지 않기 \r\n                </div>\r\n           \r\n                <div className = {style.closeBox}>\r\n                    <MyButton\r\n                        onClick={() => {\r\n                            this.closeModal();\r\n                            //console.log('modal closed ')\r\n                            close()\r\n                        }}>닫기\r\n                    </MyButton>\r\n                </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        )}\r\n      </Popup>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { Button, Tooltip  } from 'reactstrap';\r\nimport style from './PasswordChange.module.css';\r\nimport * as memberApi from '../../../lib/api/memberApi';\r\nimport WithAuth from '../../WithAuth';\r\n\r\n\r\nconst ERROR_STR = \" \";\r\nconst EROOR_STR2 = \" \"; \r\nconst styles = theme => ({\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing.unit,\r\n      marginRight: theme.spacing.unit,\r\n      width: 300,\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n\r\n  });\r\n\r\n  \r\nclass PasswordChange extends Component {\r\n    state = {\r\n      passwordOrigin : '',\r\n      passwordNewFirst : '',\r\n      passwordNewSecond : '',\r\n\r\n      showPasswordOrigin : false,\r\n      showPasswordNewFirst : false,\r\n      showPasswordNewSecond : false,\r\n\r\n      tooltipOpenOrigin : false,\r\n      tooltipOpenNewFirst : false,\r\n      tooltipOpenNewSecond : false,\r\n\r\n      open : false, //전역오픈\r\n\r\n\r\n      targetInput : 'originPasswordInput',\r\n\r\n      msg : '',\r\n    }\r\n    handleClickShowPassword = () => {\r\n      this.setState(state => ({ showPassword: !state.showPassword }));\r\n    };\r\n    // 영문, 숫자 혼합하여 6~20자리 이내\r\n    checkValidationPassword = (password, res) =>{\r\n        let reg_pwd = /^.*(?=.{6,20})(?=.*[0-9])(?=.*[a-zA-Z]).*$/;\r\n        if(!reg_pwd.test(password)){\r\n        return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    updatePassword = async() => {\r\n      const { confirm, toast } = this.props;\r\n      const { checkValidationPassword,toolTipView } = this; \r\n      const { passwordOrigin,\r\n              passwordNewFirst,\r\n              passwordNewSecond } =  this.state;\r\n\r\n      if (!checkValidationPassword(passwordOrigin)){\r\n          toolTipView('tooltipOpenOrigin',\r\n                      'originPasswordInput',\r\n                      '패스워드는 영문 숫자 혼합하여 6~20자리 입니다.',);\r\n\r\n          return;\r\n      }\r\n      if (!checkValidationPassword(passwordNewFirst)){\r\n        toolTipView('tooltipOpenNewFirst', \r\n                    'newFirstPasswordInput',\r\n                    '패스워드는 영문 숫자 혼합하여 6~20자리 입니다.',);\r\n          return;\r\n      }\r\n      if (!checkValidationPassword(passwordNewSecond)){\r\n        toolTipView('tooltipOpenNewSecond', \r\n                    'newSecondPasswordInput',\r\n                    '패스워드는 영문 숫자 혼합하여 6~20자리 입니다.');\r\n          return;\r\n      }\r\n      if( passwordNewFirst !== passwordNewSecond){\r\n        toolTipView('tooltipOpenNewFirst', \r\n        'newfirstPasswordInput',\r\n        null );\r\n\r\n        toolTipView('tooltipOpenNewSecond',\r\n        'newSecondPasswordInput',\r\n        null );\r\n\r\n\r\n        toast.error('새로운 비밀번호를 확인해주세요.', {\r\n          position: \"top-center\",\r\n          autoClose: 1500,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          });\r\n          return;\r\n      }\r\n      // api 보내기 \r\n      // 현재 비밀번호가 다릅니다 ..\r\n      \r\n      try{\r\n        console.log('try')\r\n        const response = await memberApi.updatePassword( confirm.mem_email,\r\n                                                         passwordOrigin,\r\n                                                         passwordNewFirst, \r\n                                           passwordNewSecond);\r\n        const resInfo = response.data;\r\n        console.log(resInfo)\r\n        if(resInfo.code === 400){\r\n          toast.error(\"현재 비밀번호가 틀립니다.\", {\r\n            position: \"top-center\",\r\n            autoClose: 1500,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            });\r\n        }\r\n\r\n        if(resInfo.code === 200){\r\n          toast.success(\"비밀번호 업데이트에 성공하였습니다.\", {\r\n            position: \"top-center\",\r\n            autoClose: 1500,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            });\r\n            this.clearInput();\r\n        }\r\n        \r\n      }catch(e){\r\n\r\n        console.log(e)\r\n        \r\n      }\r\n    }\r\n    clearInput = () =>{\r\n      const { passwordChangeSetting } = this.props;\r\n      this.setState({\r\n        passwordOrigin : '',\r\n        passwordNewFirst : '',\r\n        passwordNewSecond : '',\r\n      },() => passwordChangeSetting())\r\n    }\r\n\r\n\r\n\r\n    handleChange = (e) =>{\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    }\r\n\r\n\r\n    handleClickShowPasswordOrigin = () =>{\r\n      this.setState({\r\n        showPasswordOrigin : !this.state.showPasswordOrigin\r\n      });\r\n    }\r\n    handleClickShowPasswordNewFirst = () =>{\r\n      this.setState({\r\n        showPasswordNewFirst : !this.state.showPasswordNewFirst\r\n      });\r\n    }\r\n    handleClickShowPasswordNewSecond = () =>{\r\n      this.setState({\r\n        showPasswordNewSecond : !this.state.showPasswordNewSecond\r\n      });\r\n    }\r\n\r\n\r\n    toolTipView = (tooltip, targetInput,  msg)=> {\r\n      this.setState({\r\n        [tooltip]: true,\r\n        targetInput : targetInput,\r\n        msg : msg,\r\n        open : msg !== null ? true : false,\r\n      },() =>{\r\n          setTimeout(() => {\r\n              this.setState({\r\n                [tooltip]: false,\r\n                targetInput : '',\r\n                msg : '',\r\n                open :false,\r\n            })\r\n          }, 2000);\r\n      })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { tooltipOpenOrigin,\r\n                tooltipOpenNewFirst,\r\n                tooltipOpenNewSecond,\r\n                open,\r\n                msg,\r\n                targetInput } = this.state;\r\n        const { classes,\r\n                passwordChangeSetting } = this.props;\r\n        return (\r\n        <div className = {style.passwdChangeContainer}>\r\n            <form className={classes.container} noValidate autoComplete=\"off\">\r\n            <Tooltip \r\n                    innerClassName = {style.tooltip}\r\n                    arrowClassName = {style.tooltip_success}  \r\n                    placement=\"top\" \r\n                    isOpen={open} \r\n                    //target=\"origin-password-input\"\r\n                    target={targetInput}\r\n                    autohide = 'true'\r\n                    >\r\n              {msg}\r\n            </Tooltip>\r\n            <TextField\r\n                    error = { tooltipOpenOrigin  ? (true) : (false)}\r\n                    id=\"originPasswordInput\"\r\n                    label=\"현재 비밀번호\"\r\n                    className={classes.textField}\r\n                    type={this.state.showPasswordOrigin ? 'text' : 'password'}\r\n                    autoComplete=\"current-password\"\r\n                    margin=\"normal\"\r\n                    name = 'passwordOrigin'\r\n                    onChange ={this.handleChange}\r\n                    InputProps={{\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            aria-label=\"Toggle password visibility\"\r\n                            onClick={this.handleClickShowPasswordOrigin}\r\n                            id = \"passwordOrigin\"\r\n                          >\r\n                            {this.state.showPasswordOrigin ? <VisibilityOff /> : <Visibility />}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                />\r\n            \r\n            </form>\r\n            <form className={classes.container} noValidate autoComplete=\"off\">\r\n              <TextField\r\n                    error = { tooltipOpenNewFirst  ? (true) : (false)}\r\n                    id=\"newFirstPasswordInput\"\r\n                    label=\"새로운 비밀번호\"\r\n                    className={classes.textField}\r\n                    type={this.state.showPasswordNewFirst ? 'text' : 'password'}\r\n                    autoComplete=\"current-password\"\r\n                    margin=\"normal\"\r\n                    name = 'passwordNewFirst'\r\n                    onChange ={this.handleChange}\r\n                    InputProps={{\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            aria-label=\"Toggle password visibility\"\r\n                            onClick={this.handleClickShowPasswordNewFirst}\r\n                          >\r\n                            {this.state.showPasswordNewFirst ? <VisibilityOff /> : <Visibility />}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                />\r\n            </form>\r\n            <form className={classes.container} noValidate autoComplete=\"off\">\r\n                <TextField\r\n                    error = {tooltipOpenNewSecond  ? (true) : (false)}\r\n                    id=\"newSecondPasswordInput\"\r\n                    label=\"새로운 비밀번호 확인\"\r\n                    className={classes.textField}\r\n                    type={this.state.showPasswordNewSecond ? 'text' : 'password'}\r\n                    autoComplete=\"current-password\"\r\n                    margin=\"normal\"\r\n                    name = 'passwordNewSecond'\r\n                    onChange ={this.handleChange}\r\n                    InputProps={{\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            aria-label=\"Toggle password visibility\"\r\n                            onClick={this.handleClickShowPasswordNewSecond}\r\n                          >\r\n                            {this.state.showPasswordNewSecond ? <VisibilityOff /> : <Visibility />}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                />\r\n            </form>\r\n            <div className>\r\n              <Button outline color=\"primary\"\r\n                      onClick ={this.updatePassword} > \r\n                 변경\r\n              </Button>{' '}\r\n              <Button outline color=\"info\"\r\n                       onClick ={passwordChangeSetting} >\r\n                취소\r\n              </Button>{' '}\r\n            </div>\r\n        </div>\r\n        )\r\n  }\r\n}\r\nPasswordChange.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default WithAuth(withStyles(styles)(PasswordChange));\r\n","import React, { Component, Fragment } from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from 'reactstrap';\r\nimport fontawesome from '@fortawesome/fontawesome'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { fa, faUserCircle } from '@fortawesome/fontawesome-free-solid'\r\nimport WithAuth from '../../WithAuth';\r\nimport style from './MyPage.module.css';\r\nimport PasswordChange from '../PasswordChange'\r\n\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport * as memberApi from '../../../lib/api/memberApi';\r\nimport helpers from '../../../lib/helpers';\r\n\r\n\r\nfontawesome.library.add(faUserCircle);\r\nconst styles = theme => ({\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing.unit,\r\n      marginRight: theme.spacing.unit,\r\n      width: 250,\r\n    },\r\n    dense: {\r\n      marginTop: 19,\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n  });\r\n\r\n  \r\nclass MyPage extends Component {\r\n     \r\n    state = {\r\n      passwordChangeSet : false,\r\n      gubun : '',\r\n      name : '',\r\n      sosok : '',\r\n      email : ''\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.getMemberInfo();\r\n    }\r\n\r\n    getMemberInfo = async() => {\r\n      const { confirm } = this.props;\r\n      //onsole.log('confirm ', confirm.mem_email)\r\n      try{\r\n        let response = await memberApi.getMemberInfo(confirm.mem_email);\r\n        let memberInfo = response.data[0]\r\n        console.log(memberInfo)\r\n        this.setState({\r\n          gubun : memberInfo.GB_CD_NM,\r\n          email : memberInfo.MEM_EMAIL,\r\n          sosok : memberInfo.MEM_SOSOK_NM,\r\n          name  : memberInfo.MEM_USERNAME\r\n        })\r\n      }catch(e){\r\n        console.log(e)\r\n      }\r\n    }\r\n\r\n    updateMemberSosok = async() => {\r\n      const { sosok } =this.state;\r\n      const { confirm } = this.props;\r\n      //onsole.log('confirm ', confirm.mem_email)\r\n      console.log(sosok);\r\n      try{\r\n        let response = await memberApi.updateMemberSosok(sosok, confirm.mem_email);\r\n        console.log('res ', response)\r\n        if ( response.data.code === 200 ){\r\n          toast.success('업데이트에 성공하였습니다.', {\r\n            position: \"top-center\",\r\n            autoClose: 1500,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            });\r\n        }else{\r\n          toast.error('업데이트에 실패하였습니다.', {\r\n            position: \"top-center\",\r\n            autoClose: 1500,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            });\r\n        }\r\n        \r\n      }catch(e){\r\n        console.log(e)\r\n      }\r\n    }\r\n  \r\n    passwordChangeSetting = () => {\r\n      this.setState({\r\n        passwordChangeSet : !this.state.passwordChangeSet\r\n      })\r\n    }\r\n\r\n\r\n    handleChange = (e) =>{\r\n      console.log(e)\r\n      this.setState({\r\n        sosok : e.target.value,\r\n      });\r\n    }\r\n    render() {\r\n      console.log(this.state.sosok)\r\n        const { classes } = this.props;\r\n        const { name, \r\n                sosok, \r\n                email, \r\n                gubun, \r\n                passwordChangeSet}  = this.state;\r\n        return (\r\n          <div className = {style.myPageContainer}>\r\n\r\n          <div className = {style.outer}>\r\n          <div className = {style.inner}>\r\n          <div className = {style.centered}>\r\n          <ToastContainer\r\n              position=\"top-center\"\r\n              autoClose={3000}\r\n              hideProgressBar={true}\r\n              newestOnTop={false}\r\n              closeOnClick\r\n              rtl={false}\r\n              pauseOnVisibilityChange\r\n              draggable\r\n              pauseOnHover\r\n          /> \r\n            <FontAwesomeIcon \r\n            icon=\"user-circle\" \r\n            size=\"5x\" \r\n            color=\"#868e96\"\r\n            />\r\n            <h4> \r\n            {name}\r\n            </h4>\r\n             \r\n            <h4> \r\n            {gubun}\r\n            </h4>\r\n            <hr/>\r\n            {!passwordChangeSet ?  ( \r\n              <Fragment>\r\n            <div>\r\n              <TextField\r\n                id=\"outlined-name\"\r\n                label=\"이메일\"\r\n                className={classes.textField}\r\n                value={email}\r\n                //onChange={this.handleChange('name')}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                id=\"outlined-name\"\r\n                label=\"이름\"\r\n                className={classes.textField}\r\n                value={name}\r\n                //onChange={this.handleChange('name')}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n            <form>\r\n              <TextField\r\n                id=\"outlined-name\"\r\n                label='소속'\r\n                className={classes.textField}\r\n                value={sosok}\r\n                onChange={this.handleChange}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n            </form>\r\n              <div className>\r\n                <Button outline color=\"info\"\r\n                        onClick = {this.updateMemberSosok} >\r\n                  정보 수정\r\n                </Button>{' '}\r\n\r\n                <NavLink to ={'/board/notice'}>\r\n                  <Button outline color=\"info\">\r\n                    취소\r\n                  </Button>{' '}\r\n                </NavLink>\r\n\r\n                <Button outline color=\"primary\"\r\n                        onClick = {this.passwordChangeSetting}>\r\n                  패스워드 변경\r\n                </Button>{' '}\r\n              </div>\r\n              </Fragment>\r\n            ):\r\n            (\r\n              <PasswordChange passwordChangeSetting = {this.passwordChangeSetting}\r\n                              toast ={toast}/>\r\n            )}\r\n              </div>\r\n              </div>\r\n\r\n              </div>\r\n          \r\n          </div>\r\n          \r\n        )\r\n  }\r\n}\r\nexport default WithAuth(withStyles(styles)(MyPage));\r\n","\r\nimport 'rc-time-picker/assets/index.css';\r\nimport React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport TimePicker from 'rc-time-picker';\r\nimport style from './DateTimePicker.module.css'\r\nimport './DateTimePicker.css'\r\nimport 'react-day-picker/lib/style.css';\r\nimport { DateUtils } from 'react-day-picker';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\n\r\n\r\nimport 'moment/locale/ko';\r\nimport MomentLocaleUtils, {\r\n    formatDate,\r\n    parseDate,\r\n} from 'react-day-picker/moment';\r\n\r\n\r\n\r\nimport Tooltip from 'rc-tooltip'\r\nimport 'rc-tooltip/assets/bootstrap_white.css';\r\nimport fontawesome from '@fortawesome/fontawesome'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faQuestionCircle} from '@fortawesome/fontawesome-free-solid'\r\n\r\n\r\nimport * as boardApi from '../../../lib/api/boardApi';\r\nimport helpers from '../../../lib/helpers';\r\n\r\n\r\n\r\n\r\nexport default class DateTimePicker extends Component {\r\n\r\n    state = {\r\n        url : 'http://1.255.44.18:8080/tas2mon/tas2_cqms_gw.do',\r\n        fromTime : '', \r\n        toTime: '',\r\n\r\n        from: undefined,\r\n        to: undefined,\r\n\r\n        defalut_from : '', \r\n        defalut_to : '',\r\n\r\n        value :  '',\r\n\r\n        buttonClickName : 'week',\r\n        componentNameList : ['cqms_cdr_st_graph_stat',\r\n                             'cqms_purchase_st_graph_stat'],\r\n\r\n        toggleAll : true\r\n\r\n\r\n    }\r\n\r\n     /*\r\n    추가#\r\n    shouldComponentUpdate\r\n        dataToTransfer는 컴포넌트 간 데이터 전송 시 필요한 데이터가 저장되는 변수로\r\n        EditableLayout의 모든 child components에 props로 전달된다.\r\n        어떤 컴포넌트가 데이터를 받는지 알 수 없기 때문에 key값이 컴포넌트의 이름과 같으면\r\n        데이터에 대한 처리를 하고 값이 다르면 리렌더링을 하지 않는다.\r\n    */\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     /* 현재 scatter data 랑 nextState.data랑 같으면 렌더링 X  */\r\n    //     // if( this.state.data === nextState.data){\r\n    //     //     return false;\r\n    //     // }\r\n    // // console.log('shouldComponentUpdate')\r\n    //     if(nextProps.dataToTransfer !== this.props.dataToTransfer){\r\n    //         if(!helpers.isEmpty(nextProps.dataToTransfer) &&\r\n    //             !helpers.isEmpty(nextProps.dataToTransfer[this.constructor.name])){\r\n    //             //processing\r\n    //             let params = nextProps.dataToTransfer[this.constructor.name];\r\n    //             //console.log('params',params)\r\n    //             if( params.judge === 'toggleClick' ){\r\n    //               this.setToggleValue(params);\r\n    //             }\r\n    //             //this.searchAllContentData(nextProps.dataToTransfer[this.constructor.name]) 이렇게 사용 \r\n    //             return true;\r\n    //         }\r\n    //         else{\r\n    //             if(this.state !== nextState ){\r\n    //                 return true;\r\n    //             }\r\n    //             return false; \r\n    //         }       \r\n    //     }\r\n    //     return true;\r\n    // }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        // 여기서는 setState 를 하는 것이 아니라\r\n        // 특정 props 가 바뀔 때 설정하고 설정하고 싶은 state 값을 리턴하는 형태로\r\n        // 사용됩니다.\r\n        if ( nextProps.edit ){\r\n            return { from: nextProps.from,\r\n                    to : nextProps.to };\r\n        }\r\n\r\n\r\n\r\n        // console.log('from  ' , nextProps.from )\r\n        // console.log('to   ' ,nextProps.to )\r\n        // if(  helpers.isEmpty(nextProps.from)\r\n        // && helpers.isEmpty(nextProps.to)){\r\n        //     return null\r\n        // }\r\n        // if (nextProps.from !== prevState.from || \r\n        //      nextProps.to !== prevState.to) {\r\n        //   return { from: nextProps.from,\r\n        //             to : nextProps.to };\r\n        // }\r\n        \r\n        //return null; // null 을 리턴하면 따로 업데이트 할 것은 없다라는 의미\r\n    \r\n      }\r\n  \r\n    componentDidMount(){\r\n        this.get_server_time();\r\n        //this.get_system_date_and_min_date();\r\n    }\r\n\r\n    handleFromValueChange = (fromTime) => {\r\n        //console.logconsole.log(fromTime && fromTime.format('HH:mm:00'));\r\n        this.setState({ fromTime });\r\n    };\r\n\r\n    handleToValueChange = (toTime) => {\r\n        //console.log(toTime && toTime.format('HH:mm:00'));\r\n        this.setState({ toTime });\r\n    };\r\n\r\n\r\n    get_server_time = async() =>{\r\n        const { propsTo, propsFrom } = this.props;\r\n        const serverTime = await boardApi.get_server_time();\r\n        let thisTime = serverTime.data;\r\n        console.log(thisTime)\r\n        this.setState({\r\n            from : moment(thisTime)._d, \r\n            to :  moment(thisTime).add(7 ,'day')._d,\r\n            defalut_from :  moment(thisTime)._d, \r\n            defalut_to : moment(thisTime).add(7, 'day')._d,\r\n        }, () => { this.props.pickUpFromTo(thisTime) })\r\n    }\r\n    \r\n\r\n    /* 그룹 버튼  */\r\n    SearchButtonClick = async(e) => {     \r\n\r\n        const {\r\n            from, \r\n            to\r\n        \r\n        } = this.state;\r\n        const { createURL } = this;\r\n        let buttonName = e.target.name\r\n\r\n       // console.log('from!!!!!!!!!!!!!!' ,from)\r\n       // console.log('to!!!!!!!!!!!!!!!!!!' , to)\r\n        if(from === undefined || to === undefined){\r\n            alert('올바른 기간을 입력해주세요.')\r\n            return \r\n        }\r\n        if(buttonName === 'day'){\r\n            let beforeDate = moment(from).format('YYYYMMDD')\r\n            let afterDate =  moment(from).add(1,'day').format('YYYYMMDD')\r\n            this.setState({\r\n                from :  moment(beforeDate)._d,\r\n                to : moment(afterDate)._d,\r\n                buttonClickName : 'day'\r\n            },() => this.props.buttonClickDay(beforeDate,afterDate))\r\n        }\r\n        if(buttonName === 'week'){ //일주일 단위  \r\n            let beforeDate = moment(from).format('YYYYMMDD')\r\n            let afterDate =  moment(from).add(7,'day').format('YYYYMMDD')\r\n            this.setState({\r\n                from :  moment(beforeDate)._d,\r\n                to : moment(afterDate)._d,\r\n                buttonClickName  : 'week'  \r\n             },() => this.props.buttonClickDay(beforeDate,afterDate))\r\n        }\r\n        if( buttonName === 'month'){ //한달 단위 \r\n            let beforeDate = moment(from).format('YYYYMMDD')\r\n            let afterDate =  moment(from).add(1,'months').format('YYYYMMDD')\r\n            this.setState({\r\n                from :  moment(beforeDate)._d,\r\n                to : moment(afterDate)._d,\r\n                buttonClickName  : 'month'  \r\n             },() => this.props.buttonClickDay(beforeDate,afterDate)) \r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    /* daypicker 함수  */\r\n    showFromMonth() {\r\n        //console.log('showFromMonth')\r\n        const { from, to } = this.state;\r\n        if (!from) {\r\n            return;\r\n        }\r\n        if (moment(to).diff(moment(from), 'months') < 2) {\r\n            this.to.getDayPicker().showMonth(from);\r\n        }\r\n    }\r\n    handleFromChange = (from) => {\r\n        this.setState({ \r\n            from,\r\n        });\r\n        //callback 함수 \r\n        this.props.handleFromChange(from);\r\n   }\r\n\r\n    handleToChange = (to) => {\r\n       const {defalut_from} = this.state; \r\n\r\n       this.setState({\r\n        //from : moment(to).subtract('days', 1)._d,\r\n        to , \r\n        }, this.showFromMonth,);\r\n\r\n        //callback 함수 \r\n        this.props.handleToChange(to);\r\n    }\r\n\r\n    test = () =>{\r\n        console.log(\"from \" , this.state.from)\r\n        console.log(\"to \" , this.state.to)\r\n    }\r\n\r\n   \r\n    render() {\r\n        const modifiers = { start: from, end: to };\r\n        const { from,\r\n            to,\r\n            fromTime,\r\n            toTime,\r\n            defalut_from,\r\n            defalut_to } = this.state;\r\n\r\n        const { SearchClick, SearchButtonClick } = this;\r\n        //console.log(fromTime)\r\n        return (\r\n            <div>\r\n                <div>\r\n                  \r\n                    <div className={'datetime_searchbar_container'}>\r\n                        <div className={style.searchbar_name}>\r\n                        게시기간: \r\n                        </div>\r\n                        <div className=\"InputFromTo\">\r\n                            <DayPickerInput\r\n                                inputProps={{ readOnly: true }}\r\n                                value={from}\r\n                                //placeholder=\"From\"\r\n                                placeholder={`${formatDate(new Date(), 'LL', 'ko')}`}\r\n                                //placeholder= '전체'\r\n                                format=\"YYYY-MM-DD\"\r\n                                formatDate={formatDate}\r\n                                parseDate={parseDate}\r\n                                dayPickerProps={{\r\n                                    selectedDays: [from, { from, to }],\r\n                                    disabledDays: { before: defalut_from, after: to },\r\n                                    toMonth: to,\r\n                                    modifiers,\r\n                                    numberOfMonths: 1,\r\n                                    locale: 'ko',\r\n                                    localeUtils: MomentLocaleUtils,\r\n                                    onDayClick: () => this.to.getInput().focus(),\r\n                                }}\r\n                                onDayChange={this.handleFromChange}\r\n                            />\r\n                               {/*\r\n                            <TimePicker value={fromTime}\r\n                                        showSecond={true}\r\n                                        minuteStep={1}\r\n                                        onChange={this.handleFromValueChange} />\r\n                               */}\r\n                            {' '}\r\n                            {' '}\r\n                            —\r\n                            {' '}\r\n                            <span className=\"InputFromTo-to\">\r\n                                <DayPickerInput\r\n                                    ref={el => (this.to = el)}\r\n                                    value={to}\r\n                                    inputProps={{ readOnly: true }}\r\n                                    //placeholder=\"To\"\r\n                                    placeholder={`${formatDate(new Date(), 'LL', 'ko')}`}\r\n                                    format=\"YYYY-MM-DD\"\r\n                                    formatDate={formatDate}\r\n                                    parseDate={parseDate}\r\n                                    dayPickerProps={{\r\n                                        selectedDays: [from, { from, to }],\r\n                                        disabledDays: { before: from  },\r\n                                        modifiers,\r\n                                        month: from,\r\n                                        fromMonth: from,\r\n                                        numberOfMonths: 1,\r\n                                        locale: 'ko',\r\n                                        localeUtils: MomentLocaleUtils,\r\n                                    }}\r\n                                    onDayChange={this.handleToChange}\r\n                                />\r\n                                {/*\r\n                                <TimePicker value={toTime}\r\n                                            showSecond={true}\r\n                                            minuteStep={1}\r\n                                            onChange={this.handleToValueChange} />\r\n                                */}\r\n                            </span>\r\n\r\n\r\n                            <div className={style.searchButtonClickContainer}>\r\n                                {\r\n                                    <div className={style.searchButtonClickContainer}>\r\n                                        <button className={this.state.buttonClickName === 'day' ?\r\n                                        style.searchButtonClick : style.searchButton\r\n                                        }\r\n                                            onClick={SearchButtonClick}\r\n                                            name='day'>\r\n                                            하루\r\n                                        </button>\r\n                                        <button className={this.state.buttonClickName === 'week' ?\r\n                                            style.searchButtonClick : style.searchButton\r\n                                        }\r\n                                            onClick={SearchButtonClick}\r\n                                            name='week'>\r\n                                            일주일\r\n                                        </button>\r\n                                        <button className={this.state.buttonClickName === 'month' ?\r\n                                        style.searchButtonClick : style.searchButton\r\n                                        }\r\n                                            onClick={SearchButtonClick}\r\n                                            name='month'>\r\n                                            한달\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                }\r\n                            \r\n                            </div>\r\n                            <Tooltip\r\n                                placement=\"right\"\r\n                                overlay={ <p>공지사항이 띄워질 기간을 명시합니다.</p>   }\r\n                                arrowContent={<div className=\"rc-tooltip-arrow-inner\"></div>}\r\n                            >\r\n                            <FontAwesomeIcon \r\n                                icon=\"question-circle\" \r\n                                size=\"1x\" \r\n                                color=\"#748ffc\"\r\n                                />\r\n                            </Tooltip>\r\n                                <div className = {style.helpQuestion_container}\r\n                                     onClick = {this.cqmsCdrPurchaseManual}>\r\n                                    {/*<FontAwesomeIcon \r\n                                    icon=\"question-circle\" \r\n                                    size=\"1x\" \r\n                                    color=\"#748ffc\"\r\n                                    /> */}\r\n                                </div>\r\n                        </div>\r\n     \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport style from './EditBoard.module.css'\r\nimport ReactQuill, { Quill, Mixin, Toolbar } from 'react-quill'; // ES6\r\nimport { Form, Input, Button } from 'reactstrap';\r\nimport history from '../../../history'\r\nimport 'react-quill/dist/quill.snow.css'; // ES6\r\nimport * as boardApi from '../../../lib/api/boardApi'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport WithAuth from '../../WithAuth';\r\nimport { Link } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport DateTimePicker from '../DateTimePicker'\r\nimport moment from 'moment'\r\n/*글 작성 , 글 수정 컴포넌트 */\r\nclass EditBoard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { \r\n            postsNaeyong: '', // You can also pass a Quill Delta here\r\n            postsJemok : '',\r\n            editNumber: '',\r\n            checked : '',\r\n\r\n            boardNum : [],\r\n            boardSelect : [],\r\n            options : [],\r\n\r\n            selectedOption : null,\r\n            isSearchable : true,\r\n            isClearable : true,\r\n\r\n            to : '',\r\n            from : ''\r\n            \r\n      }\r\n    }\r\n    \r\n    makeSelectOption = async() => {\r\n        try{\r\n            const getBoardList = await boardApi.getBoardList();\r\n            let boardList = getBoardList.data;\r\n            console.log(boardList)\r\n            boardList = boardList.map((item) => {\r\n                return {\r\n                    value : item.BOARD_NUM,\r\n                    label : item.BOARD_NAME\r\n                }\r\n            });\r\n            boardList.unshift(\r\n                {\r\n                    value : 0,\r\n                    label : '게시판을 선택해주세요'\r\n                }\r\n            )\r\n\r\n            //*현재 boardNum 에 대해 세팅  */\r\n            let selectedOption = boardList.filter((item) => item.value === this.state.boardNum)\r\n\r\n            this.setState({\r\n                options : boardList,\r\n                selectedOption: selectedOption\r\n            })\r\n         }catch(e){\r\n            console.log('error' , e )\r\n         }\r\n     }\r\n\r\n    /* 셀렉트 옵션  */\r\n     selectHandleChange = (selectedOption) => {\r\n \r\n        this.setState({ selectedOption });\r\n        console.log(`Option selected:`, selectedOption);\r\n     }\r\n\r\n\r\n     /* 게시판 관련 함수 */\r\n      handlePostsJemokChange = (e) => {\r\n        this.setState({\r\n            postsJemok : e.target.value\r\n        })\r\n      }\r\n\r\n      handleChange = (value) => {\r\n        this.setState({ postsNaeyong: value }, console.log('postsNaeyong ', this.state.postsNaeyong))\r\n      }\r\n\r\n      handleCancle = () => {\r\n        const { editNumber } = this.state; \r\n        history.push((\"/board/notice/\" +`${editNumber}`))\r\n      }\r\n      \r\n\r\n      /* 포스트 존재한다면  */\r\n      ifPostsExist = async() =>{\r\n        //console.log('posts')\r\n        const { match } = this.props;\r\n        let editNumber = match.params.editNumber;\r\n        //console.log(\"editNumber \", editNumber )\r\n        try {\r\n            const ifExistRes = await boardApi.ifPostsExist(editNumber);\r\n            let ifExist = ifExistRes.data[0].IFEXIST;\r\n            if ( ifExist === 1){\r\n                //세션체크 바람\\\r\n                this.setPosts();\r\n            }else{\r\n                alert('잘못된 접근입니다.')\r\n                history.push(\"/board/notice\");\r\n            }\r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n      }\r\n\r\n      componentDidMount(){\r\n          this.ifPostsExist()\r\n      }\r\n\r\n\r\n      setPosts = async() =>{\r\n        const { match } = this.props;\r\n        const response = await boardApi.getPosts(match.params.editNumber);\r\n        console.log(response)\r\n        let postsContent = response.data[0];\r\n        let boardNum = postsContent.BOARD_NUM;\r\n        let postsJemok = postsContent.POSTS_JEMOK;\r\n        let postsNaeyong = postsContent.POSTS_NAEYONG;\r\n        let postsPrimeYN = postsContent.PRIME_YN;\r\n        let noticeStart = postsContent.NOTICE_START;\r\n        let noticeEnd = postsContent.NOTICE_END;\r\n        console.log('noticeStart ', moment(noticeStart)._d)\r\n        console.log('noticeEnd ', noticeEnd)\r\n        this.setState({\r\n            boardNum : boardNum,\r\n            postsJemok : postsJemok,\r\n            postsNaeyong : postsNaeyong,\r\n            editNumber : match.params.editNumber,\r\n            checked : postsPrimeYN === 'Y' ? true : false,\r\n            from : moment(noticeStart)._d,\r\n            to :moment(noticeEnd)._d\r\n        },() => this.makeSelectOption())\r\n      }\r\n\r\n      editPosts = async() => {\r\n\r\n          const { editNumber,\r\n                  postsJemok, \r\n                  postsNaeyong,\r\n                  checked,\r\n                   from,\r\n                   to }=this.state;\r\n         const { match } = this.props;\r\n        try {\r\n            const response = await boardApi.editPosts(1, \r\n                parseInt(editNumber) , \r\n                postsJemok, \r\n                postsNaeyong, \r\n                checked ? 'Y' : 'N',\r\n                moment(from).format('YYYY/MM/DD 00:00:00'),\r\n                moment(to).format('YYYY/MM/DD 00:00:00'),\r\n                );\r\n            //console.log(response)\r\n            if (response.statusText === \"OK\") { //포스트 작성 성공 \r\n                history.push(\"/board/notice/\" +`${editNumber}`);\r\n            }\r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n\r\n      }\r\n\r\n\r\n    /* daypicker 함수  */\r\n    pickUpFromTo = (thisTime) =>{\r\n        this.setState({\r\n            from : moment(thisTime)._d, \r\n            to :  moment(thisTime).add(7 ,'day')._d,\r\n            defalut_from :  moment(thisTime)._d, \r\n            defalut_to : moment(thisTime).add(7, 'day')._d,\r\n        })\r\n    }\r\n\r\n    buttonClickDay = (beforeDate, afterDate) =>{\r\n        console.log(beforeDate , afterDate)\r\n        this.setState({\r\n            from :  moment(beforeDate)._d,\r\n            to : moment(afterDate)._d,\r\n        })\r\n    }\r\n    handleFromChange = (from) => {\r\n        this.setState({ \r\n            from,\r\n        });\r\n    }\r\n    handleToChange = (to) => {\r\n       this.setState({\r\n        //from : moment(to).subtract('days', 1)._d,\r\n        to , \r\n        });\r\n    }\r\n    \r\n \r\n      render() {\r\n        let { editNumber,\r\n            postsJemok, \r\n            postsNaeyong,\r\n            from,\r\n            to,\r\n            selectedOption,\r\n            options } = this.state;\r\n\r\n      \r\n        return (\r\n            <div className = {style.container}>\r\n                <div>\r\n                    <DateTimePicker pickUpFromTo = {this.pickUpFromTo}\r\n                                    handleFromChange = {this.handleFromChange}\r\n                                    handleToChange = {this.handleToChange}\r\n                                    buttonClickDay = {this.buttonClickDay}\r\n                                    from = {from}\r\n                                    to = {to}\r\n                                    edit = {true}\r\n                                    />\r\n                    <hr/>\r\n                    <Select\r\n                        className = {style.boardSelect}\r\n                        value={selectedOption}\r\n                        isSearchable ={this.state.isSearchable}\r\n                        isClearable  = {this.state.isClearable}\r\n                        onChange={this.selectHandleChange}\r\n                        options={options}\r\n                        placeholder ={'게시판을 선택해주세요'}\r\n                    />\r\n\r\n                    <hr/>\r\n                    <Form className ={style.jemokContainer}>\r\n                        <Input className = {style.jemokItem}\r\n                                onChange = {this.handlePostsJemokChange}\r\n                                value = {postsJemok}\r\n                                placeholder = '제목을 입력해주세요.' />\r\n                    </Form>\r\n                </div>\r\n                <hr/>\r\n                <div className = {style.editerContainer}>\r\n                    <ReactQuill value={postsNaeyong}\r\n                                onChange={this.handleChange} />\r\n                </div>\r\n                <div>\r\n                <Checkbox checked={this.state.checked} \r\n                onChange={ () =>{\r\n                                  this.setState({\r\n                                      checked: !this.state.checked\r\n                                  })  \r\n                  }} \r\n                  value=\"checked\" />\r\n                    공지로 등록하기\r\n                </div>\r\n                <div >\r\n                    <Button color=\"primary\"  onClick = {this.editPosts}> 수정</Button>{' '}\r\n                    <Link to={\"/board/notice/\" +`${editNumber}`}>\r\n                        <Button color=\"secondary\">취소</Button>{' '}\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n      }\r\n    \r\n}\r\nexport default WithAuth(EditBoard)\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport ReactQuill, { Quill } from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"./styles.css\";\r\nimport  * as boardApi from '../../lib/api/boardApi'\r\nimport axios from 'axios'\r\nimport { observer, inject, } from 'mobx-react'\r\nimport hljs from 'highlight.js'\r\nimport 'highlight.js/styles/monokai-sublime.css'\r\nhljs.configure({\r\n  languages: ['javascript', 'ruby', 'python', 'rust'],\r\n})\r\n\r\n\r\nconst CustomHeart = () => <span>♥</span>;\r\n\r\nfunction insertHeart() {\r\n  const cursorPosition = this.quill.getSelection().index;\r\n  this.quill.insertText(cursorPosition, \"♥\");\r\n  this.quill.setSelection(cursorPosition + 1);\r\n}\r\n\r\n/*\r\n * Custom toolbar component including the custom heart button and dropdowns\r\n */\r\n\r\n \r\nconst CustomToolbar = ({onClickRaw}) => (\r\n  <div id=\"toolbar\">\r\n    <select className=\"ql-header\" defaultValue={\"\"} onChange={e => e.persist()}>\r\n      <option value=\"1\" />\r\n      <option value=\"2\" />\r\n      <option selected />\r\n    </select>\r\n    <select className=\"ql-font\">\r\n      <option value=\"arial\" selected>\r\n        Arial\r\n      </option>\r\n      <option value=\"comic-sans\">Comic Sans</option>\r\n      <option value=\"courier-new\">Courier New</option>\r\n      <option value=\"georgia\">Georgia</option>\r\n      <option value=\"helvetica\">Helvetica</option>\r\n      <option value=\"BlackHanSans\">BlackHanSans</option>\r\n      <option value=\"JejuHallasan\">JejuHallasan</option>\r\n      <option value=\"JejuMyeongjo\">JejuMyeongjo</option>\r\n      <option value=\"NotoSansKR\">NotoSansKR</option>\r\n      <option value=\"EastSeaDokdo\">EastSeaDokdo</option>\r\n    </select>\r\n    <select className=\"ql-size\">\r\n      <option value=\"extra-small\">Size 1</option>\r\n      <option value=\"small\">Size 2</option>dasdas\r\n      <option value=\"medium\" selected>\r\n        Size 3\r\n      </option>\r\n      <option value=\"large\">Size 4</option>\r\n      <option value=\"huge\">Size 5</option>\r\n  \r\n    </select>\r\n    <select className=\"ql-align\" />\r\n    <select className=\"ql-color\" />\r\n    <select className=\"ql-background\"/>\r\n    <button className=\"ql-clean\" />\r\n    <button className=\"ql-insertHeart\">\r\n      <CustomHeart />\r\n    </button>\r\n    <button className=\"ql-code-block\" />\r\n    <button className=\"ql-image\" />\r\n    <button onClick={ onClickRaw }>Raw</button>\r\n  </div>\r\n);\r\n\r\n// Add sizes to whitelist and register them\r\nconst Size = Quill.import(\"formats/size\");\r\nSize.whitelist = [\"extra-small\", \"small\", \"medium\", \"large\",\"huge\"];\r\nQuill.register(Size, true);\r\n\r\n\r\n// const Header = Quill.improt(\"formats/header\")\r\n// Header.whitelist= [ 1, 2, 3, 4, 5, 6, false ];\r\n// Quill.register(Header, true);\r\n// Add fonts to whitelist and register them\r\nconst Font = Quill.import(\"formats/font\");\r\nFont.whitelist = [\r\n  \"arial\",\r\n  \"comic-sans\",\r\n  \"courier-new\",\r\n  \"georgia\",\r\n  \"helvetica\",\r\n  \"lucida\",\r\n  'BlackHanSans', \r\n  'NotoSansKR', \r\n  'JejuHallasan',\r\n  'JejuMyeongjo',\r\n  'EastSeaDokdo'\r\n];\r\nQuill.register(Font, true);\r\n\r\nlet UPLOAD_IMAGE_URI = 'http://localhost:3031/api/file/upload';\r\n//var IMGUR_API_URL = 'https://api.imgur.com/3/image';\r\n\r\n\r\n  /**\r\n     * Step3. insert image url to rich editor.\r\n     *\r\n     * @param {string} url\r\n  */\r\n const imageHandler = (image, callback) => {\r\n  //rQuill.getEditor()\r\n  // var range = this.quillRef.getEditor().getSelection();\r\n  // var value = prompt('What is the image URL');\r\n  // if(value) {\r\n  //     this.quillRef.getEditor().insertEmbed(range.index, 'image', value, \"user\");\r\n  // }\r\n}\r\n// function imageHandler(image, callback) {\r\n//   var formData = new FormData();\r\n//   formData.append(\"image\", fileInput.files[0]);\r\n//   axios.post(UPLOAD_IMAGE_URI, formData, {\r\n//       headers: {\r\n//         'Content-Type': 'multipart/form-data'\r\n//       },\r\n//       responseType:'json'\r\n//   })\r\n//   .then(res => {\r\n//     if(res.data.error == 0){\r\n//       let range = quill.getSelection(true);\r\n//       this.quill.updateContents(new Delta()\r\n//         .retain(range.index)\r\n//         .delete(range.length)\r\n//         .insert({ image: res.data.url })\r\n//       , Quill.sources.USER);\r\n//     }else{\r\n//       console.error(res.data);\r\n//     }\r\n//   })\r\n//   .catch(e => {\r\n//     console.error(e);\r\n//   });\r\n// }\r\n/*\r\n * Editor component with custom toolbar and content containers\r\n */\r\nclass Editor extends React.Component {\r\n  state = { \r\n    editorHtml: [], \r\n    rawHtml: '',\r\n    showRaw: false,\r\n    lineHeight : 12,\r\n    range : ''\r\n};\r\n\r\n  // handleChange = (html) => {\r\n  //   let range = this.quillRef.getEditor().getSelection();\r\n  //   console.log(\"handleChange\")\r\n  //   console.log(range)\r\n  //   //this.quillRef.blur();\r\n  //   //this.quillRef.focus();\r\n  //   //const cleanedValue = html.replace(/<p><br><\\/p>/g, '');\r\n  //   this.setState({ \r\n  //     editorHtml: html,\r\n  //     range : this.quillRef.getEditor().setSelection(range.index + 1)\r\n  //     //rawHtml : html\r\n  //   },() => this.getFocus());\r\n  // };\r\n  \r\n  // handleChangeRaw = (html) => {\r\n  //  console.log('handleChangeRaw')\r\n  // \tthis.setState({ \r\n  //     rawHtml: html,\r\n  //     lineHeight: 0 //초기화\r\n  //   },() =>{\r\n  //     this.setState({\r\n  //       lineHeight: this.rawQuillRef.scrollHeight //html 코드뷰 크기 리사이\r\n  //     })\r\n  //   })\r\n  // }\r\n\r\n  // handleClickShowRaw = () =>{\r\n  //   console.log('click raw')\r\n  //   const isEditingRaw = this.state.showRaw;\r\n  //   this.setState({ \r\n  //     showRaw: !isEditingRaw \r\n  //   })\r\n  //   this.syncViews(isEditingRaw)\r\n  // }\r\n  \r\n  // syncViews = (fromRaw) => {\r\n  //   if (fromRaw) {\r\n  //     this.setState({\r\n  //       editorHtml: this.state.rawHtml\r\n  //     })\r\n  //   }\r\n  //   else{\r\n  //     this.handleChangeRaw();\r\n    \r\n  //     this.setState({\r\n  //       rawHtml: this.state.editorHtml,\r\n  //     })\r\n  //   }\r\n  // }\r\n  // //text Area 자동 조절 \r\n  //  resize = (e) => {\r\n  //    console.log(e)\r\n  //     const oldRows = e.target.rows;\r\n  //     console.log(\"this.rawQuillRef.scrollHeight\",this.rawQuillRef.scrollHeight)\r\n      \r\n  //     // e.target.rows = 1;\r\n  //     // const newRows = ( e.target.scrollHeight / this.state.lineHeight);\r\n  //     // if (newRows === oldRows) {\r\n  //     //   e.target.rows = newRows;\r\n  //     // }\r\n  //     this.rawQuillRef.style.height = \"auto\"\r\n  //     this.setState({\r\n  //       lineHeight: this.rawQuillRef.scrollHeight\r\n  //     });\r\n  // }\r\n  \r\n\r\n // 1. image 선택 \r\n // 2. image 저장 \r\nselectLocalImage =  ()  =>{\r\n  const { confirm } = this.props;\r\n\r\n  const input = document.createElement('input');\r\n  input.setAttribute('type', 'file');\r\n  //input.setAttribute('c', 'upload');\r\n  input.click();\r\n  // // Listen upload local image and save to server\r\n    //05-06 \r\n  //현재 이름 부분 중복을 어떻게 할지를 못정하겠음 일단 대기\r\n  input.onchange = async() => {\r\n    console.log(\"heelo !!\" ,input.files)\r\n    //input.files[0].author = confirm.mem_email\r\n    //input.files({author: confirm.mem_email})\r\n    var formData = new FormData();\r\n    formData.append(\"upload\", input.files[0]);\r\n    //formData.append(\"author\", confirm.mem_email);\r\n    console.log('formData ', formData)\r\n    console.log(' input.files[0] ',  input.files[0])\r\n    //데이터 전송 및 서버에 저장 \r\n    try{\r\n      const response = await boardApi.imageUpload(formData);\r\n      console.log('res', response)\r\n      this.imageHandler(input.files[0]);\r\n      // axios.post(UPLOAD_IMAGE_URI, formData).then(res =>{\r\n      //   console.log(res)\r\n      //   this.imageHandler();\r\n      // })\r\n  \r\n    }catch(e){\r\n      console.log(\"error \",e)\r\n    }\r\n    \r\n\r\n\r\n    //saveToServer(input.files[0])\r\n    // if (/^image\\//.test(file.type)) {\r\n    //   saveToServer(file);\r\n    // } else {\r\n    //   console.warn('You could only upload images.');\r\n    // }\r\n  };\r\n}\r\n\r\nimageHandler = (image, formData, callback) => {\r\n  let name = image.name.split('.')[0]\r\n  let ext = image.type.split('/')[1]\r\n\r\n  const range =this.quillRef.getEditor().getSelection()\r\n  //ex http://i.imgur.com/jUwZDLR.jpg \r\n  const GET_IMAGE_URI = \"http://localhost:3031/api/file/image/\"\r\n  let value = GET_IMAGE_URI + name +\".\"+ext\r\n  console.log(\"value\", value)\r\n  if(value) {\r\n     this.quillRef.getEditor().insertEmbed(range.index, 'image', value, \"user\");\r\n }\r\n}\r\n  \r\n\r\n\r\n\r\n  modules =  {\r\n    syntax: {highlight: text => hljs.highlightAuto(text).value },\r\n    toolbar: {\r\n      container: \"#toolbar\",\r\n      handlers: {\r\n        //insertHeart: this.imageHandler,\r\n        'image': this.selectLocalImage\r\n      }\r\n    },\r\n  }\r\n\r\n\r\n  formats = [\r\n    \"header\",\r\n    \"font\",\r\n    \"size\",\r\n    \"bold\",\r\n    \"italic\",\r\n    \"underline\",\r\n    \"strike\",\r\n    \"blockquote\",\r\n    \"list\",\r\n    \"bullet\",\r\n    \"indent\",\r\n    \"link\",\r\n    \"image\",\r\n    \"color\",\r\n    \"align\",\r\n    \"background\",\r\n    \"code-block\",\r\n    \"showhtml\"\r\n  ];\r\n  componentDidMount(){\r\n    let {testref} = this.props;\r\n    testref = this.rawQuillRef;\r\n  }\r\n  //최적화 필요\r\n  componentDidUpdate(){\r\n    this.props.change(this.rawQuillRef);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    console.log(\"componentWillUnmount\")\r\n  }\r\n\r\n  render() {\r\n    const { handleChange,\r\n            handleChangeRaw,\r\n            handleClickShowRaw,\r\n            editorHtml,\r\n            rawHtml,\r\n            lineHeight,\r\n            showRaw } = this.props;\r\n            console.log('editorHtml!!,', editorHtml )\r\n          console.log('showRaw!!,', showRaw )\r\n          console.log('lineHeight ', lineHeight)\r\n    return (\r\n      <div className={ showRaw ? \"showRaw\" : \"\"}>\r\n        <div className=\"text-editor\">\r\n          <CustomToolbar onClickRaw = {() => handleClickShowRaw(this.rawQuillRef)} />\r\n          <ReactQuill\r\n            ref = {ref => { this.quillRef = ref } }\r\n            value={ editorHtml ? editorHtml : '' }\r\n            onChange={(e) => handleChange(e, lineHeight) }\r\n            placeholder={\"여기에 작성해주세요\"}\r\n            modules={this.modules}\r\n            formats={this.formats}\r\n            \r\n          />\r\n          <textarea\r\n            className={\"raw-editor\"}\r\n            ref = {ref => { this.rawQuillRef = ref } }\r\n            style={{height: `${lineHeight}px`}}\r\n            onChange={(e) => handleChangeRaw(e.target.value, this.rawQuillRef.scrollHeight)}\r\n            aria-hidden=\"true\"\r\n            value={rawHtml}\r\n          />\r\n       </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject(({ board }) => ({\r\n  handleChange : board.handleChange,\r\n  handleChangeRaw : board.handleChangeRaw,\r\n  handleClickShowRaw : board.handleClickShowRaw,\r\n  change : board.change,\r\n  lineHeight : board.lineHeight,\r\n  editorHtml : board.editorHtml,\r\n  showRaw :board.showRaw,\r\n  rawHtml : board.rawHtml,\r\n  testref : board.testref,\r\n\r\n}))(observer(Editor));\r\n","import React, { Component } from 'react'\r\nimport style from './WriteBoard.module.css'\r\nimport ReactQuill, { Quill, Mixin, Toolbar } from 'react-quill'; // ES6\r\n\r\nimport { Form, Input, Button } from 'reactstrap';\r\nimport history from '../../../history'\r\nimport 'react-quill/dist/quill.snow.css'; // ES6\r\nimport * as boardApi from '../../../lib/api/boardApi'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport WithAuth from '../../WithAuth';\r\nimport { Link } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport DateTimePicker from '../DateTimePicker'\r\nimport moment from 'moment'\r\nimport _ from 'lodash'\r\nimport Editer from '../../Editer'\r\n\r\nimport './QuillModule.css'\r\n\r\n\r\n\r\n/*글 작성 , 글 수정 컴포넌트 */\r\nclass WriteBoard extends Component { \r\n\r\n\r\n       state = { \r\n            naeyong: '', // You can also pass a Quill Delta here\r\n            jemok : '',\r\n            checked: false,\r\n            boardSelect : [],\r\n            options : [],\r\n\r\n            selectedOption : null,\r\n            isSearchable : true,\r\n            isClearable : true,\r\n\r\n\r\n            to : '',\r\n            from : ''\r\n        } \r\n      \r\n\r\n    //   static modules = {\r\n\r\n    //     syntax: {\r\n    //       highlight: text => hljs.highlightAuto(text).value,\r\n    //     },\r\n    //     toolbar: [\r\n    //       [{container: \"#toolbar\"}],\r\n    //       [{ 'font': Font.whitelist }],\r\n    //       [{ size: [ 'small', false, 'large', 'huge' ]}],\r\n    //       ['bold', 'italic', 'underline', 'blockquote'],\r\n    //       [{ list: 'ordered' }, { list: 'bullet' }],\r\n    //       ['link', 'image', 'video'],\r\n    //       ['clean'],\r\n    //       ['code-block'],\r\n    //     ],\r\n    //     clipboard: {\r\n    //       matchVisual: false,\r\n    //     },\r\n    //   }\r\n      \r\n    //   static formats = [\r\n    //     'header',\r\n    //     'font',\r\n    //     'size',\r\n    //     'bold',\r\n    //     'italic',\r\n    //     'underline',\r\n    //     'strike',\r\n    //     'blockquote',\r\n    //     'list',\r\n    //     'bullet',\r\n    //     'indent',\r\n    //     'link',\r\n    //     'image',\r\n    //     'video',\r\n    //     'code-block',\r\n    //   ]\r\n\r\n\r\n\r\n    \r\n      handlePostsNameChange = (e) => {\r\n        this.setState({\r\n            jemok : e.target.value\r\n        })\r\n      }\r\n\r\n      handleChange = (value) => {\r\n        this.setState({ naeyong: value }, console.log('naeyong ', this.state.naeyong))\r\n      }\r\n\r\n\r\n    /* 셀렉트 옵션  */\r\n     selectHandleChange = (selectedOption) => {\r\n        this.setState({ selectedOption });\r\n        console.log(`Option selected:`, selectedOption);\r\n     }\r\n\r\n     makeSelectOption = async() => {\r\n        try{\r\n            const getBoardList = await boardApi.getBoardList();\r\n            let boardList = getBoardList.data;\r\n            console.log(boardList)\r\n            boardList = boardList.map((item) => {\r\n                return {\r\n                    value : item.BOARD_NUM,\r\n                    label : item.BOARD_NAME\r\n                }\r\n            });\r\n            boardList.unshift(\r\n                {\r\n                    value : 0,\r\n                    label : '게시판을 선택해주세요'\r\n                }\r\n            )\r\n            this.setState({\r\n                options : boardList\r\n            })\r\n         }catch(e){\r\n            console.log('error' , e )\r\n         }\r\n\r\n     }\r\n\r\n     componentDidMount(){\r\n       this.makeSelectOption();\r\n     }\r\n     \r\n\r\n\r\n    /* daypicker 함수  */\r\n    pickUpFromTo = (thisTime) =>{\r\n        this.setState({\r\n            from : moment(thisTime)._d, \r\n            to :  moment(thisTime).add(7 ,'day')._d,\r\n            defalut_from :  moment(thisTime)._d, \r\n            defalut_to : moment(thisTime).add(7, 'day')._d,\r\n        })\r\n    }\r\n    handleFromChange = (from) => {\r\n        this.setState({ \r\n            from,\r\n        });\r\n    }\r\n    handleToChange = (to) => {\r\n       this.setState({\r\n        //from : moment(to).subtract('days', 1)._d,\r\n        to , \r\n        });\r\n    }\r\n      /* BOARD_NUM, POSTS_NUM, MEM_IDX, POSTS_JEMOK, POSTS_NAEYONG */\r\n      writePosts = async() => {\r\n          const { jemok, \r\n                  naeyong,\r\n                  checked,\r\n                  from,\r\n                  to,\r\n                  selectedOption } = this.state;\r\n         const { confirm } =this.props;\r\n\r\n         console.log(selectedOption)\r\n         if( _.isNull(selectedOption)){\r\n            alert('게시판을 선택해주세요!')\r\n            return;\r\n         }\r\n        if(selectedOption.BOARD_NUM === 0 ||\r\n            _.isEmpty(selectedOption) ) {\r\n             alert('게시판을 선택해주세요!')\r\n             return;\r\n        }\r\n       moment(from).format('YYYY/MM/DD HH:mm:ss');\r\n\r\n        try {\r\n        \r\n            const getPostsSequence = await boardApi.getPostsSequence();\r\n            let sequence = getPostsSequence.data[0].SEQUENCE\r\n            console.log(sequence)\r\n            console.log('selectedOption.BOARD_NUM ', selectedOption.value)\r\n            const response = await boardApi.writePosts(  selectedOption.value, \r\n                                                    parseInt(sequence), \r\n                                                    confirm.mem_idx, \r\n                                                    jemok,\r\n                                                    naeyong, \r\n                                                    moment(from).format('YYYY/MM/DD 00:00:00'),\r\n                                                    moment(to).format('YYYY/MM/DD 00:00:00'),\r\n                                                    checked ? 'Y' : 'N');\r\n            if (response.statusText === \"OK\") { //포스트 작성 성공 \r\n                history.push(\"/board/notice/\" +`${sequence}`);\r\n            }else{\r\n                alert('실패')\r\n            }\r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n      }\r\n    \r\n      \r\n\r\n      render() {\r\n        let { confirm } = this.props\r\n        let { options, selectedOption, to , from}  = this.state; \r\n        return (\r\n            <div className = {style.container}>\r\n            \r\n                <div>\r\n                    <DateTimePicker pickUpFromTo = {this.pickUpFromTo}\r\n                                    handleFromChange = {this.handleFromChange}\r\n                                    handleToChange = {this.handleToChange}/>\r\n                    <hr/>\r\n                    <Select\r\n                        className = {style.boardSelect}\r\n                        value={selectedOption}\r\n                        isSearchable ={this.state.isSearchable}\r\n                        isClearable  = {this.state.isClearable}\r\n                        onChange={this.selectHandleChange}\r\n                        options={options}\r\n                        placeholder ={'게시판을 선택해주세요'}\r\n                    />\r\n       \r\n                    <hr/>\r\n                    <Form className ={style.jemokContainer}>\r\n                        <Input className = {style.jemokItem}\r\n                                onChange = {this.handlePostsNameChange} \r\n                                placeholder = '제목을 입력해주세요.'/>\r\n                    </Form>\r\n                </div>\r\n                <hr/>\r\n                <div className = {style.editerContainer}>\r\n                    <div className=\"text-editor\">\r\n                    {/*\r\n                        <CustomToolbar/>\r\n                        <ReactQuill value={this.state.naeyong}\r\n                                    onChange={this.handleChange}\r\n                                    modules={WriteBoard.modules}\r\n                                    formats={WriteBoard.formats}\r\n                                    />     */}\r\n                        </div>\r\n                        \r\n                    <Editer confirm = {confirm} />\r\n\r\n                                \r\n                </div>\r\n                <div>\r\n                <Checkbox checked={this.state.checked} \r\n                onChange={ () =>{\r\n                                  this.setState({\r\n                                      checked: !this.state.checked\r\n                                  })  \r\n                  }} \r\n                  value=\"checked\" />\r\n                    공지로 등록하기\r\n                </div>\r\n        \r\n                <div className ={style.buttonContainer}>\r\n                    <Button color=\"primary\"  onClick = {this.writePosts}> 작성</Button>{' '}\r\n                    <Link to={'/board/notice'}>\r\n                        <Button color=\"secondary\">취소</Button>{' '}\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n      }\r\n    \r\n}\r\nexport default WithAuth(WriteBoard)\r\n","import React, { Component } from 'react'\r\nimport style from './Prompt.module.css'\r\nimport Popup from \"reactjs-popup\";\r\nimport { styled } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst MyButton = styled(Button)({\r\n  //background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n  background: 'linear-gradient(45deg, #fab005 30%, #f59f00 90%)',\r\n  border: 0,\r\n  borderRadius: 3,\r\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  //boxShadow: '0 3px 5px 2px #ff',\r\n  color: 'white',\r\n  height: 33,\r\n  padding: '0 30px',\r\n});\r\n\r\nconst MyButton2 = styled(Button)({\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    border: 0,\r\n    borderRadius: 3,\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    color: 'white',\r\n    height: 33,\r\n    padding: '0 30px',\r\n  });\r\n  \r\n  \r\n\r\nexport default class Prompt extends Component { \r\n    state = {\r\n        open: false ,\r\n        checked :false\r\n    }\r\n    componentDidMount(){\r\n    \r\n    }\r\n\r\n    openModal = () =>{\r\n        this.setState({ \r\n            open: true \r\n        })\r\n    }\r\n    closeModal = () =>{\r\n        const { checked } = this.state;\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ \r\n            checked: !e.target.value\r\n        });\r\n    };\r\n\r\n    \r\n    \r\n\r\n    render() {\r\n        const  { open, confirmDelete, closeModal } = this.props;\r\n    return (\r\n      <div>\r\n        <Popup\r\n            open={open}\r\n            onClose = {closeModal}\r\n        >\r\n        {close =>  (\r\n          <div className={style.modal}>\r\n            <a className={style.close} onClick={close}>\r\n              &times;\r\n            </a>\r\n    \r\n            <div className= {style.header}> \r\n                경고 \r\n            </div>\r\n\r\n            <div className= {style.content}>\r\n                <p>정말로 삭제 하시곘습니까?</p>\r\n                <p>삭제하시려면 삭제를 클릭해주세요</p>\r\n            </div>\r\n        \r\n            <div className={style.actions}>\r\n                {/*\r\n              <Popup\r\n                trigger={\r\n                    <input type=\"checkbox\" name=\"close\" value=\"OK\" onclick={() =>{\r\n                        this.setState({\r\n                            checked: !this.state.checked\r\n                        })  \r\n                    }}/>            \r\n                }\r\n                position=\"top center\"\r\n                closeOnDocumentClick>\r\n                <span>\r\n                  Lorem ipsum dolor sit amet, consectetur adipisicing elit. Beatae\r\n                  magni omnis delectus nemo, maxime molestiae dolorem numquam\r\n                  mollitia, voluptate ea, accusamus excepturi deleniti ratione\r\n                  sapiente! Laudantium, aperiam doloribus. Odit, aut.\r\n                </span>\r\n              </Popup>\r\n\r\n              */}\r\n        \r\n            <div className = {style.buttonFooter} >\r\n                <div className = {style.checkBox} >\r\n                    <MyButton2\r\n                    onClick = {confirmDelete}\r\n            \r\n                    >삭제</MyButton2>\r\n                </div>\r\n           \r\n                <div className = {style.closeBox}>\r\n                    <MyButton\r\n                        onClick={() => {\r\n                            this.closeModal();\r\n                            closeModal()\r\n                            console.log('modal closed ')\r\n                            close()\r\n                        }}>닫기\r\n                    </MyButton>\r\n                </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        )}\r\n      </Popup>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst StyledLink = styled(Link)`\r\n    color : black;\r\n    text-decoration: none;\r\n    &:focus, &:hover, &:visited, &:link, &:active {\r\n        text-decoration: none;\r\n    }\r\n`;\r\n\r\nexport default (props) => <StyledLink {...props} />;","import React, { Component } from 'react'\r\nimport style from './BoardView.module.css'\r\nimport { Route,withRouter } from 'react-router-dom';\r\nimport history from '../../../history'\r\nimport * as boardApi from '../../../lib/api/boardApi'\r\nimport Popup from \"reactjs-popup\";\r\nimport Prompt from '../Prompt'\r\nimport { withCookies, Cookies } from 'react-cookie';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport WithAuth from '../../WithAuth';\r\nimport StyledLink from '../../StyleComponent/StyledLink/'\r\nimport { Button, Badge } from 'reactstrap';\r\nimport moment from 'moment'\r\n\r\n\r\n\r\nimport fontawesome from '@fortawesome/fontawesome'\r\nimport { FontAwesomeIcon  } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faPencilAlt, faCalendarAlt} from '@fortawesome/fontawesome-free-solid'\r\n\r\nfontawesome.library.add(faEye, faPencilAlt, faCalendarAlt);\r\n\r\nclass BoardView extends Component {\r\n \r\n    state ={\r\n        postsJemok : '',\r\n        postsNaeYong : '',\r\n        primeYN : '',\r\n        regDate : '',\r\n        views : '',\r\n        noticeStart : '',\r\n        noticeEnd : '',\r\n        postsNumber : this.props.match.params.postsNumber,\r\n        open : false\r\n    }\r\n\r\n    openModal = () =>{\r\n        this.setState({ \r\n            open: true\r\n        })\r\n    }\r\n    //open 복귀 \r\n    closeModal = () => {\r\n        this.setState({\r\n            open: false\r\n        })\r\n    }\r\n\r\n\r\n    handleDeleteBoard = async() =>{\r\n        this.openModal();\r\n    }\r\n    confirmDelete = async() => {\r\n        console.log('confirm')\r\n        const { postsNumber } =this.state;\r\n        try{\r\n            const response = await boardApi.deletePosts(1, postsNumber);\r\n            history.push(\"/board/notice\");\r\n\r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleEditBoard = () => {\r\n        const {match} = this.props;\r\n        console.log()\r\n        /* 관리자 검사  */\r\n        \r\n        window.history.push(\"/board/notice/editPosts/\" +`${match.params.postsNumber}`);\r\n    }\r\n\r\n\r\n\r\n    componentDidMount(){\r\n        console.log('parseInt(this.props.match.params.postsNumber)', this.props.match)\r\n        this.getPosts();\r\n        \r\n        //this.handleNameChange('cookieSet')\r\n    }\r\n\r\n    getPosts = async() => {\r\n        const { match } = this.props;\r\n        let num = match.params.postsNumber;\r\n        console.log(match.url)\r\n        try{\r\n            boardApi.setViewsUp(num); // 조회수 업뎃 \r\n            const response = await boardApi.getPosts(num);\r\n            let postContent = response.data[0];\r\n            let MEM_USERNAME = postContent.MEM_USERNAME;\r\n            let POSTS_JEMOK = postContent.POSTS_JEMOK;\r\n            let POSTS_NAEYONG = postContent.POSTS_NAEYONG;\r\n            let PRIME_YN = postContent.PRIME_YN;\r\n            let REG_DATE = postContent.REG_DATE;\r\n            let VIEWS = postContent.VIEWS + 1;\r\n            let NOTICE_START = postContent.NOTICE_START;\r\n            let NOTICE_END = postContent.NOTICE_END;\r\n            console.log(POSTS_JEMOK)\r\n            this.setState({\r\n                memUsername : MEM_USERNAME,\r\n                postsJemok : POSTS_JEMOK,\r\n                postsNaeYong : POSTS_NAEYONG,\r\n                primeYN : PRIME_YN,\r\n                regDate : REG_DATE,\r\n                views : VIEWS,\r\n                noticeStart : NOTICE_START,\r\n                noticeEnd : NOTICE_END,\r\n            })\r\n\r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\nrender() {    \r\n    const {\r\n        match,\r\n     } = this.props;\r\n     const { \r\n        postsJemok,\r\n        postsNaeYong,\r\n        memUsername,\r\n        primeYN,\r\n        regDate,\r\n        views,\r\n        noticeStart,\r\n        noticeEnd,\r\n        open\r\n     } = this.state;\r\n\r\n     \r\n    return (\r\n      <div className = {style.panel}>\r\n        <div className = {style.panelHeading}>\r\n            <div>\r\n                <h4>\r\n                    <Badge color=\"secondary\">  글 번호 :#{ match.params.postsNumber }</Badge>\r\n                    { primeYN === 'Y' ?  ( <Badge style ={{marginLeft :'3px'}} \r\n                                                color=\"success\"> 현재공지 </Badge> ) : ('') }\r\n                </h4> \r\n            </div>\r\n\r\n            <div>\r\n                <FontAwesomeIcon \r\n                icon=\"pencil-alt\" \r\n                size=\"1x\" \r\n                color=\"black\"\r\n                >\r\n                </FontAwesomeIcon>\r\n                <span style ={{fontSize:'20px'}}> {memUsername}</span>\r\n            </div>\r\n            <div>\r\n                <FontAwesomeIcon \r\n                    icon=\"eye\" \r\n                    size=\"1x\" \r\n                    color=\"black\"\r\n                >\r\n                </FontAwesomeIcon>\r\n                 <span style ={{fontSize:'15px'}}> {views} </span>\r\n            </div>\r\n            <div>\r\n                <FontAwesomeIcon \r\n                    icon=\"calendar-alt\" \r\n                    size=\"1x\" \r\n                    color=\"black\"\r\n                >\r\n                </FontAwesomeIcon>\r\n                {/* primeYN === 'Y' ?\r\n                <span style ={{fontSize:'15px'}}> {moment(noticeStart).format('YYYY-MM-DD')} - {moment(noticeEnd).format('YYYY-MM-DD')} </span>\r\n                :\r\n                <span style ={{fontSize:'15px'}}> {moment(noticeStart).format('YYYY-MM-DD')} - {moment(noticeEnd).format('YYYY-MM-DD')} </span>\r\n                */}\r\n                <span style ={{fontSize:'15px'}}> {moment(noticeStart).format('YYYY-MM-DD')} - {moment(noticeEnd).format('YYYY-MM-DD')} </span>\r\n            </div>\r\n        </div>\r\n        <div id = \"content-body\"  className = {style.panelBody}>\r\n            <div className = { style.headPostsName} >  \r\n                <h2 className = {style.title} > { postsJemok } </h2>\r\n                <hr></hr>\r\n            </div>\r\n            <div className = { style.contentText}> \r\n                { ReactHtmlParser(postsNaeYong) }\r\n            </div>\r\n\r\n            </div>\r\n        <div className = {style.boardButtonCompo}>\r\n            <StyledLink exact to ={\"/board/notice/editPosts/\" +`${match.params.postsNumber}`}>\r\n                <Button outline color=\"primary\">\r\n                    수정 \r\n                </Button>{' '}\r\n            </StyledLink>\r\n            <Button outline color=\"danger\" onClick = {this.handleDeleteBoard}>\r\n                삭제\r\n            </Button>{' '}\r\n            <StyledLink to={\"/board/notice\"}>\r\n                <Button outline color=\"info\">\r\n                게시판으로\r\n                </Button>{' '}\r\n            </StyledLink>\r\n        </div>\r\n        <Prompt open = { open }\r\n                closeModal = {this.closeModal}\r\n                confirmDelete = {this.confirmDelete}/>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default WithAuth(BoardView);","import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport StyledLink from '../../StyleComponent/StyledLink/'\r\nimport fontawesome from '@fortawesome/fontawesome'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckCircle, faCheck } from '@fortawesome/fontawesome-free-solid'\r\nimport { Badge } from 'reactstrap';\r\nimport style from './Board.module.css'\r\nfontawesome.library.add(faCheckCircle, faCheck);\r\nexport default class BoardItem extends Component {\r\n  render() {\r\n\r\n   const {  postsNum,\r\n            postsJemok, \r\n            memUsername,\r\n            regDate,\r\n            primeYn,\r\n            views,\r\n            index,\r\n              } = this.props;\r\n    \r\n     return (\r\n          <tr className = {index === 0 && primeYn === 'Y' ? style.NoticePosts : ''}>\r\n            <th scope=\"row\" key= {postsNum}>{postsNum}</th>\r\n            <td> \r\n              {index === 0  && primeYn === 'Y' ? \r\n              ( <Badge color=\"success\">공지</Badge> ) :\r\n              ('')\r\n              }\r\n              <StyledLink to ={\"/board/notice/\" + `${postsNum}`}> \r\n                {postsJemok} \r\n              </StyledLink> \r\n            </td>\r\n            <td>{memUsername}</td>\r\n            <td>{views}</td>\r\n            <td>{regDate}</td>\r\n            <td className = {style.tableItem}>\r\n            {     \r\n              primeYn === 'Y' ?  (\r\n              <FontAwesomeIcon \r\n                icon=\"check\" \r\n                size=\"1x\" \r\n                color=\"green\"\r\n              >\r\n              </FontAwesomeIcon>\r\n            ) : ('')\r\n            }\r\n          </td>\r\n          </tr>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Table } from 'reactstrap';\r\nimport BoardItem from '../BoardItem';\r\nimport * as boardApi from '../../../lib/api/boardApi'\r\nimport history from '../../../history'\r\nimport fontawesome from '@fortawesome/fontawesome'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit } from '@fortawesome/fontawesome-free-solid'\r\nimport moment from 'moment'\r\nimport style from './Board.module.css'\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nimport Notice from '../../Notice'\r\n\r\n\r\nimport WithAuth from '../../WithAuth';\r\nimport StyledLink from '../../StyleComponent/StyledLink'\r\nfontawesome.library.add(faEdit);\r\nconst PERPAGE =10;\r\nclass Board extends Component {\r\n    state = {\r\n        boardList : [],\r\n        pageCount : 0,\r\n        offset : 0,\r\n        viewing : false,\r\n\r\n    }\r\n    componentDidMount(){\r\n        this.getPostsList();\r\n        this.getNoticeViewing();\r\n    }\r\n\r\n    getNoticeViewing = async() => {\r\n        try{\r\n            const response = await boardApi.getNoticeViewing();\r\n            console.log(response)\r\n            let resData = response.data;\r\n            if(resData.code === 200){\r\n                this.setState({\r\n                    viewing : resData.result.viewing\r\n                })\r\n            }\r\n            \r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    getPostsList = async() => {\r\n        let { offset } = this.state;\r\n        console.log(\"offset \" , offset)\r\n        try{\r\n            const response =  await boardApi.getPostsList(offset);\r\n            let postContent = response.data.posts;\r\n            let meta = response.data.meta\r\n            console.log(response)\r\n            console.log(postContent)\r\n            \r\n            let boardList = postContent.map((item) =>{\r\n                        return ({\r\n                                postsNum : item.POSTS_NUM,\r\n                                memUsername : item.MEM_USERNAME,\r\n                                postsJemok : item.POSTS_JEMOK,\r\n                                regDate : moment(item.REG_DATE).format('YYYY.MM.DD HH:MM'),\r\n                                primeYn : item.PRIME_YN,\r\n                                views: item.VIEWS,\r\n                        })\r\n            })\r\n\r\n            //만약에 \r\n            if( boardList.length > 0 ){\r\n                if ( boardList[0].primeYn !== 'Y' ){\r\n                \r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                boardList : boardList,\r\n                pageCount: Math.ceil(meta.total_count / meta.limit),\r\n            })\r\n        \r\n\r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n    \r\n    handleWritePosts = () => {\r\n        history.push(\"/board/notice/writePosts\");\r\n    }\r\n\r\n    handlePageClick = data => {\r\n        let selected = data.selected;\r\n        let offset = Math.ceil(selected * PERPAGE);\r\n        console.log(offset);\r\n        this.setState({ offset: offset }, () => {\r\n            this.getPostsList();\r\n        });\r\n      };\r\n\r\n    scroll =() =>{\r\n        window.scrollTo(500, 1000);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        console.log('this.state.viewing ', this.state.viewing)\r\n        const { boardList, viewing } = this.state;\r\n\r\n        \r\n        const list = boardList.map((item, index) =>{\r\n            return (\r\n                    <BoardItem  key = {item.postsNum}\r\n                                index = {index}\r\n                                postsNum = {item.postsNum}\r\n                                postsJemok = {item.postsJemok}\r\n                                memUsername ={item.memUsername}\r\n                                views = {item.views}\r\n                                primeYn = {item.primeYn}\r\n                                regDate = {item.regDate}\r\n                                handleEditBoard = {this.handleEditBoard}\r\n                            />\r\n            \r\n                )\r\n            })\r\n\r\n        return (\r\n            <div>\r\n                <button onClick ={this.scroll}>이동 테스트 </button>\r\n                {viewing ? <Notice/> : '' }\r\n                <StyledLink exact to= {'/board/writePosts'}>\r\n                    <button className= {style.editButton}>\r\n                        \r\n                            <FontAwesomeIcon \r\n                                icon=\"edit\" \r\n                                size=\"1x\" \r\n                                color=\"white\"\r\n                            >\r\n                            </FontAwesomeIcon>\r\n                            글쓰기\r\n                    </button>\r\n                </StyledLink>\r\n                <Table responsive >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>글제목</th>\r\n                            <th>작성자</th>\r\n                            <th>조회수</th>\r\n                            <th>작성일</th>\r\n                            <th>공지여부</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {list}\r\n                    </tbody>\r\n                </Table>\r\n                \r\n                <div id = 'react-paginate'>\r\n                    <ReactPaginate\r\n                        previousLabel={'previous'}\r\n                        nextLabel={'next'}\r\n                        breakLabel={'...'}\r\n                        breakClassName={'break-me'}\r\n                        pageCount={this.state.pageCount}\r\n                        marginPagesDisplayed={2}\r\n                        pageRangeDisplayed={5}\r\n                        onPageChange={this.handlePageClick}\r\n                        containerClassName={'pagination'}\r\n                        subContainerClassName={'pages pagination'}\r\n                        activeClassName={'active'}\r\n                    />\r\n                </div>\r\n           \r\n            </div>\r\n     )\r\n  }\r\n}\r\nexport default WithAuth(Board)","import React, { Component } from 'react'\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport './BoardCardItem.scss'\r\nimport _ from 'lodash'\r\nimport StyledLink from '../../StyleComponent/StyledLink/'\r\nexport default class BoardCardItem extends Component {\r\n\r\n  gettext = () =>{\r\n    let viewText = ''\r\n    if( !_.isNil(this.props.postsNaeYong)){\r\n       viewText = this.props.postsNaeYong.replace(/<(\\/)?([a-zA-Z]*)(\\s[a-zA-Z]*=[^>]*)?(\\s)*(\\/)?>/ig, \"\");\r\n    }\r\n    return viewText\r\n  }\r\n\r\n\r\n  render() {\r\n    const {\r\n      editDate, \r\n      memUsername, \r\n      postsJemok, \r\n      postsNaeYong,\r\n      thumbnail,\r\n      postsNum,\r\n      primeYn,\r\n      regDate,\r\n      views,} = this.props;\r\n\r\n    return (\r\n      <div className ='article-wrapper'>\r\n\r\n        <div className ='article'>\r\n          <div className ='article-header'> \r\n          <StyledLink to ={\"/board/article/\" + `${postsNum}`}>   \r\n              <a className ='article-thumbnail'>\r\n                <img src = {thumbnail}/>\r\n                {/*<img src=\"https://thumb.velog.io/resize?url=https://images.velog.io/post-images/godori/967f0f60-698f-11e9-96b4-3faf0bb6ff50/dockercheatsheet2.png&amp;width=512\" alt=\"🐳 Docker Cheat Sheet\"/>*/}\r\n              </a> \r\n            </StyledLink>\r\n          </div>\r\n        \r\n          <div className = ''>\r\n          \r\n          <div className = 'content-wrapper'>\r\n            <div className = 'content-header'>\r\n              <div className ='content-title'>\r\n                {postsJemok}\r\n              </div>\r\n              <div className ='content-writer'>\r\n                작성자 {memUsername}\r\n              </div>\r\n              <div className ='content-date'>\r\n                날짜 {regDate} \r\n              </div>\r\n              <div className ='content-view'>\r\n                본사람 {views}\r\n              </div>\r\n             </div>\r\n            <div className ='content-content'> \r\n              {this.gettext()}\r\n            </div>\r\n            <div className ='article-footer'> \r\n              아래\r\n            </div>\r\n          </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport BoardCardItem from '../BoardCardItem'\r\nimport { observer, inject, } from 'mobx-react'\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport StyledLink from '../../StyleComponent/StyledLink/'\r\n\r\nconst PERPAGE = 10;\r\nlet renderCount = 1; \r\nclass BoardCard extends React.Component {\r\n  componentDidMount(){\r\n    const { getPostsList } = this.props;\r\n    getPostsList();\r\n    window.addEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // 언마운트 될때에, 스크롤링 이벤트 제거\r\n    window.removeEventListener(\"scroll\", this.handleScroll);\r\n    this.props.setInitForInfScroll();\r\n  \r\n  }\r\n  \r\n  handleScroll = () => {\r\n    const { isLast, isLoading, renderCount} = this.props;\r\n    const { innerHeight } = window;\r\n    const { scrollHeight } = document.body;\r\n    // IE에서는 document.documentElement 를 사용.\r\n    const scrollTop =\r\n      (document.documentElement && document.documentElement.scrollTop) ||\r\n      document.body.scrollTop;\r\n    // 스크롤링 했을때, 브라우저의 가장 밑에서 100정도 높이가 남았을때에 실행하기위함.\r\n    if (scrollHeight - innerHeight - scrollTop < 100) {\r\n      console.log(\"Almost Bottom Of This Browser\");\r\n      if( !isLast && !isLoading){\r\n        this.getOffset();\r\n      }\r\n    }\r\n  };\r\n\r\n  getOffset = () => { \r\n    const {setOffset, getPostsListForInf, renderCount} = this.props; \r\n    let offsetnow = Math.ceil(renderCount * PERPAGE);\r\n    console.log(offsetnow);\r\n    setOffset(offsetnow);\r\n    getPostsListForInf();\r\n  }\r\n\r\n  \r\n\r\n  getOrderRandom = () => {\r\n    let random = Math.floor(Math.random() * 10) + 1;\r\n    return random;\r\n  }\r\n\r\n  render() {\r\n    let { boardList } = this.props;\r\n\r\n    let frontList = boardList.slice(0,2) //첫번쨰 렌더링 \r\n    if( boardList.length > 2){\r\n      boardList = boardList.slice(2,boardList.length);\r\n    }\r\n\r\n    /* board 리스트 렌더링  */\r\n    let allBoardList = [] ;   \r\n    let sliceBoardList = [];\r\n    boardList.map((item) => {\r\n      sliceBoardList.push(item);\r\n      if( sliceBoardList.length % 3 === 0 ){\r\n        allBoardList.push(sliceBoardList)\r\n        sliceBoardList = [];\r\n      }\r\n    })\r\n    if( sliceBoardList.length !== 0){\r\n      allBoardList.push(sliceBoardList);\r\n    }\r\n  \r\n    console.log(\"allBoardList \", allBoardList)\r\n\r\n    let sizeList = [3, 4, 5]; \r\n    let idx = 0;\r\n    frontList = frontList.map((item,key) => {\r\n      console.log('item ', item.EDIT_DATE)\r\n      return (\r\n        <Col sm={{ size:  6, \r\n                    order: key, \r\n                    offset: 0 }}>\r\n            <BoardCardItem      key = {item.postsNum}\r\n                                index = {key}\r\n                                postsNum = {item.postsNum}\r\n                                memUsername = {item.memUsername}\r\n                                postsJemok = {item.postsJemok}\r\n                                postsNaeYong = {item.postsNaeYong}\r\n                                thumbnail = {item.thumbnail}\r\n                                views = {item.views}\r\n                                primeYn = {item.primeYn}\r\n                                regDate = {item.regDate}\r\n                            />\r\n        </Col>\r\n      )\r\n    })\r\n\r\n    let renderList = allBoardList.map((sliceBoardList) => {\r\n        return  ( \r\n          <Row>\r\n          {\r\n            sliceBoardList.map((item, key) =>{\r\n              if( idx === sizeList.length ){\r\n                idx = 0;\r\n              }\r\n              console.log('idx ', idx)\r\n              return (\r\n                        <Col sm={{ size: sizeList[idx++], \r\n                                   order: this.getOrderRandom(), \r\n                                   offset: 0 }}>\r\n                          <BoardCardItem key = {item.postsNum}\r\n                                        index = {key}\r\n                                        postsNum = {item.postsNum}\r\n                                        memUsername = {item.memUsername}\r\n                                        postsJemok = {item.postsJemok}\r\n                                        postsNaeYong = {item.postsNaeYong}\r\n                                        thumbnail = {item.thumbnail}\r\n                                        views = {item.views}\r\n                                        primeYn = {item.primeYn}\r\n                                        regDate = {item.regDate}/>\r\n                        </Col>\r\n                  \r\n              )\r\n            })\r\n          }\r\n          </Row>\r\n        ) \r\n    })\r\n    \r\n    return (\r\n      <Container>\r\n        <Row>\r\n          {frontList}\r\n        </Row>\r\n          {renderList}\r\n      </Container>\r\n      \r\n    );\r\n  }\r\n}\r\nexport default inject(({ board }) => ({\r\n  offset : board.offset,\r\n  isLoading : board.isLoading,\r\n  isLast : board.isLast,\r\n  renderCount : board.renderCount,\r\n  setInitForInfScroll : board.setInitForInfScroll,\r\n  getPostsListForInf : board.getPostsListForInf,\r\n  setOffset : board.setOffset,\r\n  getPostsList : board.getPostsList,\r\n  boardList : board.boardList\r\n  \r\n}))(observer(BoardCard));\r\n","import React, { Component } from 'react'\r\nimport hljs from \"highlight.js\";\r\nimport 'highlight.js/styles/monokai-sublime.css'\r\n\r\nexport default class Preview extends Component {\r\n  componentDidMount() {\r\n    this.updateCodeSyntaxHighlighting();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.updateCodeSyntaxHighlighting();\r\n  }\r\n\r\n  updateCodeSyntaxHighlighting = () => {\r\n    document.querySelectorAll(\"pre\").forEach(block => {\r\n      hljs.highlightBlock(block);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n    <div\r\n        className=\"content\"\r\n        dangerouslySetInnerHTML={{ __html: this.props.parsedText }}\r\n    />\r\n    );\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { observer, inject, } from 'mobx-react'\r\nimport { ListGroup, ListGroupItem, Badge } from 'reactstrap';\r\n\r\nimport './PostsIndexBox.scss'\r\nclass PostsIndexBox extends Component {\r\n    render() {\r\n        const { headerListId, scrollToElement}   = this.props;\r\n        let list = headerListId.map(( item, key )=> {\r\n            let str = item.split(\"_\")[0];\r\n            return (\r\n                <ListGroupItem onClick ={() => scrollToElement(item)}\r\n                    key ={key}>\r\n                    {str}\r\n                </ListGroupItem>\r\n            )\r\n        });\r\n        return (\r\n            <div className = {'postsindexbox_conatainer'} >\r\n                <Badge color=\"info\">Header</Badge>\r\n                <ListGroupItem>\r\n                    {list}    \r\n                </ListGroupItem> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default inject(({ board }) => ({\r\n    headerListId :board.headerListId,\r\n    scrollToElement : board.scrollToElement\r\n }))(observer(PostsIndexBox));","import React, { Component, Fragment } from 'react'\r\nimport style from './BoardCardView.module.css'\r\nimport { Route,withRouter } from 'react-router-dom';\r\nimport history from '../../../history'\r\nimport * as boardApi from '../../../lib/api/boardApi'\r\nimport Popup from \"reactjs-popup\";\r\nimport Prompt from '../Prompt'\r\nimport { withCookies, Cookies } from 'react-cookie';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport WithAuth from '../../WithAuth';\r\nimport StyledLink from '../../StyleComponent/StyledLink/'\r\nimport { Button, Badge } from 'reactstrap';\r\nimport moment from 'moment'\r\nimport { observer, inject, } from 'mobx-react'\r\nimport {  action } from 'mobx';\r\nimport Preview from '../../Preview'\r\nimport PostsIndexBox from '../PostsIndexBox'\r\n\r\n\r\nimport fontawesome from '@fortawesome/fontawesome'\r\nimport { FontAwesomeIcon  } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faPencilAlt, faCalendarAlt} from '@fortawesome/fontawesome-free-solid'\r\n\r\nfontawesome.library.add(faEye, faPencilAlt, faCalendarAlt);\r\n\r\nclass BoardCardView extends Component {\r\n \r\n    state ={\r\n        postsJemok : '',\r\n        postsNaeYong : '',\r\n        primeYN : '',\r\n        regDate : '',\r\n        views : '',\r\n        noticeStart : '',\r\n        noticeEnd : '',\r\n        postsNumber : this.props.match.params.postsNumber,\r\n        open : false\r\n    }\r\n\r\n    openModal = () =>{\r\n        this.setState({ \r\n            open: true\r\n        })\r\n    }\r\n    //open 복귀 \r\n    closeModal = () => {\r\n        this.setState({\r\n            open: false\r\n        })\r\n    }\r\n\r\n\r\n    handleDeleteBoard = async() =>{\r\n        this.openModal();\r\n    }\r\n    confirmDelete = async() => {\r\n        console.log('confirm')\r\n        const { postsNumber } =this.state;\r\n        try{\r\n            const response = await boardApi.deletePosts(1, postsNumber);\r\n            history.push(\"/board/notice\");\r\n\r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleEditBoard = () => {\r\n        const {match} = this.props;\r\n        console.log()\r\n        /* 관리자 검사  */\r\n        \r\n        window.history.push(\"/board/notice/editPosts/\" +`${match.params.postsNumber}`);\r\n    }\r\n\r\n\r\n\r\n    componentDidMount(){\r\n        const { getPosts } = this.props;\r\n        console.log('parseInt(this.props.match.params.postsNumber)', this.props.match)\r\n        getPosts(this.props);\r\n        //this.handleNameChange('cookieSet')\r\n    }\r\n    componentDidUpdate(){\r\n        this.props.findHeadingTag();\r\n    }\r\n   \r\n\r\nrender() {    \r\n    const {\r\n        match,\r\n        boardViewContent,\r\n        findHeadingTag\r\n     } = this.props;\r\n     \r\n    return (\r\n    <div className = {style.cardviewWraapper}>\r\n      <div className = {style.panel}>\r\n        <div className = {style.panelHeading}>\r\n            <div>\r\n                <h4>\r\n                    <Badge color=\"secondary\">  글 번호 :#{ match.params.postsNumber }</Badge>\r\n                    { boardViewContent.primeYN === 'Y' ?  ( <Badge style ={{marginLeft :'3px'}} \r\n                                                color=\"success\"> 현재공지 </Badge> ) : ('') }\r\n                </h4> \r\n            </div>\r\n\r\n            <div>\r\n                <FontAwesomeIcon \r\n                icon=\"pencil-alt\" \r\n                size=\"1x\" \r\n                color=\"black\"\r\n                >\r\n                </FontAwesomeIcon>\r\n                <span style ={{fontSize:'20px'}}> {boardViewContent.memUsername}</span>\r\n            </div>\r\n            <div>\r\n                <FontAwesomeIcon \r\n                    icon=\"eye\" \r\n                    size=\"1x\" \r\n                    color=\"black\"\r\n                >\r\n                </FontAwesomeIcon>\r\n                 <span style ={{fontSize:'15px'}}> {boardViewContent.views} </span>\r\n            </div>\r\n            <div>\r\n                <FontAwesomeIcon \r\n                    icon=\"calendar-alt\" \r\n                    size=\"1x\" \r\n                    color=\"black\"\r\n                >\r\n                </FontAwesomeIcon>\r\n                {/* primeYN === 'Y' ?\r\n                <span style ={{fontSize:'15px'}}> {moment(noticeStart).format('YYYY-MM-DD')} - {moment(noticeEnd).format('YYYY-MM-DD')} </span>\r\n                :\r\n                <span style ={{fontSize:'15px'}}> {moment(noticeStart).format('YYYY-MM-DD')} - {moment(noticeEnd).format('YYYY-MM-DD')} </span>\r\n                */}\r\n                {/*<span style ={{fontSize:'15px'}}> {moment(boardViewContent.noticeStart).format('YYYY-MM-DD')} - {moment(noticeEnd).format('YYYY-MM-DD')} </span>*/}\r\n            </div>\r\n        </div>\r\n        <div id = \"content-body\"  className = {style.panelBody}>\r\n            <div className = { style.headPostsName} >  \r\n                <h2 className = {style.title} > { boardViewContent.postsJemok } </h2>\r\n                <hr></hr>\r\n            </div>\r\n            <div className = { style.contentText}> \r\n                <Preview parsedText = {boardViewContent.postsNaeYong} />\r\n                { /*ReactHtmlParser(boardViewContent.postsNaeYong) */}\r\n            </div>\r\n\r\n            </div>\r\n        <div className = {style.boardButtonCompo}>\r\n            <StyledLink exact to ={\"/board/notice/editPosts/\" +`${match.params.postsNumber}`}>\r\n                <Button outline color=\"primary\">\r\n                    수정 \r\n                </Button>{' '}\r\n            </StyledLink>\r\n            <Button outline color=\"danger\" onClick = {this.handleDeleteBoard}>\r\n                삭제\r\n            </Button>{' '}\r\n            <StyledLink to={\"/board/notice\"}>\r\n                <Button outline color=\"info\">\r\n                게시판으로\r\n                </Button>{' '}\r\n            </StyledLink>\r\n        </div>\r\n        {/*\r\n        <Prompt open = { open }\r\n                closeModal = {this.closeModal}\r\n                confirmDelete = {this.confirmDelete}/>\r\n        */}\r\n      </div>\r\n      <PostsIndexBox/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default inject(({ board }) => ({\r\n    findHeadingTag :board.findHeadingTag,\r\n    getPosts : board.getPosts,\r\n    boardViewContent : board.boardViewContent,\r\n }))(observer(WithAuth(BoardCardView)));\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction arrowGenerator(color) {\r\n  return {\r\n    '&[x-placement*=\"bottom\"] $arrow': {\r\n      top: 0,\r\n      left: 0,\r\n      marginTop: '-0.95em',\r\n      width: '3em',\r\n      height: '1em',\r\n      '&::before': {\r\n        borderWidth: '0 1em 1em 1em',\r\n        borderColor: `transparent transparent ${color} transparent`,\r\n      },\r\n    },\r\n    '&[x-placement*=\"top\"] $arrow': {\r\n      bottom: 0,\r\n      left: 0,\r\n      marginBottom: '-0.95em',\r\n      width: '3em',\r\n      height: '1em',\r\n      '&::before': {\r\n        borderWidth: '1em 1em 0 1em',\r\n        borderColor: `${color} transparent transparent transparent`,\r\n      },\r\n    },\r\n    '&[x-placement*=\"right\"] $arrow': {\r\n      left: 0,\r\n      marginLeft: '-0.95em',\r\n      height: '3em',\r\n      width: '1em',\r\n      '&::before': {\r\n        borderWidth: '1em 1em 1em 0',\r\n        borderColor: `transparent ${color} transparent transparent`,\r\n      },\r\n    },\r\n    '&[x-placement*=\"left\"] $arrow': {\r\n      right: 0,\r\n      marginRight: '-0.95em',\r\n      height: '3em',\r\n      width: '1em',\r\n      '&::before': {\r\n        borderWidth: '1em 0 1em 1em',\r\n        borderColor: `transparent transparent transparent ${color}`,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  lightTooltip: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: 11,\r\n  },\r\n  arrowPopper: arrowGenerator(theme.palette.grey[700]),\r\n  arrow: {\r\n    position: 'absolute',\r\n    fontSize: 6,\r\n    width: '3em',\r\n    height: '3em',\r\n    '&::before': {\r\n      content: '\"\"',\r\n      margin: 'auto',\r\n      display: 'block',\r\n      width: 0,\r\n      height: 0,\r\n      borderStyle: 'solid',\r\n    },\r\n  },\r\n  bootstrapPopper: arrowGenerator(theme.palette.common.black),\r\n  bootstrapTooltip: {\r\n    backgroundColor: theme.palette.common.black,\r\n  },\r\n  bootstrapPlacementLeft: {\r\n    margin: '0 8px',\r\n  },\r\n  bootstrapPlacementRight: {\r\n    margin: '0 8px',\r\n  },\r\n  bootstrapPlacementTop: {\r\n    margin: '8px 0',\r\n  },\r\n  bootstrapPlacementBottom: {\r\n    margin: '8px 0',\r\n  },\r\n  htmlPopper: arrowGenerator('#dadde9'),\r\n  htmlTooltip: {\r\n    backgroundColor: '#f5f5f9',\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    maxWidth: 220,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: '1px solid #dadde9',\r\n    '& b': {\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n    },\r\n  },\r\n});\r\n\r\nclass CustomizedTooltips extends React.Component {\r\n  state = {\r\n    arrowRef: null,\r\n  };\r\n\r\n  handleArrowRef = node => {\r\n    this.setState({\r\n      arrowRef: node,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Tooltip title=\"Add\" classes={{ tooltip: classes.lightTooltip }}>\r\n          <Button className={classes.button}>Light</Button>\r\n        </Tooltip>\r\n        <Tooltip\r\n          title={\r\n            <React.Fragment>\r\n              Add\r\n              <span className={classes.arrow} ref={this.handleArrowRef} />\r\n            </React.Fragment>\r\n          }\r\n          classes={{ popper: classes.arrowPopper }}\r\n          PopperProps={{\r\n            popperOptions: {\r\n              modifiers: {\r\n                arrow: {\r\n                  enabled: Boolean(this.state.arrowRef),\r\n                  element: this.state.arrowRef,\r\n                },\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          <Button className={classes.button}>Arrow</Button>\r\n        </Tooltip>\r\n        <Tooltip\r\n          title={\r\n            <React.Fragment>\r\n              Add\r\n              <span className={classes.arrow} ref={this.handleArrowRef} />\r\n            </React.Fragment>\r\n          }\r\n          classes={{\r\n            tooltip: classes.bootstrapTooltip,\r\n            popper: classes.bootstrapPopper,\r\n            tooltipPlacementLeft: classes.bootstrapPlacementLeft,\r\n            tooltipPlacementRight: classes.bootstrapPlacementRight,\r\n            tooltipPlacementTop: classes.bootstrapPlacementTop,\r\n            tooltipPlacementBottom: classes.bootstrapPlacementBottom,\r\n          }}\r\n          PopperProps={{\r\n            popperOptions: {\r\n              modifiers: {\r\n                arrow: {\r\n                  enabled: Boolean(this.state.arrowRef),\r\n                  element: this.state.arrowRef,\r\n                },\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          <Button className={classes.button}>Bootstrap</Button>\r\n        </Tooltip>\r\n        <Tooltip\r\n          classes={{\r\n            popper: classes.htmlPopper,\r\n            tooltip: classes.htmlTooltip,\r\n          }}\r\n          PopperProps={{\r\n            popperOptions: {\r\n              modifiers: {\r\n                arrow: {\r\n                  enabled: Boolean(this.state.arrowRef),\r\n                  element: this.state.arrowRef,\r\n                },\r\n              },\r\n            },\r\n          }}\r\n          title={\r\n            <React.Fragment>\r\n              <Typography color=\"inherit\">Tooltip with HTML</Typography>\r\n              <em>{\"And here's\"}</em> <b>{'some'}</b> <u>{'amazing content'}</u>.{' '}\r\n              {\"It's very engaging. Right?\"}\r\n              <span className={classes.arrow} ref={this.handleArrowRef} />\r\n            </React.Fragment>\r\n          }\r\n        >\r\n          <Button className={classes.button}>HTML</Button>\r\n        </Tooltip>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCustomizedTooltips.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(CustomizedTooltips);","import { observable, action, computed } from 'mobx';\r\nimport clientConfig from '../configuration/clientConfig'\r\nimport helpers from '../lib/helpers'\r\nimport axios from 'axios';\r\nimport React, { Component } from 'react'\r\nimport classnames from 'classnames';\r\nimport _ from \"lodash\";\r\nimport Highcharts from 'highcharts';\r\nlet LayoutTemporaryStorage;\r\nexport default class EditStore {\r\n    @observable page_number = '분석'\r\n    @observable layout = []\r\n    @observable editPageFlag = true\r\n    @observable savePageFlag = false\r\n    @observable index = 0\r\n    @observable componentList = [] \r\n    \r\n\r\n\r\n\r\n  /*\r\n  handleResizable\r\n    flag 값에 따라 resizable 버튼의 display 값을 변경한다.\r\n    getElementsByClassName은 htmlcollection이므로 반환된 값에는\r\n    foreach 사용이 불가하다고 한다.\r\n  */\r\n  handleResizable = (flag) => {\r\n    let childs = document.getElementsByClassName('react-resizable-handle');\r\n    if(!helpers.isEmpty(childs)){\r\n      [...childs].forEach((item) => {\r\n        item.style.display= flag ? 'initial' : 'none';\r\n      })\r\n    }\r\n  }\r\n  /*\r\n  allChartResizing\r\n    모든 차트의 크기를 변경하는 함수이다.\r\n  */\r\n @action\r\n  allChartResizing = () => {\r\n    console.log(\"allChartResizing\")\r\n    Highcharts.charts.some( chart => {\r\n      console.log('chart ' , chart)\r\n      if( !helpers.isEmpty(chart) ) {\r\n        if(helpers.isEmpty(chart.userOptions.id)){\r\n          return false;\r\n        }\r\n       let rect = document.getElementById(chart.userOptions.id.replace('_c','')).getBoundingClientRect();\r\n        console.log('rect ' , rect)\r\n       chart.setSize(rect.width, rect.height);\r\n      }\r\n    })\r\n    /*\r\n    추가#\r\n    창 크기가 변경되어 차트를 리사이징 시킬 때 레이아웃 상의 모든\r\n    컴포넌트를 리사이징 한다. 원리는 하이차트 리사이징과 같다.\r\n    다만 하이차트 리사이징과 중복되기 때문에 둘을 구분하고 최적화하는 로직 필요함\r\n    (단, 컴포넌트의 root div에 wrapperid  + _c 가 id 로 잡혀있는 경우만 해당)\r\n    */\r\n    // this.layout.forEach((target) => {\r\n\r\n    //   if(!helpers.isEmpty(document.getElementById(target.i))){\r\n    //   let rect = document.getElementById(target.i).getBoundingClientRect();\r\n    //   let targetDiv =document.getElementById(target.i+ '_c');\r\n    //     if(!helpers.isEmpty(targetDiv)){\r\n    //       targetDiv.style.width = rect.width;\r\n    //       targetDiv.style.height = rect.height;\r\n    //     }\r\n    //   }\r\n    // })\r\n  }\r\n    /*\r\n  추가#\r\n  handleResizeChildComponent\r\n  render() 부분의 onResize = {this.handleResizeChildComponent}\r\n  resize event와 연결된 함수로 각각의 컴포넌트를 리사이징 할 때 실행되는 함수이다.\r\n  각각의 컴포넌트 크기를 변경한다.\r\n  (하이차트는 setSize 라는 함수를 이용해야 하기 때문에 해당하지 않는다.)\r\n  (단, 컴포넌트의 root div에 wrapperid  + _c 가 id 로 잡혀있는 경우만 해당)\r\n  */\r\n handleResizeChildComponent = ( allChild, target ) => {\r\n  console.log('handleResizeChildComponent ,allChild', allChild, ' target ', target.i);\r\n  let rect = document.getElementById(target.i).getBoundingClientRect();\r\n\r\n  let targetDiv =document.getElementById(target.i+ '_c');\r\n  if(!helpers.isEmpty(targetDiv)){\r\n    targetDiv.style.width = rect.width;\r\n    targetDiv.style.height = rect.height;\r\n  }\r\n  this.allChartResizing();\r\n}\r\n    /*\r\n    searchComponentByName\r\n      컴포넌트 리스트로부터 컴포넌트의 이름을 통해 객체를 찾아 반환하는 함수이다.\r\n    */\r\n    @action\r\n    searchComponentByName = (thisComponentName) => {\r\n      console.log('thisComponentName ', thisComponentName)\r\n      let tag;\r\n      this.componentList.forEach((item) => {\r\n        console.log('item ' , item)\r\n        for(let name in item){\r\n          if(name === thisComponentName){\r\n            tag = item[name];\r\n          }\r\n        }\r\n      })\r\n      return tag;\r\n    }\r\n\r\n    /*\r\n    addSelectedComponent\r\n      EditableList에서 추가하려는 컴포넌트를 클릭하면 트리거되는 함수이다.\r\n      EditableTemplate 으로부터 추가하려는 컴포넌트의 이름을 props로 받아오고\r\n      해당 컴포넌트를 레이아웃에 추가한다.\r\n    */\r\n   @action\r\n    addSelectedComponent = (e) => {\r\n      //console.log(e);\r\n      let selectedId = e.target.id ;\r\n      //console.log(selectedId)\r\n      let Tag = this.searchComponentByName( selectedId );\r\n      //console.log('Tag' , Tag)\r\n      let timeStamp = new Date().getTime();\r\n      this.layout.push({\r\n            i: 'n' + timeStamp,\r\n            x: (this.layout.length * 2) % (18|| 12),\r\n            y: Infinity, // puts it at the bottom\r\n            w: 2,\r\n            h: 2,\r\n            item: Tag,\r\n            TagName: selectedId\r\n        })\r\n    }\r\n\r\n    @action  \r\n    putComponentList = ( ListViewName, component) => {\r\n      this.componentList.push({\r\n          [ListViewName] : component,\r\n      });\r\n      console.log('putComponentList ' ,this.componentList)\r\n    }\r\n    \r\n\r\n    @action loadPage = async() => {\r\n        console.log('loadpage' );\r\n      axios.post(clientConfig.endpoint.api + '/bus/get_user_components', {\r\n        user_id : 'sampleId',\r\n        page_number : this.page_number,\r\n      })\r\n      .then(async res => {\r\n          \r\n          console.log('res', res.data.component_list);\r\n        if(helpers.isEmpty(res.data.component_list)){\r\n          this.initlayout( this.page_number );\r\n          this.page_number = this.page_number\r\n        }\r\n        else{\r\n            this.page_number =  this.page_number\r\n            this.layout =  JSON.parse(res.data.component_list).layout\r\n        }\r\n        //this.handleResizable(this.props.editPageFlag);\r\n      })\r\n    }\r\n\r\n  /*\r\n  initlayout\r\n    layout을 초기화하는 함수이다.\r\n  */\r\n  @action initlayout(){\r\n      this.layout = [0,1,2,3,4].map((i, key, list) => {\r\n        return {\r\n          i: i.toString(),\r\n          x: i * 2,\r\n          y: 0,\r\n          w: 2,\r\n          h: 2,\r\n          item: null,\r\n          TagName: null,\r\n          add: i === (list.length - 1).toString()\r\n        };\r\n      })\r\n  } \r\n  \r\n   /*\r\n  handleResizeEnd\r\n    창 크기가 변할 때 trigger 되는 onresize 이벤트에 등록하여\r\n    드래그가 끝나는 시점에 allChartResizing을 trigger 시키는 함수이다.\r\n    (현재 drag 중이면 clearTimeout을 통해 기존에 등록시킨 allChartResizing을\r\n     초기화하고 drag가 끝난 후 200ms 후 allChartResizing을 실행한다.)\r\n  */\r\n//  handleResizeEnd = (e) => {\r\n//    this.allChartResizing\r\n//   }\r\n\r\n  \r\n@action\r\ncreateElement = (el,key) => {\r\n\r\n  const{onRemoveItem}  =this;\r\n  console.log(el, key)\r\n  const removeStyle = {\r\n    position: \"absolute\",\r\n    right: \"2px\",\r\n    top: 0,\r\n    cursor: \"pointer\",\r\n    zIndex: 99\r\n  };\r\n  let Tag = helpers.isEmpty(el.TagName) ? 'div' : this.searchComponentByName(el.TagName);\r\n  //let Tag = 'div'\r\n    return (       \r\n    <div className = {classnames({dragHandle: this.editPageFlag})}\r\n        key       = {el.i}>\r\n        <div className  = {'componentContainer'}\r\n            id         = {el.i}>\r\n        <Tag data = {el.i}\r\n            wrapperid = {el.i}\r\n            editPageFlag  = { this.editPageFlag }\r\n            />\r\n        </div>\r\n        {\r\n        this.editPageFlag  === true ?\r\n        (\r\n            <span\r\n              className = \"remove\"\r\n              style     = {removeStyle}\r\n              onClick = {() => onRemoveItem(el.i)}\r\n              //onClick   = {onRemoveItem(el.i)}\r\n            >\r\n            x\r\n            </span>\r\n            ) :\r\n            (\r\n            <span></span>\r\n            )\r\n        }\r\n    </div>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n/*\r\nonRemoveItem\r\nx를 클릭한 컴포넌트를 제거하는 함수\r\n*/\r\n  @action\r\n  onRemoveItem =(i) => {\r\n    console.log(i)\r\n    console.log('hello', this.layout)\r\n    this.layout =  _.reject(this.layout, { i: i }) \r\n  }\r\n\r\n  saveToLocal = (key, value) => {\r\n    //LayoutTemporaryStorage = JSON.stringify({ [key]: value });\r\n  }\r\n\r\n  \t/*\r\n\thandelButton: 현재 클릭한 버튼의 id를 handlePage 함수에 전달하여 값에 따라\r\n\t\t\t\t\t\t\t\tpage를 저장하거나 수정 할 수 있게 하고 버튼을 변경한다.\r\n  */\r\n\r\n  /*\r\n  handlePage\r\n    EditablePages에서 수정 또는 저장 버튼을 클릭하면 트리거되는 함수로\r\n    버튼의 플래그 값에 따라 저장을 할 지 editable 가능하게 할 지를 결정한다.\r\n    (미완성, 제일 하단에 값에 해당 함수가 추가 될 것이다.)\r\n  */\r\n @action\r\n handlePage =() => {\r\n  this.editPageFlag = !this.editPageFlag\r\n  this.handleResizable(this.editPageFlag);\r\n\r\n}\r\n\r\n /*\r\n  handleSavePage\r\n    EditablePages에서 저장 버튼을 클릭하면 트리거되는 함수이다.\r\n    현재 layout이 나타내는 페이지를 저장한다.\r\n  */\r\n handleSavePage = () => {\r\n  axios.post(clientConfig.endpoint.api + '/bus/set_user_components', {\r\n    user_id : 'sampleId',\r\n    page_number : this.state.page_number,\r\n    component_list: LayoutTemporaryStorage\r\n  })\r\n  .then(res => {\r\n    //console.log(res.data);\r\n  });\r\n}\r\n\r\n  /*\r\n  onLayoutChange\r\n    layout의 위치, 크기 등이 변경되면 트리거되는 함수이다.\r\n    매개변수로 레이아웃에 배치된 컴포넌트들의 현재 크기, 위치 등을 받아오지만,\r\n    어떤 컴포넌트인지 알 수 없기 때문에 (children을 알 수 없고 위치, 크기 등의 정보만 있다.)\r\n    map 함수를 통해 현재 유지하고 있는 state.layout의 정보들을 추가하여 저장한다.\r\n  */\r\n onLayoutChange =  (layout) => {\r\n  console.log('onLayoutChange ', layout)\r\n  this.layout = layout.map((item,i) => {\r\n    return {\r\n      ...item,\r\n      item: this.layout[i].item,\r\n      TagName: this.layout[i].TagName\r\n    }\r\n  })\r\n\r\n   this.saveToLocal(\"layout\", layout);\r\n   //this.allChartResizing();\r\n}\r\n\r\n\r\n\r\n}","import React, { Component, Fragment } from 'react'\r\nimport style from './WriteBoardCard.module.css'\r\nimport { Form, Input, Button } from 'reactstrap';\r\nimport WithAuth from '../../WithAuth';\r\nimport { Link } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport _ from 'lodash'\r\nimport Editer from '../../Editer'\r\nimport { observer, inject, } from 'mobx-react'\r\n\r\n\r\n/*글 작성 , 글 수정 컴포넌트 */\r\nclass WriteBoardCard extends Component { \r\n\r\n     componentDidMount(){\r\n         console.log('componentDidMount')\r\n        const { makeSelectOption } = this.props;\r\n        makeSelectOption();\r\n     }\r\n    \r\n     componentWillUnmount(){\r\n        console.log('componentWillUnmount')\r\n        this.props.init();\r\n     }\r\n\r\n      render() {\r\n        let { \r\n            handlePostsNameChange,\r\n            writePosts,\r\n            selectHandleChange,\r\n            selectThumbnail,\r\n            confirm, \r\n            options, \r\n            selectedOption,\r\n            isSearchable,\r\n            isClearable,\r\n            thumbnailDisplayUrl,\r\n        } = this.props\r\n        return (\r\n            <div className = {style.container}>\r\n                <div>\r\n                <hr/>\r\n                    <Select\r\n                        className = {style.boardSelect}\r\n                        value={selectedOption}\r\n                        isSearchable ={isSearchable}\r\n                        isClearable  = {isClearable}\r\n                        onChange={selectHandleChange}\r\n                        options={options}\r\n                        placeholder ={'게시판을 선택해주세요'}\r\n                    />\r\n       \r\n                    <hr/>\r\n                    <Form className ={style.jemokContainer}>\r\n                        <Input className = {style.jemokItem}\r\n                                onChange = {handlePostsNameChange} \r\n                                placeholder = '제목을 입력해주세요.'/>\r\n                    </Form>\r\n                </div>\r\n                <hr/>\r\n                <div className ={ style.thumbnailContainer}>\r\n                    <Button color=\"secondary\"\r\n                            onClick = { selectThumbnail} >\r\n                            { _.isNil(thumbnailDisplayUrl ) ?  '썸네일 선택' : '재선택' } \r\n                    </Button>\r\n                </div>\r\n\r\n                <hr/>\r\n\r\n                <div className = {style.editerContainer}>\r\n                    <div className= {style.thumbnailContainer}>\r\n                        { _.isNil(thumbnailDisplayUrl ) ?  ''  : \r\n                        ( \r\n                        <Fragment>\r\n                            <div> 선택한 썸네일  </div>\r\n                            <img style={{width: ``, height: '300px'}} src={thumbnailDisplayUrl}/>\r\n                        </Fragment>\r\n                            \r\n                        )\r\n                    }\r\n                    </div>\r\n                    <Editer confirm = {confirm} />     \r\n                </div>\r\n                 \r\n                <div className ={style.buttonContainer}>\r\n                    <Button color=\"primary\"  onClick = {() => writePosts(confirm)}> 작성</Button>{' '}\r\n                    <Link to={'/board/notice'}>\r\n                        <Button color=\"secondary\">취소</Button>{' '}\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n      }\r\n    \r\n}\r\n\r\nexport default inject(({ board }) => ({\r\n    makeSelectOption : board.makeSelectOption,\r\n    handlePostsNameChange : board.handlePostsNameChange,\r\n    selectHandleChange : board.selectHandleChange,\r\n    writePosts : board.writePosts,\r\n    postJemok: board.postJemok,\r\n    options : board.options,\r\n    selectedOption : board.selectedOption,\r\n    isSearchable : board.isSearchable,\r\n    isClearable : board.isClearable,\r\n    selectThumbnail : board.selectThumbnail,\r\n    thumbnailDisplayUrl : board.thumbnailDisplayUrl,\r\n    thumbnailImg : board.thumbnailImg,\r\n    init : board.init\r\n  }))(observer(WithAuth(WriteBoardCard)));\r\n","// @material-ui/icons\r\nimport Dashboard from \"@material-ui/icons/Dashboard\";\r\nimport Person from \"@material-ui/icons/Person\";\r\n// import ContentPaste from \"@material-ui/icons/ContentPaste\";\r\nimport LibraryBooks from \"@material-ui/icons/LibraryBooks\";\r\nimport BubbleChart from \"@material-ui/icons/BubbleChart\";\r\nimport LocationOn from \"@material-ui/icons/LocationOn\";\r\nimport Notifications from \"@material-ui/icons/Notifications\";\r\nimport Unarchive from \"@material-ui/icons/Unarchive\";\r\n// core components/views\r\n\r\nimport Notice from '../components/Notice'\r\nimport PasswordChange from '../components/Member/PasswordChange'\r\nimport myPage from '../components/Member/MyPage'\r\nimport EditBoard from '../components/Board/EditBoard'\r\nimport WriteBoard from '../components/Board/WriteBoard'\r\nimport BoardView from '../components/Board/BoardView';\r\nimport Board from '../components/Board/Board'\r\nimport BoardCard from '../components/Board/BoardCard'\r\nimport App from '../App'\r\nimport Editor from '../components/Editer'\r\nimport CarouselSlide from '../components/CarouselSlide'\r\nimport BoardCardItem from '../components/Board/BoardCardItem'\r\nimport TimerView from '../components/Timer/TimerView'\r\nimport BoardCardView from '../components/Board/BoardCardView'\r\nimport CustomizedTooltips from '../components/StyleComponent/CustomizedTooltips'\r\nimport WriteBoardCard from '../components/Board/WriteBoardCard'\r\nimport Login from '../components/Login'\r\n\r\n\r\n// <Route exact path = {`${match.url}/notice`} component ={Board}/>\r\n// <Switch>\r\n//     <Route path = {`${match.url}/notice/writePosts`} component ={WriteBoard}/>\r\n//     <Route exact path = {`${match.url}/notice/:postsNumber`} component ={BoardView}/>\r\n// </Switch>\r\n// <Route path = {`${match.url}/notice/editPosts/:editNumber`} component ={EditBoard}/>\r\n\r\n\r\nconst dashboardRoutes = [\r\n  {\r\n    sideView: true, \r\n    //exact : true,\r\n    path: \"/board/WriteBoardCard\",\r\n    sidebarName: \"WriteBoardCard\",\r\n    navbarName: \"WriteBoardCard login\",\r\n    icon: WriteBoardCard,\r\n    component: WriteBoardCard\r\n  },\r\n\r\n  {\r\n    sideView: true, \r\n    path: \"/admin\",\r\n    sidebarName: \"ADMIN\",\r\n    navbarName: \"Material Dashboard\",\r\n    icon: Dashboard,\r\n    component: myPage\r\n  },\r\n\r\n  {\r\n    sideView: true, \r\n    path: \"/user/mypage\",\r\n    sidebarName: \"마이페이지\",\r\n    navbarName: \"Material Dashboard\",\r\n    icon: Dashboard,\r\n    component: myPage\r\n  },\r\n  {\r\n    sideView: false, \r\n    path: \"/user/passwordChange\",\r\n    sidebarName: \"패스워드변경\",\r\n    navbarName: \"Material Dashboard\",\r\n    icon: Dashboard,\r\n    component: PasswordChange\r\n  },\r\n  {\r\n    sideView: false, \r\n    path: \"/board/writePosts\",\r\n    sidebarName: \"글작성\",\r\n    navbarName: \"Material Dashboard\",\r\n    icon: Dashboard,\r\n    component: WriteBoard\r\n  },\r\n\r\n  {\r\n    sideView : false,\r\n    //exact : true,\r\n    path: \"/board/notice/editPosts/:editNumber\",\r\n    sidebarName: \"글수정\",\r\n    navbarName: \"notice board\",\r\n    icon: Dashboard,\r\n    component: EditBoard\r\n  },\r\n\r\n  {\r\n    sideView: false,\r\n    path: \"/board/article/:postsNumber\",\r\n    sidebarName: \"뷰\",\r\n    navbarName: \"notice board\",\r\n    icon: Dashboard,\r\n    component: BoardCardView\r\n  },\r\n\r\n  {\r\n    sideView: true,\r\n    //exact : true,\r\n    path: \"/board/notice/\",\r\n    sidebarName: \"공지사항\",\r\n    navbarName: \"notice board\",\r\n    icon: Dashboard,\r\n    component: Board\r\n  },\r\n\r\n  {\r\n    sideView: true,\r\n    //exact : true,\r\n    path: \"/notice/\",\r\n    sidebarName: \"공지사항뷰\",\r\n    navbarName: \"notice\",\r\n    icon: Dashboard,\r\n    component: Notice\r\n  },\r\n\r\n  {\r\n    sideView: true,\r\n    //exact : true,\r\n    path: \"/Editor/\",\r\n    sidebarName: \"Editor\",\r\n    navbarName: \"notice\",\r\n    icon: Dashboard,\r\n    component: Editor\r\n  },\r\n\r\n  {\r\n    sideView: true,\r\n    //exact : true,\r\n    path: \"/seoPage/\",\r\n    sidebarName: \"seoPage\",\r\n    navbarName: \"seoPage\",\r\n    icon: Dashboard,\r\n    component: App\r\n  },\r\n  {\r\n    sideView: true,\r\n    //exact : true,\r\n    path: \"/BoardCard/\",\r\n    sidebarName: \"BoardCard\",\r\n    navbarName: \"BoardCard\",\r\n    icon: BoardCard,\r\n    component: BoardCard\r\n  },\r\n  {\r\n    sideView: true,\r\n    //exact : true,\r\n    path: \"/BoardCardItem/\",\r\n    sidebarName: \"BoardCardItem\",\r\n    navbarName: \"BoardCardItem\",\r\n    icon: BoardCardItem,\r\n    component: BoardCardItem\r\n  },\r\n  {\r\n    sideView: true,\r\n    //exact : true,\r\n    path: \"/TimerView/\",\r\n    sidebarName: \"TimerView\",\r\n    navbarName: \"TimerView\",\r\n    icon: TimerView,\r\n    component: TimerView\r\n  },\r\n  {\r\n    sideView: true,\r\n    //exact : true,\r\n    path: \"/CarouselSlide/\",\r\n    sidebarName: \"CarouselSlide\",\r\n    navbarName: \"CarouselSlide\",\r\n    icon: CarouselSlide,\r\n    component: CarouselSlide\r\n  },\r\n\r\n  {\r\n    sideView: true,\r\n    //exact : true,\r\n    path: \"/BoardCardView/\",\r\n    sidebarName: \"BoardCardView\",\r\n    navbarName: \"BoardCardView\",\r\n    icon: BoardCardView,\r\n    component: BoardCardView\r\n  },\r\n\r\n\r\n\r\n\r\n  //{ redirect: true, path: \"/\", to: \"/dashboard\", navbarName: \"Redirect\" }\r\n];\r\n\r\nexport default dashboardRoutes;\r\n","import React, { Component } from 'react'\r\nimport style from './SideBar.module.css'\r\nimport { Link,NavLink  } from 'react-router-dom';\r\nclass SideBar extends Component {\r\n\r\n    state = {\r\n        openNav : true,\r\n        open : true,\r\n    }\r\n\r\n     openNav =() => {\r\n        document.getElementById(\"mySidebar\").style.width = \"200px\";\r\n        document.getElementById(\"main\").style.marginLeft = \"200px\";\r\n        this.setState({\r\n            openNav : !this.state.openNav\r\n        })\r\n      }\r\n      \r\n     closeNav = () =>{\r\n        document.getElementById(\"mySidebar\").style.width = \"0\";\r\n        document.getElementById(\"main\").style.marginLeft= \"0\";\r\n        this.setState({\r\n            openNav : !this.state.openNav\r\n        })\r\n      }\r\n\r\n      shouldComponentUpdate(nextProps, nextState){\r\n          if( nextProps.open !== this.state.open ){\r\n            this.setState({\r\n                open : nextProps.open\r\n            })\r\n            return true;\r\n          }\r\n          return true;\r\n      }\r\n\r\n    render() {\r\n        const { openNav,open  } = this.state; \r\n        const { match, \r\n            routes, \r\n            openSideBar } = this.props;\r\n        const activeStyle = {\r\n            color: 'white',\r\n            fontSize: '1rem'\r\n        };\r\n\r\n\r\n        const sideBarOpenStyle = {\r\n            //color: 'white',\r\n            width : '0px',\r\n           // fontSize: '2rem'\r\n        };\r\n        const sideBarCloseStyle = {\r\n            //color: 'white',\r\n            width : '200px',\r\n            //fontSize: '2rem'\r\n        };\r\n\r\n        const spanOpenStyle = {\r\n            fontSize: '30px',\r\n            cursor: 'pointer',\r\n             position :'absolute', \r\n             zIndex: 100, \r\n             color: '#fff5f5' \r\n        }\r\n\r\n\r\n\r\n        console.log(routes)        \r\n        const link = routes.map(( prop, key ) => {\r\n            if( prop.sideView ){\r\n                console.log('hello')\r\n                return (\r\n                <NavLink to={prop.path} \r\n                        activeStyle = {activeStyle}\r\n                        key = {key} >\r\n                    {prop.sidebarName}\r\n                </NavLink>\r\n                )\r\n            }\r\n        })\r\n        console.log(openNav);\r\n        return (\r\n            \r\n            <div>\r\n                <div id=\"mySidebar\" className={style.sidenav} style = { open ? sideBarCloseStyle : sideBarOpenStyle}>\r\n                    <a href=\"javascript:void(0)\" \r\n                        className= {style.closebtn}\r\n                        //onClick={this.closeNav}>&times;</a>\r\n                        onClick={openSideBar}>&times;</a>\r\n                    {link}\r\n\r\n                </div>\r\n                <div id=\"main\" className = {style.main}>\r\n                {!openNav ? \r\n                     (\r\n                         <div></div>\r\n                     )\r\n                     :\r\n                     ( \r\n                        <span style={spanOpenStyle} \r\n                          //onClick= {this.openNav}>&#9776;</span>\r\n                          onClick= {openSideBar}\r\n                        >&#9776;</span>\r\n                        ) \r\n                }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SideBar","import React, { Component } from 'react'\r\nimport style from './DashBoard.module.css'\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport dashboardRoutes from \"../../routes/dashboard.js\";\r\nimport SideBar from '../../components/SideBar';\r\nimport CarouselSlide from '../../components/CarouselSlide'\r\n//import SideNav from '../../components/SideNav';\r\n\r\n\r\nconst switchRoutes = (\r\n    <Switch>\r\n      {dashboardRoutes.map((prop, key) => {\r\n        if (prop.redirect){\r\n          return <Redirect from={prop.path} to={prop.to} key={key} />;\r\n        }\r\n        if(prop.exact){\r\n          return  <Route exact path={prop.path} component={prop.component} key={key} />;\r\n        }\r\n        return <Route path={prop.path} component={prop.component} key={key} />;\r\n      })}\r\n    </Switch>\r\n  );\r\n  \r\n\r\n\r\nexport default class DashBoard extends Component {\r\n  \r\n  state ={\r\n    open: true,\r\n    marginLeft : 0\r\n  }\r\n  openSideBar = () =>{\r\n    console.log('hi')\r\n    this.setState({\r\n      open : !this.state.open\r\n    }) \r\n  }\r\n\r\n  \r\n\r\n  \r\n  render() {\r\n    const openStyle = {\r\n        //fontSize: '2rem',\r\n        marginLeft : '200px',\r\n    };\r\n    const closeStyle = {\r\n        marginLeft : '0px',\r\n        //fontSize: '2rem'\r\n    };\r\n\r\n    const { open } =  this.state;\r\n\r\n    return (\r\n      <div className = {style.wrapper}>\r\n        <SideBar routes = {dashboardRoutes} \r\n                  openSideBar ={this.openSideBar}\r\n                  open = {open}/>\r\n        <div className = {style.mainPanel}>\r\n            <div className = {style.content} > \r\n                <div className ={style.container} \r\n                     style ={ open ? openStyle : closeStyle}>\r\n                     <CarouselSlide/>\r\n                    {switchRoutes}\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Login from '../components/Login'\r\nimport Dashboard from \"../layouts/DashBoard\";\r\n\r\nclass App extends Component {\r\n    state ={\r\n        \r\n    }\r\n    componentDidMount(){\r\n//    window.RainyDay({ image: 'background', gravityAngleVariance: 0,fps: 100, gravityThreshold: 2});\r\n    \r\n    }\r\n    \r\n\r\n    render() {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"./rainyday.js\";\r\n        script.async = true;\r\n        document.body.appendChild(script);\r\n       \r\n        return (\r\n            <div>\r\n                {/*<div id ='background'>dsdsad</div>*/}\r\n                {<Route exact path=\"/login\" component={Login}/>}\r\n                {/*<Route path=\"/board\" component={SideNav}/>*/}\r\n                <Route path=\"/\" component ={Dashboard}/>\r\n            </div>\r\n        );  \r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from '../shared/App';\r\n\r\nconst Root = () => (\r\n    <BrowserRouter>\r\n        <App/>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Root;","import { observable, action, computed } from 'mobx';\r\n\r\nexport default class WordStore {\r\n  @observable goodWordItems = [];\r\n  @observable selectedItems = [];\r\n\r\n  @observable author;\r\n  @observable text;\r\n  // **** 추가됨\r\n  constructor(root) {\r\n    this.root = root;\r\n  }\r\n\r\n  @action  \r\n  putWord = (author, text) => {\r\n    console.log('author ' , author , ' text ' , text )\r\n    let lengthGoodWord = this.goodWordItems.length;\r\n    lengthGoodWord += 1\r\n    console.log('lengthGoodWord ' ,lengthGoodWord)\r\n    this.goodWordItems.push({\r\n        author,\r\n        text ,\r\n        key : lengthGoodWord,\r\n    });\r\n    console.log('goodWordItems ' ,this.goodWordItems)\r\n  }\r\n\r\n  @action\r\n  handleAuthorChange = (e) => {\r\n    this.author = e.target.value\r\n  };\r\n\r\n  @action\r\n  handleTextChange = (e) => {\r\n    this.text = e.target.value\r\n  };\r\n\r\n   \r\n\r\n\r\n\r\n\r\n  @action\r\n  put = (name, price) => {\r\n    const { number } = this.root.counter;\r\n    // 존재하는지 찾고\r\n    const exists = this.selectedItems.find(item => item.name === name);\r\n    if (!exists) {\r\n      // 존재하지 않는다면 새로 집어넣습니다.\r\n      this.selectedItems.push({\r\n        name,\r\n        price,\r\n        count: number,\r\n      });\r\n      return;\r\n    }\r\n    // 존재 한다면 count 값만 올립니다.\r\n    exists.count += number;\r\n  };\r\n\r\n  @action\r\n  take = name => {\r\n    const itemToTake = this.selectedItems.find(item => item.name === name);\r\n    itemToTake.count--;\r\n    if (itemToTake.count === 0) {\r\n      // 갯수가 0 이면\r\n      this.selectedItems.remove(itemToTake); // 배열에서 제거처리합니다.\r\n    }\r\n  };\r\n\r\n  @computed\r\n  get total() {\r\n    console.log('총합 계산...');\r\n    return this.selectedItems.reduce((previous, current) => {\r\n      return previous + current.price * current.count;\r\n    }, 0);\r\n  }\r\n}","import { observable, action, computed } from 'mobx';\r\nimport axios from 'axios';\r\nimport * as _ from 'lodash';\r\nexport default class WeatherStore {\r\n    @observable error = null\r\n    @observable isFetchingRain = false\r\n    @observable isFetchingTemp = false\r\n    @observable isFetchingHumi = false\r\n    @observable weatherData = []\r\n    @observable rainData = [];\r\n    @observable humidityData = [];\r\n    @observable temperatureData = [];\r\n    @observable nowLocation = '서울역 날씨'\r\n\r\n    @action setWeatherData = (weatherData) => { this.weatherData = weatherData }\r\n    \r\n    makeTemperature = (resData, wantApi) => {\r\n      // weatherInfo.push(timeList) //시간\r\n      // weatherInfo.push(weatherDetailList) //날씨 한글 축약\r\n      // weatherInfo.push(temperatureList) //온도\r\n      // weatherInfo.push(humidityList)     //습도\r\n      // weatherInfo.push(proPrecipitationList) // 강수확률\r\n      // weatherInfo.push(precipitation)     //강수량\r\n      console.log(resData)\r\n      //시간 온도 \r\n      if( wantApi === \"TEMPERATURE\" ){\r\n        let timeList = resData[0]\r\n        console.log(timeList);\r\n        let weatherDetailList = resData[1]\r\n        let temperatureList= resData[2];\r\n        \r\n        let chartData = [];\r\n        for(let i = 0; i < timeList.length; i++){\r\n            chartData.push([ timeList[i], parseInt(temperatureList[i])])\r\n        }\r\n        return chartData;\r\n      }\r\n      //습도 \r\n      if( wantApi === \"HUMIDITY\" ){\r\n        let timeList = resData[0]\r\n        console.log(timeList);\r\n        let weatherDetailList = resData[1]\r\n        let humidityList= resData[3];\r\n        \r\n        let chartData = [];\r\n        for(let i = 0; i < timeList.length; i++){\r\n            chartData.push([ timeList[i], parseInt(humidityList[i])])\r\n        }\r\n        return chartData;\r\n      }\r\n      //강수량 \r\n      if( wantApi === \"RAIN\" ){\r\n        let timeList = resData[0]\r\n        console.log(timeList);\r\n        let weatherDetailList = resData[1]\r\n        let proPrecipitationList = resData[4];\r\n        let precipitationList = resData[5];\r\n        console.log(proPrecipitationList.length);\r\n        console.log(precipitationList.length);\r\n        let chartData = [];\r\n        let proTemp = [];\r\n        let preTemp = [];\r\n        for(let i = 0; i < timeList.length; i++){\r\n            proTemp.push([ timeList[i], parseInt(proPrecipitationList[i])])\r\n            //precipitationList[i] \r\n           \r\n            preTemp.push([ timeList[i],  _.isNaN(parseFloat(precipitationList[i])) ? 0.0 :  \r\n                                          parseFloat(precipitationList[i])])\r\n\r\n\r\n        }\r\n        chartData.push(proTemp)\r\n        chartData.push(preTemp);\r\n        console.log('chartData ', chartData)\r\n        return chartData;\r\n      }\r\n    }\r\n\r\n\r\n\r\n    @action\r\n    setInterval = (wantApi) => {\r\n      let playAlert = setInterval(async() =>{\r\n        console.log('hello', wantApi)\r\n        if(wantApi === \"RAIN\"){\r\n          this.isFetchingRain = true\r\n          this.rainData = []\r\n        }\r\n        if(wantApi === \"HUMIDITY\"){\r\n          this.isFetchingHumi = true\r\n          this.humidityData = []\r\n         }\r\n         if(wantApi === \"TEMPERATURE\"){\r\n          this.temperatureData = []\r\n          this.isFetchingTemp = true\r\n         }\r\n        this.weatherData = []\r\n        this.error = null\r\n        let data = {\r\n          loc : this.nowLocation\r\n        }\r\n        try{\r\n          const response = await axios.post('http://localhost:3031/api/weather/PYTHONTEST',data)         \r\n          //const response = await axios.post('http://localhost:3031/api/bus/get_data')\r\n          if(wantApi === \"RAIN\"){\r\n            this.rainData = this.makeTemperature(response.data, wantApi )\r\n            this.isFetchingRain = false;  \r\n          }\r\n          if(wantApi === \"HUMIDITY\"){\r\n              this.humidityData = this.makeTemperature(response.data, wantApi )\r\n              this.isFetchingHumi = false\r\n            }\r\n           if(wantApi === \"TEMPERATURE\"){\r\n              this.temperatureData = this.makeTemperature(response.data, wantApi )\r\n              this.isFetchingTemp = false      \r\n          }\r\n        }\r\n        \r\n        catch(e){\r\n          console.log(e)\r\n        }\r\n      }, 30000);\r\n    }\r\n\r\n\r\n    @action \r\n    getWeather = async( wantApi ) => {\r\n      //this.isFetching = true\r\n      this.weatherData = []\r\n      this.rainData = []\r\n      this.huminityData = []\r\n      this.temperatureData = []\r\n      if(wantApi === \"RAIN\"){\r\n        this.isFetchingRain = true\r\n      }\r\n      if(wantApi === \"HUMIDITY\"){\r\n        this.isFetchingHumi = true\r\n       }\r\n       if(wantApi === \"TEMPERATURE\"){\r\n        this.isFetchingTemp = true\r\n       }\r\n      this.error = null\r\n      let data = {\r\n        loc : this.nowLocation\r\n      }\r\n      try{\r\n        const response = await axios.post('http://localhost:3031/api/weather/PYTHONTEST',data)\r\n        //const response = await axios.post('http://localhost:3031/api/bus/get_data')\r\n        console.log(response)\r\n        this.isFetching = false\r\n        if(wantApi === \"RAIN\"){\r\n          this.rainData = this.makeTemperature(response.data, wantApi )\r\n          this.isFetchingRain = false;  \r\n        }\r\n        if(wantApi === \"HUMINITY\"){\r\n            this.humidityData = this.makeTemperature(response.data, wantApi )\r\n            this.isFetchingHumi = false;  \r\n          }\r\n         if(wantApi === \"TEMPERATURE\"){\r\n            this.temperatureData = this.makeTemperature(response.data, wantApi )\r\n            this.isFetchingTemp = false;  \r\n          }\r\n         this.setInterval(wantApi); \r\n        }\r\n        //this.setWeatherData(response.data)\r\n      \r\n      catch(e){\r\n        this.error = true\r\n        console.log(e)\r\n      }\r\n    }\r\n\r\n}\r\n","import { observable, action, computed } from 'mobx';\r\nimport io from 'socket.io-client';\r\n\r\nexport default class TimerStore{\r\n    //time 객체 \r\n    // {\r\n    //     nameCode: '', //기기명 코드 \r\n    //     number: '',   // 번호 \r\n    //     time: '',     // 시간 \r\n    //     msg : '' // 서버에 보낼 메세지 \r\n    //     checked : '' //스위치 체킹\r\n    // }\r\n    @observable timerMap = new Map();\r\n    @observable socket = ''\r\n    @observable chatSocket = ''\r\n    clockObj = { hour : '' , minute : ' ' , second : ' '}\r\n\r\n\r\n\r\n    @action\r\n    setStartStopTimer = (name, idx) => {\r\n        this.timerMap[name +'_' +idx].checked = !this.timerMap[name +'_' +idx].checked\r\n    }\r\n    //socketConnection\r\n    @action\r\n    setSocketConnection = () => {\r\n        console.log('hello')\r\n        const socket = io('http://localhost:3031/timer');\r\n        const chatSocket = io('http://localhost:3031/chat');\r\n       // console.log(socket)\r\n        socket.on('connection',() =>{ console.log('connected')});\r\n        // then\r\n        socket.emit(\"chat\", 'hello');\r\n        socket.on(\"chat\", function(data) {\r\n            console.log('Message from Server: ' + data);\r\n        });\r\n        socket.on(\"timer\", function(data) {\r\n            console.log('Message from Server: ' + data);\r\n        });\r\n        this.socket = socket;\r\n        this.chatSocket = chatSocket;\r\n        this.chatMessage();\r\n\r\n        \r\n        //this.timerMessage('name', 1, 1000);\r\n    }\r\n\r\n    @action\r\n    chatMessage = () => {\r\n        console.log(this.chatSocket)\r\n        // 서버로 자신의 정보를 전송한다.\r\n        this.chatSocket.emit(\"chat\", {\r\n            name: 'heelo',\r\n            room: 'ssss',\r\n            msg: 'hello'\r\n        });\r\n           // 서버로부터의 메시지가 수신되면\r\n        this.chatSocket.on(\"chat\", function(data) {\r\n            console.log(data)\r\n        });\r\n    }\r\n\r\n\r\n\r\n    //connection 용\r\n    @action\r\n    timerSetting = (timerObj) =>{\r\n        console.log( \"timer timerSetting\")\r\n        //1.setting timer \r\n        let timerIdentifier = timerObj.name + \"_\" +timerObj.number\r\n       // console.log(this.timerMap.get(timerIdentifier))\r\n        \r\n        this.timerMap.set(timerIdentifier, { \r\n                name: timerObj.name, //기기명 코드 \r\n                number: timerObj.number,   // 번호 \r\n                time: timerObj.time,     // 시간 \r\n                msg : timerObj.msg, // 서버에 보낼 메세지 \r\n                checked : timerObj.checked, //스위치 체킹\r\n                remainTime  : {},\r\n        })\r\n    }\r\n    @action\r\n    startTimer = (timerObj) =>{\r\n        console.log(timerObj.name)\r\n        this.socket.emit(\"startTimer\",{\r\n            name: timerObj.name,\r\n            room: timerObj.name+ \"_\"+ timerObj.number,\r\n            count : timerObj.time\r\n        })\r\n        // 서버로부터의 메시지가 수신되면\r\n        this.socket.on(\"startTimer\", (data)=> {\r\n            console.log('timer return', data.countdown)\r\n            let timerIdentifier = timerObj.name + \"_\" +timerObj.number\r\n\r\n            this.timerMap.get(timerIdentifier).remainTime = this.getTimeCovert(data.countdown);\r\n            //this.time[data.room] = data.countdown\r\n        });\r\n    }\r\n\r\n    @action \r\n    stopTimer = (name, idx) => {\r\n        this.socket.emit(\"stopTimer\",{\r\n            name: name,\r\n            room: \"room\"+idx,\r\n        })\r\n        // 서버로부터의 메시지가 수신되면\r\n        this.socket.on(\"stopTimer\", (data)=> {\r\n            console.log('timer return', data)\r\n            //this.time[data.room] = data.countdown\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    @action \r\n    getTimeCovert = (timerNumber) => {\r\n        let n = timerNumber\r\n        let minute = n / 60;\r\n        console.log(3722/60);\r\n        let second = n % 60;\r\n        let hour = 0;\r\n        if( minute >= 60){\r\n            hour = minute / 60;\r\n            minute = minute % 60 ;\r\n        }\r\n        console.log(parseInt(hour) , parseInt(minute), second ) \r\n        \r\n        return { hour : parseInt(hour),\r\n                 minute : parseInt(minute),\r\n                 second : parseInt(second) }\r\n    }\r\n    \r\n\r\n}","import { observable, action, computed } from 'mobx';\r\nimport _ from 'lodash'\r\nexport default class CalenderStore{\r\n    @observable year = ''\r\n    @observable month = ''\r\n    @observable selectedArr = [];\r\n    @observable monthArray = [];\r\n\r\n    @action\r\n    setSelectedArr = (day) => {\r\n        \r\n    }\r\n}","import { observable, action, computed } from 'mobx';\r\nimport ReactDOM from 'react-dom';\r\nimport _ from 'lodash'\r\nimport * as boardApi from '../lib/api/boardApi'\r\nimport moment from 'moment'\r\nimport history from '../history'\r\nexport default class BoardStore{\r\n    @observable pageCount = ''\r\n    @observable boardList = []\r\n    @observable offset = 0\r\n    @observable PERPAGE = 10;\r\n      // 아래 추가.\r\n    @observable isLast = false;\r\n    @observable isLoading = false;\r\n    @observable renderCount = 1;\r\n    //editor, \r\n    @observable editorHtml = ''\r\n    @observable rawHtml = ''\r\n    @observable showRaw =  false\r\n    @observable lineHeight = 12\r\n    @observable range =  ''\r\n\r\n\r\n    // writeBoard\r\n    @observable thumbnailDisplayUrl;\r\n    @observable thumbnailImg;\r\n\r\n    @observable postJemok;\r\n    @observable options;\r\n    @observable selectedOption;\r\n    @observable isSearchable = true\r\n    @observable isClearable = true\r\n\r\n    @observable boardViewContent = {\r\n        memUsername : '',\r\n        postsJemok : '',\r\n        postsNaeYong : '',\r\n        primeYN : '',\r\n        regDate : '',\r\n        views : '',\r\n        noticeStart : '',\r\n        noticeEnd : '',\r\n    }\r\n\r\n\r\n    @observable headerListId = []\r\n    @observable headerMap = new Map();\r\n    /* Heading TAG 찾기 리스트박스용 */\r\n    @action\r\n    scrollToElement = (key) => {\r\n        console.log(\"scrollToElement key\", key)\r\n        let topPos = this.headerMap.get(key);\r\n        window.scrollTo(0,topPos)\r\n    }\r\n    /* Heading TAG 찾기 리스트박스용 */\r\n    @action\r\n    findHeadingTag = () =>{\r\n        let headerMap = new Map();\r\n        let headerList = document.querySelectorAll( 'h1, h2' );\r\n        let headerListConcatId = []\r\n        let headerListId = []\r\n        headerList.forEach((item, key) =>{\r\n            if( key !== 0 ){\r\n                var topPos = item.offsetTop;\r\n                console.log(topPos)\r\n                item.setAttribute('id' ,item.childNodes[0].textContent + \"_\" + key )\r\n                headerListConcatId.push(item);\r\n                headerListId.push(item.childNodes[0].textContent + \"_\" + key)\r\n                //window.scrollTo(0, topPos) \r\n                //제목은 안됌 \r\n                headerMap.set(item.childNodes[0].textContent + \"_\" + key, topPos)\r\n            }\r\n        })\r\n\r\n        headerListId.forEach((item, key) =>{\r\n            console.log('item  ', item)\r\n        })\r\n        this.headerListId = headerListId;\r\n        this.headerMap = headerMap;\r\n    //     let el = document.querySelector(\"#ㅁㄴㅇㅁㄴㅇㄴㅁㅇㅁㄴㅇㅁㄴ_1\")\r\n    //     console.log(el)\r\n    // }\r\n    }\r\n\r\n    /* WRITEPOSTS 초기화 */\r\n    @action\r\n    init = () =>{\r\n        this.thumbnailDisplayUrl =''\r\n        this.thumbnailImg = ''\r\n        this.postJemok = ''\r\n        // this.options = ''\r\n        this.selectedOption =''\r\n        this.isSearchable = true\r\n        this.isClearable = true\r\n\r\n\r\n        this.editorHtml = ''\r\n        this.rawHtml = ''\r\n        this.showRaw =  false\r\n    }\r\n\r\n\r\n\r\n    /* editor 함수  */\r\n    @action\r\n    change = (rawQuillRef) =>{\r\n        console.log(rawQuillRef.scrollHeight)\r\n        this.lineHeight = rawQuillRef.scrollHeight;\r\n       // this.editorHtml = \"<p>이걸로바껴라</p>\"\r\n    }\r\n\r\n    @action\r\n    handleChange = (html,scrollHeight) => {\r\n       // console.log(html, \"scroll \", this.testref.scrollHeight)\r\n         this.editorHtml =  html;\r\n    }\r\n\r\n    @action\r\n    handleChangeRaw = (html, scrollHeight) => {\r\n          console.log('handleChangeRaw',html, scrollHeight)\r\n          this.rawHtml = html\r\n          this.editorHtml = html\r\n          this.lineHeight = 0 //초기화\r\n          this.lineHeight = scrollHeight //html 코드뷰 크기 리사이\r\n          //console.log(\"lineHeight \", this.lineHeight)\r\n      }\r\n\r\n    @action\r\n    handleClickShowRaw = (rawQuillRef) =>{\r\n        console.log('click handleClickShowRaw', rawQuillRef.scrollHeight)\r\n        const isEditingRaw = this.showRaw;      \r\n     \r\n        this.showRaw = !isEditingRaw \r\n        this.syncViews(isEditingRaw,rawQuillRef)\r\n    }\r\n    @action\r\n      syncViews = (fromRaw, rawQuillRef) => {\r\n          //true일때 \r\n        if (fromRaw) {\r\n            this.editorHtml = this.rawHtml\r\n        }\r\n        //false 일떄 \r\n        else{\r\n          this.rawHtml = this.editorHtml\r\n        }\r\n        console.log(\"rawQuillRef\" , rawQuillRef.scrollHeight)\r\n        console.log(\"this.editorHtml \",this.editorHtml)\r\n        console.log(\"this.rawHtml \",this.rawHtml)\r\n    }\r\n    /* editor 함수  끝 */\r\n\r\n\r\n\r\n    /* write Posts */\r\n    //이미지 업로드 \r\n    @action\r\n    imageUplaod = () =>{ \r\n        if( _.isNil(this.thumbnailImg)){\r\n            return;\r\n        }\r\n        var formData = new FormData();\r\n        formData.append(\"upload\", this.thumbnailImg);\r\n        //formData.append(\"author\", confirm.mem_email);\r\n        console.log('formData ', formData)\r\n        console.log(' input.files[0] ',  this.thumbnailImg)\r\n        //데이터 전송 및 서버에 저장 \r\n        try{\r\n          const response =  boardApi.imageUpload(formData);\r\n          console.log('imageUplaod.response')\r\n\r\n          let name = this.thumbnailImg.name.split('.')[0]\r\n          let ext = this.thumbnailImg.type.split('/')[1]\r\n          //ex http://i.imgur.com/jUwZDLR.jpg \r\n          const GET_IMAGE_URI = \"http://localhost:3031/api/file/image/\"\r\n          let value = GET_IMAGE_URI + name +\".\"+ext\r\n          return value;\r\n        }catch(e){\r\n            console.log('error ', e)\r\n        }\r\n    }\r\n    //썸네일 이미지 컨트롤 \r\n    @action \r\n    selectThumbnail = ()=> {\r\n        console.log('hello')\r\n        const input = document.createElement('input');\r\n        input.setAttribute('type', 'file');\r\n        input.click();\r\n        // // Listen upload local image and save to server\r\n            //05-06 \r\n         input.onchange = async() => {\r\n            this.thumbnailDisplayUrl = URL.createObjectURL(input.files[0])\r\n            this.thumbnailImg  =  input.files[0]\r\n        }\r\n    }\r\n\r\n\r\n    @action\r\n    handlePostsNameChange = (e) => {\r\n        this.postJemok = e.target.value\r\n    }\r\n\r\n     //게시판 선택지 만들기 \r\n     //셀렉트 옵션  //\r\n     @action \r\n    selectHandleChange = (selectedOption) => {\r\n        this.selectedOption =  selectedOption;  \r\n     }\r\n    @action \r\n    makeSelectOption = async() => {\r\n        try{\r\n            const getBoardList = await boardApi.getBoardList();\r\n            let boardList = getBoardList.data;\r\n            console.log(boardList)\r\n            boardList = boardList.map((item) => {\r\n                return {\r\n                    value : item.BOARD_NUM,\r\n                    label : item.BOARD_NAME\r\n                }\r\n            });\r\n            boardList.unshift(\r\n                {\r\n                    value : 0,\r\n                    label : '게시판을 선택해주세요'\r\n                }\r\n            )\r\n           \r\n            this.options = boardList\r\n            \r\n         }catch(e){\r\n            console.log('error' , e )\r\n         }\r\n\r\n     }\r\n\r\n    /* BOARD_NUM, POSTS_NUM, MEM_IDX, POSTS_JEMOK, POSTS_NAEYONG */\r\n    writePosts = async(confirm) => {\r\n       console.log(\"this.selectedOption \" , this.selectedOption)\r\n       if( _.isNull(this.selectedOption)){\r\n          alert('게시판을 선택해주세요!')\r\n          return;\r\n       }\r\n      if(this.selectedOption.BOARD_NUM === 0 ||\r\n          _.isEmpty(this.selectedOption) ) {\r\n           alert('게시판을 선택해주세요!')\r\n           return;\r\n      }\r\n      let thumbnail = this.imageUplaod();\r\n      console.log('thubmNAIL', thumbnail )\r\n      try {\r\n          const getPostsSequence = await boardApi.getPostsSequence();\r\n          let sequence = getPostsSequence.data[0].SEQUENCE\r\n          console.log(sequence)\r\n          console.log('selectedOption.BOARD_NUM ', this.selectedOption.value)\r\n          const response = await boardApi.writePosts(  this.selectedOption.value, \r\n                                                  parseInt(sequence), \r\n                                                  confirm.mem_idx, \r\n                                                  this.postJemok,\r\n                                                  this.editorHtml,\r\n                                                  thumbnail \r\n                                                  //moment(from).format('YYYY/MM/DD 00:00:00'),\r\n                                                  //moment(to).format('YYYY/MM/DD 00:00:00'),\r\n                                                  //checked ? 'Y' : 'N');\r\n          )\r\n          if (response.statusText === \"OK\") { //포스트 작성 성공 \r\n              history.push(\"/board/notice/\" +`${sequence}`);\r\n          }else{\r\n              alert('실패')\r\n          }\r\n      }catch(e){\r\n          console.log(e)\r\n      }\r\n    }\r\n\r\n\r\n\r\n    @action\r\n    setOffset = (offsetnow) =>{\r\n        this.offset = offsetnow;\r\n        this.renderCount += 1;\r\n        this.isLoading = true;\r\n    }\r\n    @action\r\n    setInitForInfScroll = () =>{\r\n        this.offset = 0;\r\n        this.isLoading = false;\r\n        this.isLast = false;\r\n        this.renderCount = 1; \r\n    }\r\n     //PostList 가져오기 \r\n     @action\r\n     getPostsListForInf = async() => {\r\n         try{\r\n             const response =  await boardApi.getPostsList(this.offset);\r\n         \r\n             let postContent = response.data.posts;\r\n             let meta = response.data.meta\r\n             console.log(response)\r\n             console.log(postContent)\r\n             \r\n             let boardList = postContent.map((item) =>{\r\n                         return ({\r\n                                 postsNum : item.POSTS_NUM,\r\n                                 memUsername : item.MEM_USERNAME,\r\n                                 postsJemok : item.POSTS_JEMOK,\r\n                                 postsNaeYong : item.POSTS_NAEYONG,\r\n                                 thumbnail : item.THUMBNAIL,\r\n                                 regDate : moment(item.REG_DATE).format('YYYY.MM.DD HH:MM'),\r\n                                 editDate : moment(item.EDIT_DATE).format('YYYY.MM.DD HH:MM'),\r\n                                 primeYn : item.PRIME_YN,\r\n                                 views: item.VIEWS,\r\n                         })\r\n             })\r\n \r\n             //만약에 \r\n             if( boardList.length > 0 ){\r\n                 if ( boardList[0].primeYn !== 'Y' ){\r\n                 \r\n                 }\r\n             }\r\n            boardList.map((item)=>{\r\n                this.boardList.push(item);\r\n             })\r\n             this.pageCount =  Math.ceil(meta.total_count / meta.limit)\r\n             \r\n             this.isLoading = false;\r\n             \r\n             if( this.offset + 10 > meta.total_count ){\r\n                this.isLast = true;\r\n             }\r\n         }catch(e){\r\n             console.log(e)\r\n         }\r\n     }\r\n \r\n    \r\n\r\n\r\n\r\n\r\n\r\n    //PostList 가져오기 \r\n    @action\r\n    getPostsList = async() => {\r\n        try{\r\n            const response =  await boardApi.getPostsList(this.offset);\r\n        \r\n            let postContent = response.data.posts;\r\n            let meta = response.data.meta\r\n            console.log(response)\r\n            console.log(postContent)\r\n            \r\n            let boardList = postContent.map((item) =>{\r\n                        return ({\r\n                                postsNum : item.POSTS_NUM,\r\n                                memUsername : item.MEM_USERNAME,\r\n                                postsJemok : item.POSTS_JEMOK,\r\n                                postsNaeYong : item.POSTS_NAEYONG,\r\n                                thumbnail : item.THUMBNAIL,\r\n                                regDate : moment(item.REG_DATE).format('YYYY.MM.DD HH:MM'),\r\n                                editDate : moment(item.EDIT_DATE).format('YYYY.MM.DD HH:MM'),\r\n                                primeYn : item.PRIME_YN,\r\n                                views: item.VIEWS,\r\n                        })\r\n            })\r\n\r\n            //만약에 \r\n            if( boardList.length > 0 ){\r\n                if ( boardList[0].primeYn !== 'Y' ){\r\n                \r\n                }\r\n            }\r\n            this.boardList = boardList\r\n            this.pageCount =  Math.ceil(meta.total_count / meta.limit)\r\n    \r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n\r\n    //For VIEW \r\n    //글 읽기 \r\n    @action\r\n    getPosts = async({match}) => {\r\n        let num = match.params.postsNumber;\r\n        console.log(match.url, num)\r\n        try{\r\n            boardApi.setViewsUp(num); // 조회수 업뎃 \r\n            const response = await boardApi.getPosts(num);\r\n            let postContent = response.data[0];\r\n            console.log(\"postContent@@@@@@@, \", postContent)\r\n            let MEM_USERNAME = postContent.MEM_USERNAME;\r\n            let POSTS_JEMOK = postContent.POSTS_JEMOK;\r\n            let POSTS_NAEYONG = postContent.POSTS_NAEYONG;\r\n            let PRIME_YN = postContent.PRIME_YN;\r\n            let REG_DATE = postContent.REG_DATE;\r\n            let VIEWS = postContent.VIEWS + 1;\r\n            let NOTICE_START = postContent.NOTICE_START;\r\n            let NOTICE_END = postContent.NOTICE_END;\r\n            console.log(POSTS_JEMOK)\r\n\r\n            this.boardViewContent ={\r\n                memUsername : MEM_USERNAME,\r\n                postsJemok : POSTS_JEMOK,\r\n                postsNaeYong : POSTS_NAEYONG,\r\n                primeYN : PRIME_YN,\r\n                regDate : REG_DATE,\r\n                views : VIEWS,\r\n                noticeStart : NOTICE_START,\r\n                noticeEnd : NOTICE_END,\r\n            }\r\n\r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'mobx-react';\nimport './index.css';\nimport './Loading.css'\nimport App from './App';\nimport Root from './client/Root'\nimport RootStore from './stores';\n\nconst root = new RootStore(); // *** 루트 스토어 생성\n\n\nReactDOM.render(\n  <Provider {...root}>\n    <Root />\n  </Provider>, document.getElementById('root'));\n","import WordStore from './word'\r\nimport EditStore from './edit';\r\nimport WeatherStore from './weather'\r\nimport TimerStore from './timer'\r\nimport CalenderStore from './calender'\r\nimport BoardStore from './board'\r\nclass RootStore {\r\n    constructor() {\r\n      this.calender = new CalenderStore(this);\r\n      this.edit = new EditStore(this);\r\n      this.word = new WordStore(this);\r\n      this.weather = new WeatherStore(this);\r\n      this.timer = new TimerStore(this);\r\n      this.board = new BoardStore(this);\r\n    }\r\n  }\r\n  \r\nexport default RootStore;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boardSelect\":\"EditBoard_boardSelect__3-AGu\",\"saveButton\":\"EditBoard_saveButton__3vLXi\",\"cancleButton\":\"EditBoard_cancleButton__21Vf7\",\"editerContainer\":\"EditBoard_editerContainer__ZOqSc\",\"jemokContainer\":\"EditBoard_jemokContainer__3JFJI\",\"jemokItem\":\"EditBoard_jemokItem__ADYFi\",\"container\":\"EditBoard_container__3UE2w\",\"buttonContainer\":\"EditBoard_buttonContainer__2Wtd-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentContainer\":\"DashBoard_contentContainer__3xX0B\",\"container\":\"DashBoard_container__2ekQA\",\"wrapper\":\"DashBoard_wrapper__372bK\",\"mainPanel\":\"DashBoard_mainPanel__2aJE4\",\"content\":\"DashBoard_content__1Y4Ju\",\"map\":\"DashBoard_map__-bdfM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPageContainer\":\"MyPage_myPageContainer__2jSVE\",\"outer\":\"MyPage_outer__tMLr8\",\"inner\":\"MyPage_inner__3-vZC\",\"centered\":\"MyPage_centered__2-QUK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notpresentMonth\":\"CalenderItem_notpresentMonth__1WZOd\",\"selectedTr\":\"CalenderItem_selectedTr__2Wuh9\",\"holiday\":\"CalenderItem_holiday__3hSrb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"PasswordChange_tooltip__3O0Ac\",\"tooltip_success\":\"PasswordChange_tooltip_success__15Ih7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidenav\":\"SideBar_sidenav__2Zby5\",\"closebtn\":\"SideBar_closebtn__39dEl\",\"main\":\"SideBar_main__3W-CL\",\"contentContainer\":\"SideBar_contentContainer__38Zsm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropLayout\":\"EditView_dropLayout__1dSi8\",\"rglContainer\":\"EditView_rglContainer__dF4WJ\",\"componentContainer\":\"EditView_componentContainer__MMirS\",\"react_diable_resizing\":\"EditView_react_diable_resizing__26lQD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableItem\":\"Board_tableItem__2sIW3\",\"NoticePosts\":\"Board_NoticePosts__1b__u\"};","/*\n* Client Configuration\n*\n*/\nmodule.exports = {\n   adminEmail : 'txtcopy@naver.com',\n  //adminEmail : 'april3@sk.com'\n  \n  // local dev\n   endpoint: {\n     web: \"http://localhost:3031\",\n     api: \"http://localhost:3031/api\"\n   },\n\n  // // server\n  // endpoint: {\n  //   web: \"http://106.10.51.192:3030\",\n  //   api: \"http://106.10.51.192:3030/api\"\n  // },\n\n  // product\n  // endpoint: {\n  //  web: \"http://211.244.7.139:3030\",\n  //  api: \"http://211.244.7.139:3030/api\"\n  // },\n  // endpoint: {\n  //   web: \"http://cqms.skbroadband.com:3030\",\n  //   api: \"http://cqms.skbroadband.com:3030/api\"\n  //  },\n  // endpoint: {\n  //   web: \"http://211.200.94.220:3030\",\n  //   api: \"http://211.200.94.220:3030/api\"\n  // },\n  // endpoint: {\n  //   web: \"http://cqms-b.skbroadband.com\",\n  //   api: \"http://cqms-b.skbroadband.com/api\"\n  //  },\n  // endpoint: {\n  //   web: \"http://59.30.200.65:3030\",\n  //   api: \"http://59.30.200.65:3030/api\"\n  //  },\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotoSansKR\":\"HumidiyChart_NotoSansKR__273pO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EditableList_Container\":\"EditComponentList_EditableList_Container__2E2I_\",\"EditableList_Component\":\"EditComponentList_EditableList_Component__1NHUP\",\"arrowIcon\":\"EditComponentList_arrowIcon__2rfWL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editButton\":\"Board_editButton__3n6rH\"};","\n/**\n * Global helper functions - client & server\n */\n// ---------------------------------------------------------\n// isEmpty\n//\n// 넘어온 값이 빈값인지 체크합니다.\n// !value 하면 생기는 논리적 오류를 제거하기 위해 명시적으로 value == 사용\n// [], {} 도 빈값으로 처리\n// ---------------------------------------------------------\n\nconst isEmpty = (value) => {\n  if (value === '' || value === 'undefined' || value === 'null'\n    || value === undefined || value === null\n    || (value !== null && typeof value === 'object' && !Object.keys(value).length)) {\n    return true\n  }\n  else {\n    return false\n  }\n}\n\nconst floatCalculator = (number1, number2) =>{ //ref, floor, ceiling\n  let sum =  parseFloat(number1) + parseFloat(number2);\n  let E = Number('1e' + 1);\n  //console.log(\"sum : \" + (sum * E)/E);\n  return (sum * E)/E ;\n};\n\n\n\n\nconst cutSmallPoint = (value, n ) => {\n  //원하는 소숫점 자리만큼 10의 n승 \n  let number =Math.pow(10 , n) \n\n  return Math.floor(value * number) / number;\n}\n\nconst cutSmallPointUseString = (value) =>{\n\n  let SmallPoint = ''\n  if(String(value).indexOf(\".\") !== -1){\n\n    let splitList = String(value).split('.')\n    SmallPoint =  \".\" +splitList[1].substring(0,2);\n    value = splitList[0]\n  }\n\n  return parseFloat( value + SmallPoint)\n}\n\n\n\n/*숫자에 comma  넣기 */\nconst putInsideComma= (value) =>{\n\n  //소숫점 확인하기 \n  let SmallPoint = ''\n  if(String(value).indexOf(\".\") !== -1){\n\n    let splitList = String(value).split('.')\n\n    SmallPoint =  \".\" +splitList[1];\n    value = Math.floor(value)\n   \n  }\n  let len, point, str; \n  value = value + \"\"; \n  point = value.length % 3 ;\n  len = value.length; \n  str = value.substring(0, point); \n  while (point < len) { \n      if (str != \"\") str += \",\"; \n      str += value.substring(point, point + 3); \n      point += 3; \n  } \n  return str + SmallPoint;\n}\n\n/* Moment 함수  */\n\n//과거 n달의 처음 날짜를 보여준다\n/*params : YYYYMMDD, N */\nconst getMonthAgoFirst= (formatDay, monthAgo) => {\n  const moment = require('moment')\n  return moment(formatDay).subtract(monthAgo, 'months').startOf('month').format('YYYYMMDD')\n}\n\n//현재날짜에서 n 날짜를 뺀다\nconst getDayAgo= (formatDay, dayAgo) => {\n  const moment = require('moment')\n  return moment(formatDay).subtract(dayAgo, 'days').format('YYYYMMDD')\n}\nconst getDayAfter= (formatDay, dayAfter) => {\n  const moment = require('moment')\n  return moment(formatDay).add(dayAfter, 'days').format('YYYYMMDD')\n}\n\n\nconst getSundayList  = (beforeDate, afterDate) => {\n  const moment = require('moment')\n  let sundayList = [];\n  // let beforeDate = '20170120';\n  // let afterDate  = '20190129';\n  //console.log(moment(beforeDate).format('YYYY'))\n  let beforeDateYear = moment(beforeDate).format('YYYY')\n  //let beforeDateMonth = moment(beforeDate).format('MM')\n  //let beforeDateDay = moment(beforeDate).format('DD')\n\n  let afterDateYear = moment(afterDate).format('YYYY')\n  //let afterDateMonth = moment(afterDate).format('MM')\n  //let aftereDateDay = moment(afterDate).format('DD')\n  outer: for (let year = beforeDateYear; year <= afterDateYear; year++){\n          for( let month = 1; month <= 12; month++){\n              let date = year + '-' + month\n              let startOfMonth = moment(date).startOf('month').format('YYYY-MM-');\n              let endOfMonth   = moment(date).endOf('month').format('DD');\n              for(let day = 1; day <= parseInt(endOfMonth); day++){\n                  let thisDate = startOfMonth + day\n                  let endDate = moment(afterDate).format('YYYY-MM-DD')\n                  if ( ( moment(startOfMonth + day).weekday()) === 1 ){\n                       //console.log(year + ' ' + month +'month of sunday ' , day)\n                       sundayList[ moment(startOfMonth + day).format('YYYYMMDD')] = true\n                  }\n                  if ( checkDateSame(thisDate, endDate) ){\n                      break outer;\n                  }\n              }\n          }\n      }\n  return sundayList\n}\nconst checkDateSame = (thisDate, endDate) => {\n  if ( thisDate === endDate ){\n      return true\n  }\n  else{\n      return false;\n  }\n}\n\nconst findAndRemove = (originalStr, wantRemoveStr) => {\n  //console.log(originalStr)\n  let originStr = originalStr.slice(0)\n  console.log(originStr)\n  let index = originStr.indexOf(wantRemoveStr);\n  let len = wantRemoveStr.length;\n  if(index !== -1){\n    originStr = originStr.substring(0,index) + originStr.substring(index + len ,originStr.length) \n  }\n  return originStr.replace( /  +/g, ' ' )\n}\n\n\n\n\n// ---------------------------------------------------------\n// check apis - login, auth, ...\n// ---------------------------------------------------------\n\nconst checkLogin = (userId, token) => {\n  if (isEmpty(userId)) {\n    return false;\n  }\n  if (isEmpty(token)) {\n    return false;\n  }\n\n  return true;\n}\n\nconst checkAuth = (userId) => {\n  switch (userId) {\n    // admin\n    case '000001':\n    case '000002':\n    case 'msson':\n      return true;\n    default:\n      return false;\n  }\n}\n\nconst checkAdminUrl = (to) => {\n  switch (to) {\n    case '/admin':\n      return true;\n    default:\n      return false;\n  }\n}\n\nconst checkMobile = () => {\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ;\n}\n\nconst checkEmail = (email) => {\n    return /([\\w-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/.test(email);\n}\n\nconst checkReqUserBrowser = (req) => {\n\n  const header = req.get('user-agent').toString();\n\n  if (header.includes(\"MSIE\")){\n    return \"MSIE\";\n  }\n  else if(header.includes(\"Chrome\")) {\n    return \"Chrome\";\n  }\n  else if(header.includes(\"Opera\")) {\n    return \"Opera\";\n  }\n  return \"Firefox\";\n}\n// ---------------------------------------------------------\n// check file format\n// ---------------------------------------------------------\nconst isImageFormat = (filename) => {\n  return filename.match(/.(jpg|jpeg|png|gif|tiff|bmp)$/i);\n}\n\nconst checkFileFormat = (filename) => {\n  return !filename.match(/.(exe|sh|bat)$/i);\n}\n\n// ---------------------------------------------------------\n// getHash\n// MD5 해쉬를 생성해서 리턴한다. 주로 파일명 해쉬 등에 사용된다.\n// ---------------------------------------------------------\nconst getHash = (data) => {\n  const crypto = require('crypto');\n  return crypto.createHash('md5').update(data).digest('hex');\n}\n\n// ---------------------------------------------------------\n// getRandomInt\n//\n// min (포함) 과 max (불포함) 사이의 임의 정수를 반환\n// ---------------------------------------------------------\nconst getRandomInt = (min, max) => {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\n// ---------------------------------------------------------\n// Restful api error code\n// ---------------------------------------------------------\n\nconst errorCode = {\n  empty: {\n    code: 101,\n    message: 'invalid parameter',\n  },\n  failure: {\n    code: 101,\n    message: 'failure',\n    error: '',\n  },\n  socketFailure: {\n    code: 101,\n    message: 'invalid socket',\n  },\n};\n\nmodule.exports = {\n  // properties\n  errorCode: errorCode,\n\n  // methods\n  getHash: getHash,\n  getRandomInt: getRandomInt,\n\n  isEmpty: isEmpty,\n  isImageFormat: isImageFormat,\n  checkFileFormat: checkFileFormat,\n  checkLogin: checkLogin,\n  checkAuth: checkAuth,\n  checkAdminUrl: checkAdminUrl,\n  checkMobile: checkMobile,\n  checkEmail: checkEmail,\n  checkReqUserBrowser: checkReqUserBrowser,\n\n  putInsideComma : putInsideComma, \n  cutSmallPoint : cutSmallPoint,\n  cutSmallPointUseString : cutSmallPointUseString,\n  floatCalculator : floatCalculator,\n  getMonthAgoFirst : getMonthAgoFirst,\n  getDayAgo : getDayAgo,\n  getDayAfter : getDayAfter,\n  getSundayList: getSundayList,\n  findAndRemove : findAndRemove,\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"DateTimePicker_center__3jR2C\",\"left\":\"DateTimePicker_left__3LfLN\",\"right\":\"DateTimePicker_right__3-d0Y\",\"buttonComponent\":\"DateTimePicker_buttonComponent__3oSJY\",\"searchButtonClickContainer\":\"DateTimePicker_searchButtonClickContainer__66U6j\",\"searchbar_name\":\"DateTimePicker_searchbar_name__2I_--\",\"searchButton\":\"DateTimePicker_searchButton__3nFgu\",\"searchButtonClick\":\"DateTimePicker_searchButtonClick__GQUwM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Notice_modal__1zR6j\",\"header\":\"Notice_header__wCdpf\",\"content\":\"Notice_content__3KM3A\",\"actions\":\"Notice_actions__2a2GT\",\"close\":\"Notice_close__1NREx\",\"buttonFooter\":\"Notice_buttonFooter__2UBgc\",\"checkBox\":\"Notice_checkBox__1Be_x\",\"closeBox\":\"Notice_closeBox__q1cFW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Prompt_modal__2TQvl\",\"header\":\"Prompt_header__3_Lgh\",\"content\":\"Prompt_content__3v-l2\",\"actions\":\"Prompt_actions__qYsZ4\",\"close\":\"Prompt_close__3RB9j\",\"buttonFooter\":\"Prompt_buttonFooter__oTZBg\",\"checkBox\":\"Prompt_checkBox__2SlcC\",\"closeBox\":\"Prompt_closeBox__3uhgQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardviewWraapper\":\"BoardCardView_cardviewWraapper__3Cimr\",\"headPostsName\":\"BoardCardView_headPostsName__3Ol_x\",\"title\":\"BoardCardView_title__1x-0V\",\"panel\":\"BoardCardView_panel__CXrtc\",\"panelHeading\":\"BoardCardView_panelHeading__VE1Q4\",\"panelBody\":\"BoardCardView_panelBody__2qMVF\",\"contentText\":\"BoardCardView_contentText__mtTV9\",\"boardButtonCompo\":\"BoardCardView_boardButtonCompo__2akg7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"thumbnailContainer\":\"WriteBoardCard_thumbnailContainer__kUWYK\",\"boardSelect\":\"WriteBoardCard_boardSelect__1V_Q4\",\"saveButton\":\"WriteBoardCard_saveButton__3KUxV\",\"cancleButton\":\"WriteBoardCard_cancleButton__1Y1ta\",\"editerContainer\":\"WriteBoardCard_editerContainer__3Y7M-\",\"jemokContainer\":\"WriteBoardCard_jemokContainer__1lc83\",\"jemokItem\":\"WriteBoardCard_jemokItem__3FDLB\",\"container\":\"WriteBoardCard_container__1bgso\",\"buttonContainer\":\"WriteBoardCard_buttonContainer__-Zzkt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headPostsName\":\"BoardView_headPostsName__3m_BA\",\"title\":\"BoardView_title__2FbCp\",\"panel\":\"BoardView_panel__2SCRP\",\"panelHeading\":\"BoardView_panelHeading__QqROh\",\"panelBody\":\"BoardView_panelBody__2iwB6\",\"contentText\":\"BoardView_contentText__cQJyn\",\"boardButtonCompo\":\"BoardView_boardButtonCompo__25Fss\"};"],"sourceRoot":""}